{"cells":[{"cell_type":"markdown","id":"d5fa6d3d","metadata":{"id":"d5fa6d3d"},"source":["## 데이터 병합-merge, concat\n","- 데이터가 무조건 완벽한 형태로 있는 것이 아님\n","- 필요한 컬럼들이 한 테이블이 아닌 여러 테이블에 나눠져 있을 수 있음"]},{"cell_type":"markdown","id":"7d4ea423","metadata":{"id":"7d4ea423"},"source":["## concat함수\n","- df + df끼리 합치는 경우(두개의 테이블의 행과 열을 기준으로 붙힌다.\n","- 반드시 데이터프레임 형태만 가능하다.\n","- [디폴트] : axis = 0(행방향) / 인덱스 초기화 X / join = 'outer'\n","- 합집합 형태로 데이터를 묶을 때 편리하다.\n","- 공통된 값이 없이 그냥 데이터를 연결하고자 하는 경우 유용"]},{"cell_type":"code","execution_count":null,"id":"4468e708","metadata":{"id":"4468e708"},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"id":"11de7440","metadata":{"id":"11de7440","outputId":"36ad03fb-6ed3-4f44-8eae-0409849fe710"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>66</td>\n","      <td>80</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>100</td>\n","      <td>32</td>\n","      <td>43</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science\n","0     100    66       80       97\n","1      26    53       45      100\n","2      94   100       32       43"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["# df1: 1반 학생들(3명)의 시험 성적\n","a = [100, 66, 80, 97]\n","b = [26, 53, 45, 100]\n","c = [94, 100, 32, 43]\n","df1 = pd.DataFrame([a,b,c], columns = ['Korean', 'Math', 'English', 'Science'])\n","df1"]},{"cell_type":"code","execution_count":null,"id":"c737b07a","metadata":{"id":"c737b07a","outputId":"de94c7ad-8cf8-4c20-e2c7-fee5563a2884"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>88</td>\n","      <td>94</td>\n","      <td>21</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>82</td>\n","      <td>79</td>\n","      <td>19</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>92</td>\n","      <td>13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science\n","0      88    94       21       39\n","1      82    79       19       87\n","2      20    10       92       13"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["# df2: 2반 학생들(3명)의 시험 성적\n","a = [88, 94, 21, 39]\n","b = [82, 79, 19, 87]\n","c = [20, 10, 92, 13]\n","df2 = pd.DataFrame([a,b,c], columns = ['Korean', 'Math', 'English', 'Science'])\n","df2"]},{"cell_type":"code","execution_count":null,"id":"40e64e02","metadata":{"id":"40e64e02","outputId":"5ff3a3cf-0243-4fdf-a353-5e3889fa7830"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>18</td>\n","      <td>20</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>98</td>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>62</td>\n","      <td>79</td>\n","      <td>65</td>\n","      <td>81</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science\n","0      39    18       20       72\n","1      47    98       50      100\n","2      62    79       65       81"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["# df3: 3반 학생들(3명)의 시험 성적\n","a = [39, 18, 20, 72]\n","b = [47, 98, 50, 100]\n","c = [62, 79, 65, 81]\n","df3 = pd.DataFrame([a,b,c], columns = ['Korean', 'Math', 'English', 'Science'])\n","df3"]},{"cell_type":"code","execution_count":null,"id":"8fe7e6c6","metadata":{"id":"8fe7e6c6","outputId":"537522c6-c4fb-44fe-800e-4f2d1a1e081e"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>66</td>\n","      <td>80</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>100</td>\n","      <td>32</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>88</td>\n","      <td>94</td>\n","      <td>21</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>82</td>\n","      <td>79</td>\n","      <td>19</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>92</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>18</td>\n","      <td>20</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>98</td>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>62</td>\n","      <td>79</td>\n","      <td>65</td>\n","      <td>81</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science\n","0     100    66       80       97\n","1      26    53       45      100\n","2      94   100       32       43\n","0      88    94       21       39\n","1      82    79       19       87\n","2      20    10       92       13\n","0      39    18       20       72\n","1      47    98       50      100\n","2      62    79       65       81"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["pd.concat([df1,df2,df3]) #디폴트 값을 이용해서 합치기 -> 인덱스가 그대로이다."]},{"cell_type":"code","execution_count":null,"id":"291ec38c","metadata":{"id":"291ec38c","outputId":"64f7f814-9cde-4620-864c-aeb1abebe532"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>66</td>\n","      <td>80</td>\n","      <td>97</td>\n","      <td>88</td>\n","      <td>94</td>\n","      <td>21</td>\n","      <td>39</td>\n","      <td>39</td>\n","      <td>18</td>\n","      <td>20</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>100</td>\n","      <td>82</td>\n","      <td>79</td>\n","      <td>19</td>\n","      <td>87</td>\n","      <td>47</td>\n","      <td>98</td>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>100</td>\n","      <td>32</td>\n","      <td>43</td>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>92</td>\n","      <td>13</td>\n","      <td>62</td>\n","      <td>79</td>\n","      <td>65</td>\n","      <td>81</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science  Korean  Math  English  Science  Korean  \\\n","0     100    66       80       97      88    94       21       39      39   \n","1      26    53       45      100      82    79       19       87      47   \n","2      94   100       32       43      20    10       92       13      62   \n","\n","   Math  English  Science  \n","0    18       20       72  \n","1    98       50      100  \n","2    79       65       81  "]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["pd.concat([df1,df2,df3], axis = 1) #열방향으로 붙여지는 형태로 만들어진다."]},{"cell_type":"code","execution_count":null,"id":"788ddecb","metadata":{"id":"788ddecb","outputId":"24cbb99b-8057-4e76-df78-574809fa11a7"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>66</td>\n","      <td>80</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>100</td>\n","      <td>32</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>88</td>\n","      <td>94</td>\n","      <td>21</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>82</td>\n","      <td>79</td>\n","      <td>19</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>92</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>39</td>\n","      <td>18</td>\n","      <td>20</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>47</td>\n","      <td>98</td>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>62</td>\n","      <td>79</td>\n","      <td>65</td>\n","      <td>81</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science\n","0     100    66       80       97\n","1      26    53       45      100\n","2      94   100       32       43\n","3      88    94       21       39\n","4      82    79       19       87\n","5      20    10       92       13\n","6      39    18       20       72\n","7      47    98       50      100\n","8      62    79       65       81"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["pd.concat([df1,df2,df3], ignore_index = True) #인덱스가 초기화되어 0부터 순서대로 매겨짐"]},{"cell_type":"code","execution_count":null,"id":"58552563","metadata":{"id":"58552563","outputId":"4414b09d-2e16-446d-e197-a2579b00d6bc"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>66</td>\n","      <td>80</td>\n","      <td>97</td>\n","      <td>88</td>\n","      <td>94</td>\n","      <td>21</td>\n","      <td>39</td>\n","      <td>39</td>\n","      <td>18</td>\n","      <td>20</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>100</td>\n","      <td>82</td>\n","      <td>79</td>\n","      <td>19</td>\n","      <td>87</td>\n","      <td>47</td>\n","      <td>98</td>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>100</td>\n","      <td>32</td>\n","      <td>43</td>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>92</td>\n","      <td>13</td>\n","      <td>62</td>\n","      <td>79</td>\n","      <td>65</td>\n","      <td>81</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    0    1   2    3   4   5   6   7   8   9   10   11\n","0  100   66  80   97  88  94  21  39  39  18  20   72\n","1   26   53  45  100  82  79  19  87  47  98  50  100\n","2   94  100  32   43  20  10  92  13  62  79  65   81"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["#axis = 1일때는 인덱스가 기존 df들의 컬럼이기 때문에 초기화 된것을 확인 가능하다.\n","pd.concat([df1, df2, df3], axis = 1, ignore_index = True)"]},{"cell_type":"code","execution_count":null,"id":"c85b3a2c","metadata":{"id":"c85b3a2c","outputId":"40f78797-5ec5-4bfc-d74e-47b76ac912ef"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>66</td>\n","      <td>80</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>100</td>\n","      <td>32</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>88</td>\n","      <td>94</td>\n","      <td>21</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>82</td>\n","      <td>79</td>\n","      <td>19</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>92</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>18</td>\n","      <td>20</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>98</td>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>62</td>\n","      <td>79</td>\n","      <td>65</td>\n","      <td>81</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science\n","0     100    66       80       97\n","1      26    53       45      100\n","2      94   100       32       43\n","0      88    94       21       39\n","1      82    79       19       87\n","2      20    10       92       13\n","0      39    18       20       72\n","1      47    98       50      100\n","2      62    79       65       81"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["pd.concat([df1,df2,df3],join = 'inner')\n","#inner일시 컬럼의 이름이 다 똑같으므로 전부 나온다."]},{"cell_type":"code","execution_count":null,"id":"b9b5411b","metadata":{"id":"b9b5411b","outputId":"52448aa6-9fe8-4b95-b007-250e361ea47b"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>D</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>88</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>82</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     A    D\n","0  100   97\n","1   26  100\n","2   94   43\n","0   88   39\n","1   82   87\n","2   20   13"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["#열이름이 다른 때에는 같은 열만 출력\n","df1.columns = ['A', 'B', 'C', 'D']\n","df2.columns = ['A', 'E', 'F', 'D']\n","pd.concat([df1, df2], join = 'inner')"]},{"cell_type":"code","execution_count":null,"id":"4ca33bf9","metadata":{"id":"4ca33bf9","outputId":"e78e1f63-2f48-4ebe-9e4c-9a464fad59c4"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>E</th>\n","      <th>F</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>66.0</td>\n","      <td>80.0</td>\n","      <td>97</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53.0</td>\n","      <td>45.0</td>\n","      <td>100</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>100.0</td>\n","      <td>32.0</td>\n","      <td>43</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>88</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>39</td>\n","      <td>94.0</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>82</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>87</td>\n","      <td>79.0</td>\n","      <td>19.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>13</td>\n","      <td>10.0</td>\n","      <td>92.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     A      B     C    D     E     F\n","0  100   66.0  80.0   97   NaN   NaN\n","1   26   53.0  45.0  100   NaN   NaN\n","2   94  100.0  32.0   43   NaN   NaN\n","0   88    NaN   NaN   39  94.0  21.0\n","1   82    NaN   NaN   87  79.0  19.0\n","2   20    NaN   NaN   13  10.0  92.0"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["#열이름이 다를 시에는 다른 열에는 NAN값이 뜬다.\n","pd.concat([df1,df2])"]},{"cell_type":"code","execution_count":null,"id":"876d160f","metadata":{"id":"876d160f"},"outputs":[],"source":["df1.columns = ['Korean', 'Math', 'English', 'Science']\n","df2.columns = ['Korean', 'Math', 'English', 'Science']"]},{"cell_type":"code","execution_count":null,"id":"7cf7d52d","metadata":{"id":"7cf7d52d","outputId":"9d442990-6823-49be-e524-0ad109100246"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>66</td>\n","      <td>80</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>100</td>\n","      <td>32</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>88</td>\n","      <td>94</td>\n","      <td>21</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>82</td>\n","      <td>79</td>\n","      <td>19</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>92</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>18</td>\n","      <td>20</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>98</td>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>62</td>\n","      <td>79</td>\n","      <td>65</td>\n","      <td>81</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science\n","0     100    66       80       97\n","1      26    53       45      100\n","2      94   100       32       43\n","0      88    94       21       39\n","1      82    79       19       87\n","2      20    10       92       13\n","0      39    18       20       72\n","1      47    98       50      100\n","2      62    79       65       81"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["new_df = pd.concat([df1,df2,df3])\n","new_df"]},{"cell_type":"code","execution_count":null,"id":"628749b5","metadata":{"id":"628749b5","outputId":"dc605851-ca7c-410a-8ad3-8dca584fac16"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>82</td>\n","      <td>79</td>\n","      <td>19</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>98</td>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science\n","1      26    53       45      100\n","1      82    79       19       87\n","1      47    98       50      100"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["new_df.loc[1,] #loc로 인덱싱 할시 인덱스가 1인 값 모두 출력"]},{"cell_type":"code","execution_count":null,"id":"3c6c2eb2","metadata":{"id":"3c6c2eb2","outputId":"3c6f5ab8-7962-4e60-8516-d859b3fc8d29"},"outputs":[{"data":{"text/plain":["Korean      26\n","Math        53\n","English     45\n","Science    100\n","Name: 1, dtype: int64"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["new_df.iloc[1,] #iloc로 인덱싱 할 시 1행만 출력"]},{"cell_type":"code","execution_count":null,"id":"21f05b1d","metadata":{"id":"21f05b1d","outputId":"8074e841-cd49-4e9a-d3d4-8d95553a2f19"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>66</td>\n","      <td>80</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>100</td>\n","      <td>32</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>88</td>\n","      <td>94</td>\n","      <td>21</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>82</td>\n","      <td>79</td>\n","      <td>19</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>92</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>18</td>\n","      <td>20</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>98</td>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>62</td>\n","      <td>79</td>\n","      <td>65</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>96</td>\n","      <td>67</td>\n","      <td>83</td>\n","      <td>44</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science\n","0     100    66       80       97\n","1      26    53       45      100\n","2      94   100       32       43\n","0      88    94       21       39\n","1      82    79       19       87\n","2      20    10       92       13\n","0      39    18       20       72\n","1      47    98       50      100\n","2      62    79       65       81\n","0      96    67       83       44"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["df4 = pd.DataFrame([[96,67,83,44]],columns = ['Korean','Math','English','Science'])\n","pd.concat([new_df, df4])#누락한 값이 있을시 합쳐줄 수 있다."]},{"cell_type":"code","execution_count":null,"id":"3cffda0e","metadata":{"id":"3cffda0e","outputId":"d653dcf2-0d0e-4c4b-f51d-d97807b14af0"},"outputs":[{"name":"stderr","output_type":"stream","text":["C:\\Users\\kimht\\AppData\\Local\\Temp\\ipykernel_12320\\2856950758.py:1: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  new_df.append(df4) #행길이가 1개인 단순한 데이터는 append로 추가해도 동일한 결과\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Korean</th>\n","      <th>Math</th>\n","      <th>English</th>\n","      <th>Science</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>66</td>\n","      <td>80</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>26</td>\n","      <td>53</td>\n","      <td>45</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>94</td>\n","      <td>100</td>\n","      <td>32</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>88</td>\n","      <td>94</td>\n","      <td>21</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>82</td>\n","      <td>79</td>\n","      <td>19</td>\n","      <td>87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>92</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>18</td>\n","      <td>20</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>98</td>\n","      <td>50</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>62</td>\n","      <td>79</td>\n","      <td>65</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>96</td>\n","      <td>67</td>\n","      <td>83</td>\n","      <td>44</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Korean  Math  English  Science\n","0     100    66       80       97\n","1      26    53       45      100\n","2      94   100       32       43\n","0      88    94       21       39\n","1      82    79       19       87\n","2      20    10       92       13\n","0      39    18       20       72\n","1      47    98       50      100\n","2      62    79       65       81\n","0      96    67       83       44"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["new_df.append(df4) #행길이가 1개인 단순한 데이터는 append로 추가해도 동일한 결과"]},{"cell_type":"markdown","id":"9c4da810","metadata":{"id":"9c4da810"},"source":["## merge함수\n","- 두 개의 데이터프레임을 합치는 함수\n","- 공통된 컬럼을 기준으로 병합 -> 공통컬럼이 필수\n","- left : 병합할 첫번째 데이터프레임으로 왼쪽을 기준\n","- right : 병합할 두번째 데이터프레임으로 오른쪽을 기준\n","- on : 조인키로 사용할 컬럼 목록으로, 두 데이터프레임 모두 포함되어야 한다.\n","- left on : 왼쪽데이터프레임에서 조인키로 사용할 컬럼 목록\n","- right on : 오른쪽 데이터프레임에서 조인키로 사용할 컬럼 목록\n","- left_index : 왼쪽 데이터프레임의 조인키로 인덱스를 사용할지 설정\n","- right_index : 오른쪽 데이터프레임의 조인키로 인덱스를 사용할지 설정\n","- how : 조인 방향을 결정하며 디폴트는 'inner'"]},{"cell_type":"code","execution_count":null,"id":"f3c400d6","metadata":{"id":"f3c400d6","outputId":"0cfcb22b-cd1b-4734-edd7-b49ba5188a78"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Num</th>\n","      <th>Fruit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>123</td>\n","      <td>Apple</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>456</td>\n","      <td>Banana</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>789</td>\n","      <td>Cherry</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1011</td>\n","      <td>Lemon</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1112</td>\n","      <td>Peach</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Num   Fruit\n","0   123   Apple\n","1   456  Banana\n","2   789  Cherry\n","3  1011   Lemon\n","4  1112   Peach"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Num</th>\n","      <th>Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>123</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>789</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1314</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Num Grade\n","0   123     A\n","1   789     B\n","2  1314     C"]},"metadata":{},"output_type":"display_data"}],"source":["fruit = pd.DataFrame({'Num':[123, 456, 789, 1011, 1112], 'Fruit':['Apple', 'Banana', 'Cherry', 'Lemon', 'Peach']})\n","grade = pd.DataFrame({'Num':[123, 789, 1314], 'Grade':['A', 'B', 'C']})\n","display(fruit)\n","display(grade)"]},{"cell_type":"code","execution_count":null,"id":"fcf4e7e7","metadata":{"id":"fcf4e7e7","outputId":"926811f5-7e20-4cdf-e865-00685dd716ae"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Num</th>\n","      <th>Fruit</th>\n","      <th>Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>123</td>\n","      <td>Apple</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>789</td>\n","      <td>Cherry</td>\n","      <td>B</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Num   Fruit Grade\n","0  123   Apple     A\n","1  789  Cherry     B"]},"execution_count":32,"metadata":{},"output_type":"execute_result"}],"source":["pd.merge(fruit,grade)#디폴트는 join='inner'이어서 공통된 컬럼에 해당하는 행만 추출"]},{"cell_type":"code","execution_count":null,"id":"d5534939","metadata":{"id":"d5534939","outputId":"2281022e-9166-42dd-9ad1-3a2eb1df7368"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Num</th>\n","      <th>Fruit</th>\n","      <th>Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>123</td>\n","      <td>Apple</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>456</td>\n","      <td>Banana</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>789</td>\n","      <td>Cherry</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1011</td>\n","      <td>Lemon</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1112</td>\n","      <td>Peach</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Num   Fruit Grade\n","0   123   Apple     A\n","1   456  Banana   NaN\n","2   789  Cherry     B\n","3  1011   Lemon   NaN\n","4  1112   Peach   NaN"]},"execution_count":34,"metadata":{},"output_type":"execute_result"}],"source":["pd.merge(fruit,grade,on='Num',how='left')\n","#num컬럼을 기준으로 왼쪽 df에 맞춰서 합쳐지므로 grade컬럼에 Nan값이 발생한다."]},{"cell_type":"code","execution_count":null,"id":"9133c982","metadata":{"id":"9133c982","outputId":"f414fc91-678f-43d1-fa0f-73c8c23633aa"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Num</th>\n","      <th>Fruit</th>\n","      <th>Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>123</td>\n","      <td>Apple</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>789</td>\n","      <td>Cherry</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1314</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Num   Fruit Grade\n","0   123   Apple     A\n","1   789  Cherry     B\n","2  1314     NaN     C"]},"execution_count":36,"metadata":{},"output_type":"execute_result"}],"source":["pd.merge(fruit,grade,on='Num',how = 'right')\n","#오른쪽 데이터를 기준으로 했기 때문에 fruit컬럼에 NaN값이 발생"]},{"cell_type":"code","execution_count":null,"id":"20701a6a","metadata":{"id":"20701a6a","outputId":"151bcc65-3efb-413d-dff2-6114f789942a"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Num</th>\n","      <th>Fruit</th>\n","      <th>Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>123</td>\n","      <td>Apple</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>789</td>\n","      <td>Cherry</td>\n","      <td>B</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Num   Fruit Grade\n","0  123   Apple     A\n","1  789  Cherry     B"]},"execution_count":38,"metadata":{},"output_type":"execute_result"}],"source":["pd.merge(fruit,grade,on='Num',how = 'inner')"]},{"cell_type":"code","execution_count":null,"id":"8e404c17","metadata":{"id":"8e404c17","outputId":"c46bd8d1-c38b-423b-ad4a-c6b393e29d81"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Num</th>\n","      <th>Fruit</th>\n","      <th>Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>123</td>\n","      <td>Apple</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>456</td>\n","      <td>Banana</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>789</td>\n","      <td>Cherry</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1011</td>\n","      <td>Lemon</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1112</td>\n","      <td>Peach</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1314</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Num   Fruit Grade\n","0   123   Apple     A\n","1   456  Banana   NaN\n","2   789  Cherry     B\n","3  1011   Lemon   NaN\n","4  1112   Peach   NaN\n","5  1314     NaN     C"]},"execution_count":39,"metadata":{},"output_type":"execute_result"}],"source":["pd.merge(fruit,grade,on='Num',how = 'outer')"]},{"cell_type":"code","execution_count":null,"id":"7e24f1b2","metadata":{"id":"7e24f1b2"},"outputs":[],"source":["df1 = pd.DataFrame({'이름':['홍길동','김영희','김철수','임꺽정'],\n","                   '영어':[100,50,60,70]})\n","df2 = pd.DataFrame({'이름':['홍길동','김영희','김철수'],\n","                   '수학':[50,100,60]})\n","df3 = pd.DataFrame({'이름':['홍길동','김영희','김철수','임꺽정'],\n","                   '수학':[50,100,60,70],\n","                   '생년월일':['00','01','02','03']})\n","df4 = pd.DataFrame({'name':['홍길동','김영희','김철수'],\n","                   '수학':[50,100,60],\n","                   '지각횟수':[0,1,2]})"]},{"cell_type":"code","execution_count":null,"id":"431ee4ec","metadata":{"id":"431ee4ec","outputId":"60748ece-8a78-41a4-c72f-3cd936b2e507"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>수학</th>\n","      <th>생년월일</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>50</td>\n","      <td>00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>김영희</td>\n","      <td>100</td>\n","      <td>01</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>김철수</td>\n","      <td>60</td>\n","      <td>02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    이름   수학 생년월일\n","0  홍길동   50   00\n","1  김영희  100   01\n","2  김철수   60   02"]},"execution_count":45,"metadata":{},"output_type":"execute_result"}],"source":["pd.merge(df2,df3,on=['이름','수학'])#기준열을 두개 이상으로 설정 가능"]},{"cell_type":"code","execution_count":null,"id":"231ff47e","metadata":{"id":"231ff47e","outputId":"cc41bbcf-fd00-4aaa-bf01-bbac6137da80"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>이름</th>\n","      <th>수학_x</th>\n","      <th>생년월일</th>\n","      <th>name</th>\n","      <th>수학_y</th>\n","      <th>지각횟수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>홍길동</td>\n","      <td>50</td>\n","      <td>00</td>\n","      <td>홍길동</td>\n","      <td>50</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>김영희</td>\n","      <td>100</td>\n","      <td>01</td>\n","      <td>김영희</td>\n","      <td>100</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>김철수</td>\n","      <td>60</td>\n","      <td>02</td>\n","      <td>김철수</td>\n","      <td>60</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    이름  수학_x 생년월일 name  수학_y  지각횟수\n","0  홍길동    50   00  홍길동    50     0\n","1  김영희   100   01  김영희   100     1\n","2  김철수    60   02  김철수    60     2"]},"execution_count":47,"metadata":{},"output_type":"execute_result"}],"source":["pd.merge(df3,df4, left_on=['이름'],right_on=['name'])\n","#컬럼의 이름은 다르지만 내용은 같은 컬럼의 경우 각각을 기준으로 묶어줄 수 있다."]},{"cell_type":"code","execution_count":null,"id":"00d20974","metadata":{"id":"00d20974"},"outputs":[],"source":["df3_sp=df3.set_index('이름')"]},{"cell_type":"code","execution_count":null,"id":"c72d99e4","metadata":{"id":"c72d99e4","outputId":"5eae9afa-a329-4b9b-ffe9-3d2eaef8e885"},"outputs":[{"data":{"text/plain":["Index(['홍길동', '김영희', '김철수', '임꺽정'], dtype='object', name='이름')"]},"execution_count":49,"metadata":{},"output_type":"execute_result"}],"source":["df3_sp.index"]},{"cell_type":"code","execution_count":null,"id":"02dcd8fd","metadata":{"id":"02dcd8fd","outputId":"8d60ed93-a579-4697-8c65-8f78319d995a"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>수학_x</th>\n","      <th>생년월일</th>\n","      <th>name</th>\n","      <th>수학_y</th>\n","      <th>지각횟수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50</td>\n","      <td>00</td>\n","      <td>홍길동</td>\n","      <td>50</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>100</td>\n","      <td>01</td>\n","      <td>김영희</td>\n","      <td>100</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>60</td>\n","      <td>02</td>\n","      <td>김철수</td>\n","      <td>60</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   수학_x 생년월일 name  수학_y  지각횟수\n","0    50   00  홍길동    50     0\n","1   100   01  김영희   100     1\n","2    60   02  김철수    60     2"]},"execution_count":50,"metadata":{},"output_type":"execute_result"}],"source":["pd.merge(df3_sp, df4, left_index=True, right_on='name')\n","#인덱스가 숫자가 아닌 이름으로 설정되어서 그냥 인덱스를 기준으로 묶을 수 있다."]},{"cell_type":"code","execution_count":null,"id":"18604ca0","metadata":{"id":"18604ca0"},"outputs":[],"source":["site = pd.read_csv('../BDA/CSV/survey_site.csv')\n","survey = pd.read_csv('../BDA/CSV/survey_survey.csv')\n","visited = pd.read_csv('../BDA/CSV/survey_visited.csv')"]},{"cell_type":"code","execution_count":null,"id":"f39f707a","metadata":{"id":"f39f707a","outputId":"d1007c8b-8358-4ec6-d532-143c31ccc2fc"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>lat</th>\n","      <th>long</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DR-1</td>\n","      <td>-49.85</td>\n","      <td>-128.57</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MSK-4</td>\n","      <td>-48.87</td>\n","      <td>-123.40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    name    lat    long\n","0   DR-1 -49.85 -128.57\n","1   DR-3 -47.15 -126.72\n","2  MSK-4 -48.87 -123.40"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["site"]},{"cell_type":"code","execution_count":null,"id":"a3bdc8ab","metadata":{"id":"a3bdc8ab","outputId":"de3fd1a3-7eaa-4a0c-d6f1-5d554d802b95"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>taken</th>\n","      <th>person</th>\n","      <th>quant</th>\n","      <th>reading</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>619</td>\n","      <td>dyer</td>\n","      <td>rad</td>\n","      <td>9.82</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>619</td>\n","      <td>dyer</td>\n","      <td>sal</td>\n","      <td>0.13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>622</td>\n","      <td>dyer</td>\n","      <td>rad</td>\n","      <td>7.80</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>622</td>\n","      <td>dyer</td>\n","      <td>sal</td>\n","      <td>0.09</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>734</td>\n","      <td>pb</td>\n","      <td>rad</td>\n","      <td>8.41</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>734</td>\n","      <td>lake</td>\n","      <td>sal</td>\n","      <td>0.05</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>734</td>\n","      <td>pb</td>\n","      <td>temp</td>\n","      <td>-21.50</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>735</td>\n","      <td>pb</td>\n","      <td>rad</td>\n","      <td>7.22</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>735</td>\n","      <td>NaN</td>\n","      <td>sal</td>\n","      <td>0.06</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>735</td>\n","      <td>NaN</td>\n","      <td>temp</td>\n","      <td>-26.00</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>751</td>\n","      <td>pb</td>\n","      <td>rad</td>\n","      <td>4.35</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>751</td>\n","      <td>pb</td>\n","      <td>temp</td>\n","      <td>-18.50</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>751</td>\n","      <td>lake</td>\n","      <td>sal</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>752</td>\n","      <td>lake</td>\n","      <td>rad</td>\n","      <td>2.19</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>752</td>\n","      <td>lake</td>\n","      <td>sal</td>\n","      <td>0.09</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>752</td>\n","      <td>lake</td>\n","      <td>temp</td>\n","      <td>-16.00</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>752</td>\n","      <td>roe</td>\n","      <td>sal</td>\n","      <td>41.60</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>837</td>\n","      <td>lake</td>\n","      <td>rad</td>\n","      <td>1.46</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>837</td>\n","      <td>lake</td>\n","      <td>sal</td>\n","      <td>0.21</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>837</td>\n","      <td>roe</td>\n","      <td>sal</td>\n","      <td>22.50</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>844</td>\n","      <td>roe</td>\n","      <td>rad</td>\n","      <td>11.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    taken person quant  reading\n","0     619   dyer   rad     9.82\n","1     619   dyer   sal     0.13\n","2     622   dyer   rad     7.80\n","3     622   dyer   sal     0.09\n","4     734     pb   rad     8.41\n","5     734   lake   sal     0.05\n","6     734     pb  temp   -21.50\n","7     735     pb   rad     7.22\n","8     735    NaN   sal     0.06\n","9     735    NaN  temp   -26.00\n","10    751     pb   rad     4.35\n","11    751     pb  temp   -18.50\n","12    751   lake   sal     0.10\n","13    752   lake   rad     2.19\n","14    752   lake   sal     0.09\n","15    752   lake  temp   -16.00\n","16    752    roe   sal    41.60\n","17    837   lake   rad     1.46\n","18    837   lake   sal     0.21\n","19    837    roe   sal    22.50\n","20    844    roe   rad    11.25"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["survey"]},{"cell_type":"code","execution_count":null,"id":"d4b89b4d","metadata":{"id":"d4b89b4d","outputId":"63da6f30-4909-4194-a4d5-297cd2698e2c"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ident</th>\n","      <th>site</th>\n","      <th>dated</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>619</td>\n","      <td>DR-1</td>\n","      <td>1927-02-08</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>622</td>\n","      <td>DR-1</td>\n","      <td>1927-02-10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>734</td>\n","      <td>DR-3</td>\n","      <td>1939-01-07</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>735</td>\n","      <td>DR-3</td>\n","      <td>1930-01-12</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>751</td>\n","      <td>DR-3</td>\n","      <td>1930-02-26</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>752</td>\n","      <td>DR-3</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>837</td>\n","      <td>MSK-4</td>\n","      <td>1932-01-14</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>844</td>\n","      <td>DR-1</td>\n","      <td>1932-03-22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   ident   site       dated\n","0    619   DR-1  1927-02-08\n","1    622   DR-1  1927-02-10\n","2    734   DR-3  1939-01-07\n","3    735   DR-3  1930-01-12\n","4    751   DR-3  1930-02-26\n","5    752   DR-3         NaN\n","6    837  MSK-4  1932-01-14\n","7    844   DR-1  1932-03-22"]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["visited"]},{"cell_type":"code","execution_count":null,"id":"f0f8af88","metadata":{"id":"f0f8af88"},"outputs":[],"source":["site_visited=pd.merge(site,visited,left_on=['name'],right_on = ['site'],how = 'inner')"]},{"cell_type":"code","execution_count":null,"id":"f211ee5d","metadata":{"id":"f211ee5d","outputId":"2b18777d-3705-48a2-cded-f885974d4da3"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>lat</th>\n","      <th>long</th>\n","      <th>ident</th>\n","      <th>site</th>\n","      <th>dated</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DR-1</td>\n","      <td>-49.85</td>\n","      <td>-128.57</td>\n","      <td>619</td>\n","      <td>DR-1</td>\n","      <td>1927-02-08</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>DR-1</td>\n","      <td>-49.85</td>\n","      <td>-128.57</td>\n","      <td>622</td>\n","      <td>DR-1</td>\n","      <td>1927-02-10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>DR-1</td>\n","      <td>-49.85</td>\n","      <td>-128.57</td>\n","      <td>844</td>\n","      <td>DR-1</td>\n","      <td>1932-03-22</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>734</td>\n","      <td>DR-3</td>\n","      <td>1939-01-07</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>735</td>\n","      <td>DR-3</td>\n","      <td>1930-01-12</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>751</td>\n","      <td>DR-3</td>\n","      <td>1930-02-26</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>752</td>\n","      <td>DR-3</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>MSK-4</td>\n","      <td>-48.87</td>\n","      <td>-123.40</td>\n","      <td>837</td>\n","      <td>MSK-4</td>\n","      <td>1932-01-14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    name    lat    long  ident   site       dated\n","0   DR-1 -49.85 -128.57    619   DR-1  1927-02-08\n","1   DR-1 -49.85 -128.57    622   DR-1  1927-02-10\n","2   DR-1 -49.85 -128.57    844   DR-1  1932-03-22\n","3   DR-3 -47.15 -126.72    734   DR-3  1939-01-07\n","4   DR-3 -47.15 -126.72    735   DR-3  1930-01-12\n","5   DR-3 -47.15 -126.72    751   DR-3  1930-02-26\n","6   DR-3 -47.15 -126.72    752   DR-3         NaN\n","7  MSK-4 -48.87 -123.40    837  MSK-4  1932-01-14"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["site_visited"]},{"cell_type":"code","execution_count":null,"id":"1cd77b2f","metadata":{"id":"1cd77b2f","outputId":"93716a86-103f-49a4-ec98-81e4d48c9e08"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>taken</th>\n","      <th>person</th>\n","      <th>quant</th>\n","      <th>reading</th>\n","      <th>name</th>\n","      <th>lat</th>\n","      <th>long</th>\n","      <th>ident</th>\n","      <th>site</th>\n","      <th>dated</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>619</td>\n","      <td>dyer</td>\n","      <td>rad</td>\n","      <td>9.82</td>\n","      <td>DR-1</td>\n","      <td>-49.85</td>\n","      <td>-128.57</td>\n","      <td>619</td>\n","      <td>DR-1</td>\n","      <td>1927-02-08</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>619</td>\n","      <td>dyer</td>\n","      <td>sal</td>\n","      <td>0.13</td>\n","      <td>DR-1</td>\n","      <td>-49.85</td>\n","      <td>-128.57</td>\n","      <td>619</td>\n","      <td>DR-1</td>\n","      <td>1927-02-08</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>622</td>\n","      <td>dyer</td>\n","      <td>rad</td>\n","      <td>7.80</td>\n","      <td>DR-1</td>\n","      <td>-49.85</td>\n","      <td>-128.57</td>\n","      <td>622</td>\n","      <td>DR-1</td>\n","      <td>1927-02-10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>622</td>\n","      <td>dyer</td>\n","      <td>sal</td>\n","      <td>0.09</td>\n","      <td>DR-1</td>\n","      <td>-49.85</td>\n","      <td>-128.57</td>\n","      <td>622</td>\n","      <td>DR-1</td>\n","      <td>1927-02-10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>734</td>\n","      <td>pb</td>\n","      <td>rad</td>\n","      <td>8.41</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>734</td>\n","      <td>DR-3</td>\n","      <td>1939-01-07</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>734</td>\n","      <td>lake</td>\n","      <td>sal</td>\n","      <td>0.05</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>734</td>\n","      <td>DR-3</td>\n","      <td>1939-01-07</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>734</td>\n","      <td>pb</td>\n","      <td>temp</td>\n","      <td>-21.50</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>734</td>\n","      <td>DR-3</td>\n","      <td>1939-01-07</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>735</td>\n","      <td>pb</td>\n","      <td>rad</td>\n","      <td>7.22</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>735</td>\n","      <td>DR-3</td>\n","      <td>1930-01-12</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>735</td>\n","      <td>NaN</td>\n","      <td>sal</td>\n","      <td>0.06</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>735</td>\n","      <td>DR-3</td>\n","      <td>1930-01-12</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>735</td>\n","      <td>NaN</td>\n","      <td>temp</td>\n","      <td>-26.00</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>735</td>\n","      <td>DR-3</td>\n","      <td>1930-01-12</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>751</td>\n","      <td>pb</td>\n","      <td>rad</td>\n","      <td>4.35</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>751</td>\n","      <td>DR-3</td>\n","      <td>1930-02-26</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>751</td>\n","      <td>pb</td>\n","      <td>temp</td>\n","      <td>-18.50</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>751</td>\n","      <td>DR-3</td>\n","      <td>1930-02-26</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>751</td>\n","      <td>lake</td>\n","      <td>sal</td>\n","      <td>0.10</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>751</td>\n","      <td>DR-3</td>\n","      <td>1930-02-26</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>752</td>\n","      <td>lake</td>\n","      <td>rad</td>\n","      <td>2.19</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>752</td>\n","      <td>DR-3</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>752</td>\n","      <td>lake</td>\n","      <td>sal</td>\n","      <td>0.09</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>752</td>\n","      <td>DR-3</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>752</td>\n","      <td>lake</td>\n","      <td>temp</td>\n","      <td>-16.00</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>752</td>\n","      <td>DR-3</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>752</td>\n","      <td>roe</td>\n","      <td>sal</td>\n","      <td>41.60</td>\n","      <td>DR-3</td>\n","      <td>-47.15</td>\n","      <td>-126.72</td>\n","      <td>752</td>\n","      <td>DR-3</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>837</td>\n","      <td>lake</td>\n","      <td>rad</td>\n","      <td>1.46</td>\n","      <td>MSK-4</td>\n","      <td>-48.87</td>\n","      <td>-123.40</td>\n","      <td>837</td>\n","      <td>MSK-4</td>\n","      <td>1932-01-14</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>837</td>\n","      <td>lake</td>\n","      <td>sal</td>\n","      <td>0.21</td>\n","      <td>MSK-4</td>\n","      <td>-48.87</td>\n","      <td>-123.40</td>\n","      <td>837</td>\n","      <td>MSK-4</td>\n","      <td>1932-01-14</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>837</td>\n","      <td>roe</td>\n","      <td>sal</td>\n","      <td>22.50</td>\n","      <td>MSK-4</td>\n","      <td>-48.87</td>\n","      <td>-123.40</td>\n","      <td>837</td>\n","      <td>MSK-4</td>\n","      <td>1932-01-14</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>844</td>\n","      <td>roe</td>\n","      <td>rad</td>\n","      <td>11.25</td>\n","      <td>DR-1</td>\n","      <td>-49.85</td>\n","      <td>-128.57</td>\n","      <td>844</td>\n","      <td>DR-1</td>\n","      <td>1932-03-22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    taken person quant  reading   name    lat    long  ident   site  \\\n","0     619   dyer   rad     9.82   DR-1 -49.85 -128.57    619   DR-1   \n","1     619   dyer   sal     0.13   DR-1 -49.85 -128.57    619   DR-1   \n","2     622   dyer   rad     7.80   DR-1 -49.85 -128.57    622   DR-1   \n","3     622   dyer   sal     0.09   DR-1 -49.85 -128.57    622   DR-1   \n","4     734     pb   rad     8.41   DR-3 -47.15 -126.72    734   DR-3   \n","5     734   lake   sal     0.05   DR-3 -47.15 -126.72    734   DR-3   \n","6     734     pb  temp   -21.50   DR-3 -47.15 -126.72    734   DR-3   \n","7     735     pb   rad     7.22   DR-3 -47.15 -126.72    735   DR-3   \n","8     735    NaN   sal     0.06   DR-3 -47.15 -126.72    735   DR-3   \n","9     735    NaN  temp   -26.00   DR-3 -47.15 -126.72    735   DR-3   \n","10    751     pb   rad     4.35   DR-3 -47.15 -126.72    751   DR-3   \n","11    751     pb  temp   -18.50   DR-3 -47.15 -126.72    751   DR-3   \n","12    751   lake   sal     0.10   DR-3 -47.15 -126.72    751   DR-3   \n","13    752   lake   rad     2.19   DR-3 -47.15 -126.72    752   DR-3   \n","14    752   lake   sal     0.09   DR-3 -47.15 -126.72    752   DR-3   \n","15    752   lake  temp   -16.00   DR-3 -47.15 -126.72    752   DR-3   \n","16    752    roe   sal    41.60   DR-3 -47.15 -126.72    752   DR-3   \n","17    837   lake   rad     1.46  MSK-4 -48.87 -123.40    837  MSK-4   \n","18    837   lake   sal     0.21  MSK-4 -48.87 -123.40    837  MSK-4   \n","19    837    roe   sal    22.50  MSK-4 -48.87 -123.40    837  MSK-4   \n","20    844    roe   rad    11.25   DR-1 -49.85 -128.57    844   DR-1   \n","\n","         dated  \n","0   1927-02-08  \n","1   1927-02-08  \n","2   1927-02-10  \n","3   1927-02-10  \n","4   1939-01-07  \n","5   1939-01-07  \n","6   1939-01-07  \n","7   1930-01-12  \n","8   1930-01-12  \n","9   1930-01-12  \n","10  1930-02-26  \n","11  1930-02-26  \n","12  1930-02-26  \n","13         NaN  \n","14         NaN  \n","15         NaN  \n","16         NaN  \n","17  1932-01-14  \n","18  1932-01-14  \n","19  1932-01-14  \n","20  1932-03-22  "]},"execution_count":26,"metadata":{},"output_type":"execute_result"}],"source":["pd.merge(survey,site_visited,left_on=['taken'],right_on = ['ident'],how = 'inner')"]},{"cell_type":"code","execution_count":null,"id":"1dea4f57","metadata":{"id":"1dea4f57"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"id":"6595a414","metadata":{"id":"6595a414"},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.12"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}