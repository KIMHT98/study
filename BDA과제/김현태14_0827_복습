{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP7wOBNxBkFZOCbrn6Cxqym"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-uBEy0zBAg3R","executionInfo":{"status":"ok","timestamp":1693468884443,"user_tz":-540,"elapsed":23201,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"dd4fabe3-04b1-4cf5-8a6c-413ff076f749"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":2,"metadata":{"id":"ihw8O0EBAXSr","executionInfo":{"status":"ok","timestamp":1693468887658,"user_tz":-540,"elapsed":3219,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/BDA_CSV/salary_class.csv')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":756},"id":"6GB60cjaAcBd","executionInfo":{"status":"ok","timestamp":1693468888165,"user_tz":-540,"elapsed":519,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"e8fa8500-57f3-45ba-f5a8-ef64f18d0194"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0  age     workclass     education  education-num  \\\n","0               0   25       Private          11th              7   \n","1               1   38       Private       HS-grad              9   \n","2               2   28     Local-gov    Assoc-acdm             12   \n","3               3   44       Private  Some-college             10   \n","4               4   18           NaN  Some-college             10   \n","...           ...  ...           ...           ...            ...   \n","48837       48837   27       Private    Assoc-acdm             12   \n","48838       48838   40       Private       HS-grad              9   \n","48839       48839   58       Private       HS-grad              9   \n","48840       48840   22       Private       HS-grad              9   \n","48841       48841   52  Self-emp-inc       HS-grad              9   \n","\n","           marital-status         occupation relationship   race     sex  \\\n","0           Never-married  Machine-op-inspct    Own-child  Black    Male   \n","1      Married-civ-spouse    Farming-fishing      Husband  White    Male   \n","2      Married-civ-spouse    Protective-serv      Husband  White    Male   \n","3      Married-civ-spouse  Machine-op-inspct      Husband  Black    Male   \n","4           Never-married                NaN    Own-child  White  Female   \n","...                   ...                ...          ...    ...     ...   \n","48837  Married-civ-spouse       Tech-support         Wife  White  Female   \n","48838  Married-civ-spouse  Machine-op-inspct      Husband  White    Male   \n","48839             Widowed       Adm-clerical    Unmarried  White  Female   \n","48840       Never-married       Adm-clerical    Own-child  White    Male   \n","48841  Married-civ-spouse    Exec-managerial         Wife  White  Female   \n","\n","       capital-gain  capital-loss  hours-per-week native-country  class  \n","0                 0             0              40  United-States      0  \n","1                 0             0              50  United-States      0  \n","2                 0             0              40  United-States      1  \n","3              7688             0              40  United-States      1  \n","4                 0             0              30  United-States      0  \n","...             ...           ...             ...            ...    ...  \n","48837             0             0              38  United-States      0  \n","48838             0             0              40  United-States      1  \n","48839             0             0              40  United-States      0  \n","48840             0             0              20  United-States      0  \n","48841         15024             0              40  United-States      1  \n","\n","[48842 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-601a0a18-4450-4b13-99bb-65cd2175eb5c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>education-num</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>25</td>\n","      <td>Private</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Never-married</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Own-child</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Farming-fishing</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>28</td>\n","      <td>Local-gov</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Protective-serv</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>44</td>\n","      <td>Private</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>18</td>\n","      <td>NaN</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Never-married</td>\n","      <td>NaN</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>48837</td>\n","      <td>27</td>\n","      <td>Private</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Tech-support</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>48838</td>\n","      <td>40</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>48839</td>\n","      <td>58</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Widowed</td>\n","      <td>Adm-clerical</td>\n","      <td>Unmarried</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>48840</td>\n","      <td>22</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>48841</td>\n","      <td>52</td>\n","      <td>Self-emp-inc</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>15024</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>48842 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-601a0a18-4450-4b13-99bb-65cd2175eb5c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-601a0a18-4450-4b13-99bb-65cd2175eb5c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-601a0a18-4450-4b13-99bb-65cd2175eb5c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bec97342-4e3b-4b40-aa10-85aa738370bc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bec97342-4e3b-4b40-aa10-85aa738370bc')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bec97342-4e3b-4b40-aa10-85aa738370bc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.info()#결측값 유무 확인"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KruKExNsCiC6","executionInfo":{"status":"ok","timestamp":1693468888166,"user_tz":-540,"elapsed":21,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"ac8e5066-2ccf-4452-eda5-09ecdf62dab7"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 48842 entries, 0 to 48841\n","Data columns (total 15 columns):\n"," #   Column          Non-Null Count  Dtype \n","---  ------          --------------  ----- \n"," 0   Unnamed: 0      48842 non-null  int64 \n"," 1   age             48842 non-null  int64 \n"," 2   workclass       46043 non-null  object\n"," 3   education       48842 non-null  object\n"," 4   education-num   48842 non-null  int64 \n"," 5   marital-status  48842 non-null  object\n"," 6   occupation      46033 non-null  object\n"," 7   relationship    48842 non-null  object\n"," 8   race            48842 non-null  object\n"," 9   sex             48842 non-null  object\n"," 10  capital-gain    48842 non-null  int64 \n"," 11  capital-loss    48842 non-null  int64 \n"," 12  hours-per-week  48842 non-null  int64 \n"," 13  native-country  47985 non-null  object\n"," 14  class           48842 non-null  int64 \n","dtypes: int64(7), object(8)\n","memory usage: 5.6+ MB\n"]}]},{"cell_type":"code","source":["df.describe()#수치형 데이터의 요약통계량"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":318},"id":"BUFEHqAsCwJb","executionInfo":{"status":"ok","timestamp":1693468888167,"user_tz":-540,"elapsed":16,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"9b70dabd-d3ed-494d-9a65-bead9bb9d4d2"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Unnamed: 0           age  education-num  capital-gain  capital-loss  \\\n","count  48842.000000  48842.000000   48842.000000  48842.000000  48842.000000   \n","mean   24420.500000     38.643585      10.078089   1079.067626     87.502314   \n","std    14099.615261     13.710510       2.570973   7452.019058    403.004552   \n","min        0.000000     17.000000       1.000000      0.000000      0.000000   \n","25%    12210.250000     28.000000       9.000000      0.000000      0.000000   \n","50%    24420.500000     37.000000      10.000000      0.000000      0.000000   \n","75%    36630.750000     48.000000      12.000000      0.000000      0.000000   \n","max    48841.000000     90.000000      16.000000  99999.000000   4356.000000   \n","\n","       hours-per-week         class  \n","count    48842.000000  48842.000000  \n","mean        40.422382      0.239282  \n","std         12.391444      0.426649  \n","min          1.000000      0.000000  \n","25%         40.000000      0.000000  \n","50%         40.000000      0.000000  \n","75%         45.000000      0.000000  \n","max         99.000000      1.000000  "],"text/html":["\n","  <div id=\"df-9275a118-8cec-47d8-9ed1-d5560eaed16a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>age</th>\n","      <th>education-num</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>48842.000000</td>\n","      <td>48842.000000</td>\n","      <td>48842.000000</td>\n","      <td>48842.000000</td>\n","      <td>48842.000000</td>\n","      <td>48842.000000</td>\n","      <td>48842.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>24420.500000</td>\n","      <td>38.643585</td>\n","      <td>10.078089</td>\n","      <td>1079.067626</td>\n","      <td>87.502314</td>\n","      <td>40.422382</td>\n","      <td>0.239282</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>14099.615261</td>\n","      <td>13.710510</td>\n","      <td>2.570973</td>\n","      <td>7452.019058</td>\n","      <td>403.004552</td>\n","      <td>12.391444</td>\n","      <td>0.426649</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>17.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>12210.250000</td>\n","      <td>28.000000</td>\n","      <td>9.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>24420.500000</td>\n","      <td>37.000000</td>\n","      <td>10.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>36630.750000</td>\n","      <td>48.000000</td>\n","      <td>12.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>45.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>48841.000000</td>\n","      <td>90.000000</td>\n","      <td>16.000000</td>\n","      <td>99999.000000</td>\n","      <td>4356.000000</td>\n","      <td>99.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9275a118-8cec-47d8-9ed1-d5560eaed16a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9275a118-8cec-47d8-9ed1-d5560eaed16a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9275a118-8cec-47d8-9ed1-d5560eaed16a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-479faff4-c2ce-4f35-89c7-5c93a3c129ea\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-479faff4-c2ce-4f35-89c7-5c93a3c129ea')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-479faff4-c2ce-4f35-89c7-5c93a3c129ea button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.describe(include = 'all')#범주형 데이터도 볼 수 있다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"TTCNvtJJCx1I","executionInfo":{"status":"ok","timestamp":1693468889251,"user_tz":-540,"elapsed":1098,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"d7670a76-58f2-4c42-bf83-90a8b6f9315c"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Unnamed: 0           age workclass education  education-num  \\\n","count   48842.000000  48842.000000     46043     48842   48842.000000   \n","unique           NaN           NaN         8        16            NaN   \n","top              NaN           NaN   Private   HS-grad            NaN   \n","freq             NaN           NaN     33906     15784            NaN   \n","mean    24420.500000     38.643585       NaN       NaN      10.078089   \n","std     14099.615261     13.710510       NaN       NaN       2.570973   \n","min         0.000000     17.000000       NaN       NaN       1.000000   \n","25%     12210.250000     28.000000       NaN       NaN       9.000000   \n","50%     24420.500000     37.000000       NaN       NaN      10.000000   \n","75%     36630.750000     48.000000       NaN       NaN      12.000000   \n","max     48841.000000     90.000000       NaN       NaN      16.000000   \n","\n","            marital-status      occupation relationship   race    sex  \\\n","count                48842           46033        48842  48842  48842   \n","unique                   7              14            6      5      2   \n","top     Married-civ-spouse  Prof-specialty      Husband  White   Male   \n","freq                 22379            6172        19716  41762  32650   \n","mean                   NaN             NaN          NaN    NaN    NaN   \n","std                    NaN             NaN          NaN    NaN    NaN   \n","min                    NaN             NaN          NaN    NaN    NaN   \n","25%                    NaN             NaN          NaN    NaN    NaN   \n","50%                    NaN             NaN          NaN    NaN    NaN   \n","75%                    NaN             NaN          NaN    NaN    NaN   \n","max                    NaN             NaN          NaN    NaN    NaN   \n","\n","        capital-gain  capital-loss  hours-per-week native-country  \\\n","count   48842.000000  48842.000000    48842.000000          47985   \n","unique           NaN           NaN             NaN             41   \n","top              NaN           NaN             NaN  United-States   \n","freq             NaN           NaN             NaN          43832   \n","mean     1079.067626     87.502314       40.422382            NaN   \n","std      7452.019058    403.004552       12.391444            NaN   \n","min         0.000000      0.000000        1.000000            NaN   \n","25%         0.000000      0.000000       40.000000            NaN   \n","50%         0.000000      0.000000       40.000000            NaN   \n","75%         0.000000      0.000000       45.000000            NaN   \n","max     99999.000000   4356.000000       99.000000            NaN   \n","\n","               class  \n","count   48842.000000  \n","unique           NaN  \n","top              NaN  \n","freq             NaN  \n","mean        0.239282  \n","std         0.426649  \n","min         0.000000  \n","25%         0.000000  \n","50%         0.000000  \n","75%         0.000000  \n","max         1.000000  "],"text/html":["\n","  <div id=\"df-0c5e354a-783d-4dc4-b4e5-5bed2add52d9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>education-num</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>48842.000000</td>\n","      <td>48842.000000</td>\n","      <td>46043</td>\n","      <td>48842</td>\n","      <td>48842.000000</td>\n","      <td>48842</td>\n","      <td>46033</td>\n","      <td>48842</td>\n","      <td>48842</td>\n","      <td>48842</td>\n","      <td>48842.000000</td>\n","      <td>48842.000000</td>\n","      <td>48842.000000</td>\n","      <td>47985</td>\n","      <td>48842.000000</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>16</td>\n","      <td>NaN</td>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>41</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>NaN</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>United-States</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>33906</td>\n","      <td>15784</td>\n","      <td>NaN</td>\n","      <td>22379</td>\n","      <td>6172</td>\n","      <td>19716</td>\n","      <td>41762</td>\n","      <td>32650</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>43832</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>24420.500000</td>\n","      <td>38.643585</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.078089</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1079.067626</td>\n","      <td>87.502314</td>\n","      <td>40.422382</td>\n","      <td>NaN</td>\n","      <td>0.239282</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>14099.615261</td>\n","      <td>13.710510</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.570973</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7452.019058</td>\n","      <td>403.004552</td>\n","      <td>12.391444</td>\n","      <td>NaN</td>\n","      <td>0.426649</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>17.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>12210.250000</td>\n","      <td>28.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>9.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>24420.500000</td>\n","      <td>37.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>36630.750000</td>\n","      <td>48.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>12.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>45.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>48841.000000</td>\n","      <td>90.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>16.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>99999.000000</td>\n","      <td>4356.000000</td>\n","      <td>99.000000</td>\n","      <td>NaN</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c5e354a-783d-4dc4-b4e5-5bed2add52d9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c5e354a-783d-4dc4-b4e5-5bed2add52d9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c5e354a-783d-4dc4-b4e5-5bed2add52d9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-45e8d2b8-5351-4db9-9574-867c8ba3ddf0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-45e8d2b8-5351-4db9-9574-867c8ba3ddf0')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-45e8d2b8-5351-4db9-9574-867c8ba3ddf0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["#인코딩 해야하는 데이터만 확인하기\n","obj_list = []\n","for i in df.columns:\n","  if df[i].dtype == 'object':\n","    obj_list.append(i)\n","\n","df_obj = df[obj_list]\n","df_obj"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":580},"id":"-ZtZmmLRC0tr","executionInfo":{"status":"ok","timestamp":1693468889253,"user_tz":-540,"elapsed":44,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"a0de7c91-b3f9-45d4-9937-d70b493200ed"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          workclass     education      marital-status         occupation  \\\n","0           Private          11th       Never-married  Machine-op-inspct   \n","1           Private       HS-grad  Married-civ-spouse    Farming-fishing   \n","2         Local-gov    Assoc-acdm  Married-civ-spouse    Protective-serv   \n","3           Private  Some-college  Married-civ-spouse  Machine-op-inspct   \n","4               NaN  Some-college       Never-married                NaN   \n","...             ...           ...                 ...                ...   \n","48837       Private    Assoc-acdm  Married-civ-spouse       Tech-support   \n","48838       Private       HS-grad  Married-civ-spouse  Machine-op-inspct   \n","48839       Private       HS-grad             Widowed       Adm-clerical   \n","48840       Private       HS-grad       Never-married       Adm-clerical   \n","48841  Self-emp-inc       HS-grad  Married-civ-spouse    Exec-managerial   \n","\n","      relationship   race     sex native-country  \n","0        Own-child  Black    Male  United-States  \n","1          Husband  White    Male  United-States  \n","2          Husband  White    Male  United-States  \n","3          Husband  Black    Male  United-States  \n","4        Own-child  White  Female  United-States  \n","...            ...    ...     ...            ...  \n","48837         Wife  White  Female  United-States  \n","48838      Husband  White    Male  United-States  \n","48839    Unmarried  White  Female  United-States  \n","48840    Own-child  White    Male  United-States  \n","48841         Wife  White  Female  United-States  \n","\n","[48842 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-e1d6d350-1ea4-4e2a-8ed6-8a81b51a955c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>native-country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Private</td>\n","      <td>11th</td>\n","      <td>Never-married</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Own-child</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>United-States</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Farming-fishing</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>United-States</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Local-gov</td>\n","      <td>Assoc-acdm</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Protective-serv</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>United-States</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Private</td>\n","      <td>Some-college</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>United-States</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>Some-college</td>\n","      <td>Never-married</td>\n","      <td>NaN</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>United-States</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>Private</td>\n","      <td>Assoc-acdm</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Tech-support</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>United-States</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>United-States</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>Widowed</td>\n","      <td>Adm-clerical</td>\n","      <td>Unmarried</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>United-States</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>United-States</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>Self-emp-inc</td>\n","      <td>HS-grad</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>United-States</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>48842 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1d6d350-1ea4-4e2a-8ed6-8a81b51a955c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e1d6d350-1ea4-4e2a-8ed6-8a81b51a955c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e1d6d350-1ea4-4e2a-8ed6-8a81b51a955c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fd5d50b6-b737-40e2-a6f5-b4286aee43c0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd5d50b6-b737-40e2-a6f5-b4286aee43c0')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fd5d50b6-b737-40e2-a6f5-b4286aee43c0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["#고윳값들에 대한 판단\n","df_obj['workclass'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lEoOVWiDDP4l","executionInfo":{"status":"ok","timestamp":1693468889254,"user_tz":-540,"elapsed":44,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"3e2282c1-2948-45c7-8510-a06bebf653e0"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Private             33906\n","Self-emp-not-inc     3862\n","Local-gov            3136\n","State-gov            1981\n","Self-emp-inc         1695\n","Federal-gov          1432\n","Without-pay            21\n","Never-worked           10\n","Name: workclass, dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df_obj['education'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uENCNoLHDbVa","executionInfo":{"status":"ok","timestamp":1693468889254,"user_tz":-540,"elapsed":40,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"6b09ee5e-2a7c-4b6a-a535-33e5d3144195"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["HS-grad         15784\n","Some-college    10878\n","Bachelors        8025\n","Masters          2657\n","Assoc-voc        2061\n","11th             1812\n","Assoc-acdm       1601\n","10th             1389\n","7th-8th           955\n","Prof-school       834\n","9th               756\n","12th              657\n","Doctorate         594\n","5th-6th           509\n","1st-4th           247\n","Preschool          83\n","Name: education, dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df_obj['marital-status'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wjH31t2hDn3X","executionInfo":{"status":"ok","timestamp":1693468889255,"user_tz":-540,"elapsed":40,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"06753dd1-1ef3-4de9-dd73-5e440509b60d"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Married-civ-spouse       22379\n","Never-married            16117\n","Divorced                  6633\n","Separated                 1530\n","Widowed                   1518\n","Married-spouse-absent      628\n","Married-AF-spouse           37\n","Name: marital-status, dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df_obj['occupation'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z7N_-hGoD5Sp","executionInfo":{"status":"ok","timestamp":1693468889255,"user_tz":-540,"elapsed":38,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"d42ee9a4-b27d-4e62-ced4-96ff9044f927"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Prof-specialty       6172\n","Craft-repair         6112\n","Exec-managerial      6086\n","Adm-clerical         5611\n","Sales                5504\n","Other-service        4923\n","Machine-op-inspct    3022\n","Transport-moving     2355\n","Handlers-cleaners    2072\n","Farming-fishing      1490\n","Tech-support         1446\n","Protective-serv       983\n","Priv-house-serv       242\n","Armed-Forces           15\n","Name: occupation, dtype: int64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df_obj['relationship'].value_counts()"],"metadata":{"id":"INWkK57oEAUj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1693468889256,"user_tz":-540,"elapsed":38,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"054342aa-83d8-4882-956f-ae879571338f"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Husband           19716\n","Not-in-family     12583\n","Own-child          7581\n","Unmarried          5125\n","Wife               2331\n","Other-relative     1506\n","Name: relationship, dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df_obj['race'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8zBAofFmveDx","executionInfo":{"status":"ok","timestamp":1693468889258,"user_tz":-540,"elapsed":38,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"61f8d83a-999d-49be-b4a0-8f3c156f3d76"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["White                 41762\n","Black                  4685\n","Asian-Pac-Islander     1519\n","Amer-Indian-Eskimo      470\n","Other                   406\n","Name: race, dtype: int64"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df_obj['sex'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"INo9loLxvg7r","executionInfo":{"status":"ok","timestamp":1693468889259,"user_tz":-540,"elapsed":38,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"39a6c993-6fb8-4377-9840-21fd047e1708"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Male      32650\n","Female    16192\n","Name: sex, dtype: int64"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df_obj['native-country'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gAnrDTzRvl3Z","executionInfo":{"status":"ok","timestamp":1693468889260,"user_tz":-540,"elapsed":38,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"89ac0718-0d2b-4db2-d478-4e29832f3e9a"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["United-States                 43832\n","Mexico                          951\n","Philippines                     295\n","Germany                         206\n","Puerto-Rico                     184\n","Canada                          182\n","El-Salvador                     155\n","India                           151\n","Cuba                            138\n","England                         127\n","China                           122\n","South                           115\n","Jamaica                         106\n","Italy                           105\n","Dominican-Republic              103\n","Japan                            92\n","Guatemala                        88\n","Poland                           87\n","Vietnam                          86\n","Columbia                         85\n","Haiti                            75\n","Portugal                         67\n","Taiwan                           65\n","Iran                             59\n","Greece                           49\n","Nicaragua                        49\n","Peru                             46\n","Ecuador                          45\n","France                           38\n","Ireland                          37\n","Hong                             30\n","Thailand                         30\n","Cambodia                         28\n","Trinadad&Tobago                  27\n","Yugoslavia                       23\n","Outlying-US(Guam-USVI-etc)       23\n","Laos                             23\n","Scotland                         21\n","Honduras                         20\n","Hungary                          19\n","Holand-Netherlands                1\n","Name: native-country, dtype: int64"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["- 수치 데이터의 경우 스케일링 또는 범주화를 통해서 전처리가 가능\n","- 문자형 데이터의 경우 데이터간의 관계와 로직에 대한 이해가 필수\n","- 어떤 데이터건 간에 클래스와의 관계를 이해하고 중요 컬럼을 선택하거나 새로 생성하는 것이 필요"],"metadata":{"id":"qoxp5yQHvwEA"}},{"cell_type":"markdown","source":["## 클래스와 관련이 깊어 보이는 컬럼만 선택해서 해보자\n","- age, education, sex, hours-per-week, native-country, class 컬럼을 이용하겠다."],"metadata":{"id":"hDpOAIXTzlJt"}},{"cell_type":"code","source":["df_base= df[['age','education-num','sex','hours-per-week','native-country','race','class']]"],"metadata":{"id":"aAwUulguvsUI","executionInfo":{"status":"ok","timestamp":1693468889261,"user_tz":-540,"elapsed":37,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["df_base"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"eZOcYeE1zu8q","executionInfo":{"status":"ok","timestamp":1693468889263,"user_tz":-540,"elapsed":39,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"75083f98-835e-411f-cb9c-bfd194355c47"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age  education-num     sex  hours-per-week native-country   race  class\n","0       25              7    Male              40  United-States  Black      0\n","1       38              9    Male              50  United-States  White      0\n","2       28             12    Male              40  United-States  White      1\n","3       44             10    Male              40  United-States  Black      1\n","4       18             10  Female              30  United-States  White      0\n","...    ...            ...     ...             ...            ...    ...    ...\n","48837   27             12  Female              38  United-States  White      0\n","48838   40              9    Male              40  United-States  White      1\n","48839   58              9  Female              40  United-States  White      0\n","48840   22              9    Male              20  United-States  White      0\n","48841   52              9  Female              40  United-States  White      1\n","\n","[48842 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-c7abe80f-9269-4e66-91b3-4433954ca867\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>education-num</th>\n","      <th>sex</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>race</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>7</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>Black</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>9</td>\n","      <td>Male</td>\n","      <td>50</td>\n","      <td>United-States</td>\n","      <td>White</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>12</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>10</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>Black</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>Female</td>\n","      <td>30</td>\n","      <td>United-States</td>\n","      <td>White</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>27</td>\n","      <td>12</td>\n","      <td>Female</td>\n","      <td>38</td>\n","      <td>United-States</td>\n","      <td>White</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>40</td>\n","      <td>9</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>58</td>\n","      <td>9</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>White</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>22</td>\n","      <td>9</td>\n","      <td>Male</td>\n","      <td>20</td>\n","      <td>United-States</td>\n","      <td>White</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>52</td>\n","      <td>9</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>White</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>48842 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7abe80f-9269-4e66-91b3-4433954ca867')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c7abe80f-9269-4e66-91b3-4433954ca867 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c7abe80f-9269-4e66-91b3-4433954ca867');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5ddf6f95-0289-43de-9f10-cdebae1bf066\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5ddf6f95-0289-43de-9f10-cdebae1bf066')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5ddf6f95-0289-43de-9f10-cdebae1bf066 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df_base['native-country'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2VlujCFHzv6e","executionInfo":{"status":"ok","timestamp":1693468889264,"user_tz":-540,"elapsed":38,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"318a8762-05d2-4606-e803-dcecfd0652dc"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["United-States                 43832\n","Mexico                          951\n","Philippines                     295\n","Germany                         206\n","Puerto-Rico                     184\n","Canada                          182\n","El-Salvador                     155\n","India                           151\n","Cuba                            138\n","England                         127\n","China                           122\n","South                           115\n","Jamaica                         106\n","Italy                           105\n","Dominican-Republic              103\n","Japan                            92\n","Guatemala                        88\n","Poland                           87\n","Vietnam                          86\n","Columbia                         85\n","Haiti                            75\n","Portugal                         67\n","Taiwan                           65\n","Iran                             59\n","Greece                           49\n","Nicaragua                        49\n","Peru                             46\n","Ecuador                          45\n","France                           38\n","Ireland                          37\n","Hong                             30\n","Thailand                         30\n","Cambodia                         28\n","Trinadad&Tobago                  27\n","Yugoslavia                       23\n","Outlying-US(Guam-USVI-etc)       23\n","Laos                             23\n","Scotland                         21\n","Honduras                         20\n","Hungary                          19\n","Holand-Netherlands                1\n","Name: native-country, dtype: int64"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["- 미국의 데이터가 월등히 많고 나머지는 비슷하게 분포되어 있다,\n","- 미국과 미국이 아닌 국가\n","- 대륙별\n","- 화폐단위별\n","- 클래스가 불균형한 것들이 묶여지면 과적합이 발생할 수 있다.\n","- class와의 관계를 근거로 확인해야 한다"],"metadata":{"id":"YLQu_otAz78X"}},{"cell_type":"code","source":["#이진 분류의 경우\n","#나라별로 묶어서 클래스의 평균을 알아보자\n","df_base.groupby('native-country')['class'].mean()\n","#평균이 1에 가까울 수록 연봉이 높은 국가"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"16kD1GeFz7VO","executionInfo":{"status":"ok","timestamp":1693468889265,"user_tz":-540,"elapsed":37,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"c4257d5b-7956-4df1-fab9-d417d0700342"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["native-country\n","Cambodia                      0.321429\n","Canada                        0.346154\n","China                         0.295082\n","Columbia                      0.047059\n","Cuba                          0.246377\n","Dominican-Republic            0.048544\n","Ecuador                       0.133333\n","El-Salvador                   0.070968\n","England                       0.370079\n","France                        0.421053\n","Germany                       0.281553\n","Greece                        0.367347\n","Guatemala                     0.034091\n","Haiti                         0.120000\n","Holand-Netherlands            0.000000\n","Honduras                      0.100000\n","Hong                          0.266667\n","Hungary                       0.315789\n","India                         0.410596\n","Iran                          0.372881\n","Ireland                       0.297297\n","Italy                         0.323810\n","Jamaica                       0.141509\n","Japan                         0.347826\n","Laos                          0.086957\n","Mexico                        0.049422\n","Nicaragua                     0.061224\n","Outlying-US(Guam-USVI-etc)    0.043478\n","Peru                          0.086957\n","Philippines                   0.288136\n","Poland                        0.195402\n","Portugal                      0.179104\n","Puerto-Rico                   0.108696\n","Scotland                      0.142857\n","South                         0.173913\n","Taiwan                        0.400000\n","Thailand                      0.166667\n","Trinadad&Tobago               0.074074\n","United-States                 0.243977\n","Vietnam                       0.081395\n","Yugoslavia                    0.347826\n","Name: class, dtype: float64"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["- 평균이 높은 국가끼리 묶어주면 좋을듯 하지만 다른 변수들을 통해 이것들의 특성을 파악하는 것도 중요\n","- 새로운 파생변수를 만드는 것도 가능"],"metadata":{"id":"bKCdfpe60fD1"}},{"cell_type":"code","source":["#결측값 확인\n","df_base.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tBE__z4x0a8C","executionInfo":{"status":"ok","timestamp":1693468889266,"user_tz":-540,"elapsed":36,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"d4205d64-851e-466d-ac43-7e2537280d7d"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 48842 entries, 0 to 48841\n","Data columns (total 7 columns):\n"," #   Column          Non-Null Count  Dtype \n","---  ------          --------------  ----- \n"," 0   age             48842 non-null  int64 \n"," 1   education-num   48842 non-null  int64 \n"," 2   sex             48842 non-null  object\n"," 3   hours-per-week  48842 non-null  int64 \n"," 4   native-country  47985 non-null  object\n"," 5   race            48842 non-null  object\n"," 6   class           48842 non-null  int64 \n","dtypes: int64(4), object(3)\n","memory usage: 2.6+ MB\n"]}]},{"cell_type":"code","source":["df_base.dropna(inplace = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9jUSvZzt5DRe","executionInfo":{"status":"ok","timestamp":1693468889266,"user_tz":-540,"elapsed":35,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"bf5ae631-a553-4d2f-89dd-87345eab1fd3"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-21-ee37fc7cc232>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_base.dropna(inplace = True)\n"]}]},{"cell_type":"code","source":["#기본 베이스 데이터로 모델링 해보기\n","\n","df_base=pd.get_dummies(df_base) #원핫인코딩을 통해 기본적으로 인코딩으로 해보자"],"metadata":{"id":"XfGAQJTn5GSS","executionInfo":{"status":"ok","timestamp":1693468889267,"user_tz":-540,"elapsed":34,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["df_base = df_base*1 #True는 1 False는 0으로 변경\n","df_base"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"Qx5biGEe5R5V","executionInfo":{"status":"ok","timestamp":1693468889268,"user_tz":-540,"elapsed":35,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"59ee16ef-3807-4597-fac7-99c0a28d7964"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age  education-num  hours-per-week  class  sex_Female  sex_Male  \\\n","0       25              7              40      0           0         1   \n","1       38              9              50      0           0         1   \n","2       28             12              40      1           0         1   \n","3       44             10              40      1           0         1   \n","4       18             10              30      0           1         0   \n","...    ...            ...             ...    ...         ...       ...   \n","48837   27             12              38      0           1         0   \n","48838   40              9              40      1           0         1   \n","48839   58              9              40      0           1         0   \n","48840   22              9              20      0           0         1   \n","48841   52              9              40      1           1         0   \n","\n","       native-country_Cambodia  native-country_Canada  native-country_China  \\\n","0                            0                      0                     0   \n","1                            0                      0                     0   \n","2                            0                      0                     0   \n","3                            0                      0                     0   \n","4                            0                      0                     0   \n","...                        ...                    ...                   ...   \n","48837                        0                      0                     0   \n","48838                        0                      0                     0   \n","48839                        0                      0                     0   \n","48840                        0                      0                     0   \n","48841                        0                      0                     0   \n","\n","       native-country_Columbia  ...  native-country_Thailand  \\\n","0                            0  ...                        0   \n","1                            0  ...                        0   \n","2                            0  ...                        0   \n","3                            0  ...                        0   \n","4                            0  ...                        0   \n","...                        ...  ...                      ...   \n","48837                        0  ...                        0   \n","48838                        0  ...                        0   \n","48839                        0  ...                        0   \n","48840                        0  ...                        0   \n","48841                        0  ...                        0   \n","\n","       native-country_Trinadad&Tobago  native-country_United-States  \\\n","0                                   0                             1   \n","1                                   0                             1   \n","2                                   0                             1   \n","3                                   0                             1   \n","4                                   0                             1   \n","...                               ...                           ...   \n","48837                               0                             1   \n","48838                               0                             1   \n","48839                               0                             1   \n","48840                               0                             1   \n","48841                               0                             1   \n","\n","       native-country_Vietnam  native-country_Yugoslavia  \\\n","0                           0                          0   \n","1                           0                          0   \n","2                           0                          0   \n","3                           0                          0   \n","4                           0                          0   \n","...                       ...                        ...   \n","48837                       0                          0   \n","48838                       0                          0   \n","48839                       0                          0   \n","48840                       0                          0   \n","48841                       0                          0   \n","\n","       race_Amer-Indian-Eskimo  race_Asian-Pac-Islander  race_Black  \\\n","0                            0                        0           1   \n","1                            0                        0           0   \n","2                            0                        0           0   \n","3                            0                        0           1   \n","4                            0                        0           0   \n","...                        ...                      ...         ...   \n","48837                        0                        0           0   \n","48838                        0                        0           0   \n","48839                        0                        0           0   \n","48840                        0                        0           0   \n","48841                        0                        0           0   \n","\n","       race_Other  race_White  \n","0               0           0  \n","1               0           1  \n","2               0           1  \n","3               0           0  \n","4               0           1  \n","...           ...         ...  \n","48837           0           1  \n","48838           0           1  \n","48839           0           1  \n","48840           0           1  \n","48841           0           1  \n","\n","[47985 rows x 52 columns]"],"text/html":["\n","  <div id=\"df-493c900e-366b-4e80-8219-36d10a9157d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>education-num</th>\n","      <th>hours-per-week</th>\n","      <th>class</th>\n","      <th>sex_Female</th>\n","      <th>sex_Male</th>\n","      <th>native-country_Cambodia</th>\n","      <th>native-country_Canada</th>\n","      <th>native-country_China</th>\n","      <th>native-country_Columbia</th>\n","      <th>...</th>\n","      <th>native-country_Thailand</th>\n","      <th>native-country_Trinadad&amp;Tobago</th>\n","      <th>native-country_United-States</th>\n","      <th>native-country_Vietnam</th>\n","      <th>native-country_Yugoslavia</th>\n","      <th>race_Amer-Indian-Eskimo</th>\n","      <th>race_Asian-Pac-Islander</th>\n","      <th>race_Black</th>\n","      <th>race_Other</th>\n","      <th>race_White</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>7</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>9</td>\n","      <td>50</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>12</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>10</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>27</td>\n","      <td>12</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>40</td>\n","      <td>9</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>58</td>\n","      <td>9</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>22</td>\n","      <td>9</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>52</td>\n","      <td>9</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>47985 rows × 52 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-493c900e-366b-4e80-8219-36d10a9157d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-493c900e-366b-4e80-8219-36d10a9157d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-493c900e-366b-4e80-8219-36d10a9157d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b55a5fc2-4bf4-4198-919c-05b32e60bbe3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b55a5fc2-4bf4-4198-919c-05b32e60bbe3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b55a5fc2-4bf4-4198-919c-05b32e60bbe3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(df_base.drop('class',axis=1),df_base['class'], test_size=0.4, random_state=1)"],"metadata":{"id":"WfarG-sW5Y6X","executionInfo":{"status":"ok","timestamp":1693468889819,"user_tz":-540,"elapsed":585,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["#이진 분류이므로 의사결정모형 사용\n","from sklearn.tree import DecisionTreeClassifier\n","\n","model = DecisionTreeClassifier()\n","model.fit(X_train, y_train)\n","pred = model.predict(X_test)"],"metadata":{"id":"FJb9I8vz5iLj","executionInfo":{"status":"ok","timestamp":1693468890434,"user_tz":-540,"elapsed":618,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["#정확도 평가\n","from sklearn.metrics import accuracy_score\n","accuracy_score(y_test, pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HIEixBhb5nhF","executionInfo":{"status":"ok","timestamp":1693468890434,"user_tz":-540,"elapsed":30,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"d29208b9-760a-4f12-f558-c6761040cd12"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7763363551109722"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["#파생 변수 만들어서 해보기\n","- 아까 만든 나라별 클래스의 평균을 추가해보자"],"metadata":{"id":"L0dnxsnb5zkO"}},{"cell_type":"code","source":["df_base2= df[['age','education-num','sex','hours-per-week','native-country','race','class']]"],"metadata":{"id":"tQzCkHIj5qFC","executionInfo":{"status":"ok","timestamp":1693468890435,"user_tz":-540,"elapsed":30,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["df_base2.dropna(inplace = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IYj8Ursu56Sd","executionInfo":{"status":"ok","timestamp":1693468890435,"user_tz":-540,"elapsed":29,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"a08dc78d-f5cc-4b76-dab3-842805792c78"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-28-494367326a12>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_base2.dropna(inplace = True)\n"]}]},{"cell_type":"code","source":["df_fn=df_base2.groupby('native-country')['class'].mean()"],"metadata":{"id":"ZJMQHjpZ59aG","executionInfo":{"status":"ok","timestamp":1693468890436,"user_tz":-540,"elapsed":29,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["df_fn=df_fn.reset_index()"],"metadata":{"id":"jNhaen1B6Aa4","executionInfo":{"status":"ok","timestamp":1693468890436,"user_tz":-540,"elapsed":28,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["df_base2_final=df_base2.merge(df_fn, on='native-country',how='left') #두 df를 합쳐준다."],"metadata":{"id":"R4MGvT256BfZ","executionInfo":{"status":"ok","timestamp":1693468890437,"user_tz":-540,"elapsed":29,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["df_base2f =df_base2_final[['age','education-num','sex','hours-per-week','class_x','class_y','race']]"],"metadata":{"id":"8sKBpSTt6Cly","executionInfo":{"status":"ok","timestamp":1693468890438,"user_tz":-540,"elapsed":30,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["df_base2f=df_base2f.rename(columns = {'class_x':'class', 'class_y':'native-country'})"],"metadata":{"id":"DZ8_BiP26EVF","executionInfo":{"status":"ok","timestamp":1693468890439,"user_tz":-540,"elapsed":30,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["df_base2f"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"5HpEcPT46UNo","executionInfo":{"status":"ok","timestamp":1693468890440,"user_tz":-540,"elapsed":31,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"6ba94722-d054-4078-b6b8-2534bebb3005"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age  education-num     sex  hours-per-week  class  native-country  \\\n","0       25              7    Male              40      0        0.243977   \n","1       38              9    Male              50      0        0.243977   \n","2       28             12    Male              40      1        0.243977   \n","3       44             10    Male              40      1        0.243977   \n","4       18             10  Female              30      0        0.243977   \n","...    ...            ...     ...             ...    ...             ...   \n","47980   27             12  Female              38      0        0.243977   \n","47981   40              9    Male              40      1        0.243977   \n","47982   58              9  Female              40      0        0.243977   \n","47983   22              9    Male              20      0        0.243977   \n","47984   52              9  Female              40      1        0.243977   \n","\n","        race  \n","0      Black  \n","1      White  \n","2      White  \n","3      Black  \n","4      White  \n","...      ...  \n","47980  White  \n","47981  White  \n","47982  White  \n","47983  White  \n","47984  White  \n","\n","[47985 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-368f6cf1-4f37-4462-a4ac-5337e8d7f646\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>education-num</th>\n","      <th>sex</th>\n","      <th>hours-per-week</th>\n","      <th>class</th>\n","      <th>native-country</th>\n","      <th>race</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>7</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>Black</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>9</td>\n","      <td>Male</td>\n","      <td>50</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>12</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0.243977</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>10</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0.243977</td>\n","      <td>Black</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>Female</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>47980</th>\n","      <td>27</td>\n","      <td>12</td>\n","      <td>Female</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>47981</th>\n","      <td>40</td>\n","      <td>9</td>\n","      <td>Male</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0.243977</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>47982</th>\n","      <td>58</td>\n","      <td>9</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>47983</th>\n","      <td>22</td>\n","      <td>9</td>\n","      <td>Male</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>47984</th>\n","      <td>52</td>\n","      <td>9</td>\n","      <td>Female</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0.243977</td>\n","      <td>White</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>47985 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-368f6cf1-4f37-4462-a4ac-5337e8d7f646')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-368f6cf1-4f37-4462-a4ac-5337e8d7f646 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-368f6cf1-4f37-4462-a4ac-5337e8d7f646');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-094edda5-5ba0-4fdd-b0fc-d41a39d1fc63\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-094edda5-5ba0-4fdd-b0fc-d41a39d1fc63')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-094edda5-5ba0-4fdd-b0fc-d41a39d1fc63 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["df_base2f=pd.get_dummies(df_base2f) #원핫인코딩으로 간단히 인코딩"],"metadata":{"id":"cacYEgKd6VvV","executionInfo":{"status":"ok","timestamp":1693468890441,"user_tz":-540,"elapsed":31,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["df_base2f=df_base2f*1"],"metadata":{"id":"rqYVD4Nk6Zyg","executionInfo":{"status":"ok","timestamp":1693468890442,"user_tz":-540,"elapsed":32,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["df_base2f"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"OMA-cgRH6bNk","executionInfo":{"status":"ok","timestamp":1693468890443,"user_tz":-540,"elapsed":31,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"2e887500-7456-4329-9f80-1c58d99029cd"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age  education-num  hours-per-week  class  native-country  sex_Female  \\\n","0       25              7              40      0        0.243977           0   \n","1       38              9              50      0        0.243977           0   \n","2       28             12              40      1        0.243977           0   \n","3       44             10              40      1        0.243977           0   \n","4       18             10              30      0        0.243977           1   \n","...    ...            ...             ...    ...             ...         ...   \n","47980   27             12              38      0        0.243977           1   \n","47981   40              9              40      1        0.243977           0   \n","47982   58              9              40      0        0.243977           1   \n","47983   22              9              20      0        0.243977           0   \n","47984   52              9              40      1        0.243977           1   \n","\n","       sex_Male  race_Amer-Indian-Eskimo  race_Asian-Pac-Islander  race_Black  \\\n","0             1                        0                        0           1   \n","1             1                        0                        0           0   \n","2             1                        0                        0           0   \n","3             1                        0                        0           1   \n","4             0                        0                        0           0   \n","...         ...                      ...                      ...         ...   \n","47980         0                        0                        0           0   \n","47981         1                        0                        0           0   \n","47982         0                        0                        0           0   \n","47983         1                        0                        0           0   \n","47984         0                        0                        0           0   \n","\n","       race_Other  race_White  \n","0               0           0  \n","1               0           1  \n","2               0           1  \n","3               0           0  \n","4               0           1  \n","...           ...         ...  \n","47980           0           1  \n","47981           0           1  \n","47982           0           1  \n","47983           0           1  \n","47984           0           1  \n","\n","[47985 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-c34679ab-5f04-437b-9ce7-b6ce706b0e5e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>education-num</th>\n","      <th>hours-per-week</th>\n","      <th>class</th>\n","      <th>native-country</th>\n","      <th>sex_Female</th>\n","      <th>sex_Male</th>\n","      <th>race_Amer-Indian-Eskimo</th>\n","      <th>race_Asian-Pac-Islander</th>\n","      <th>race_Black</th>\n","      <th>race_Other</th>\n","      <th>race_White</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>7</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>9</td>\n","      <td>50</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>12</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0.243977</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>10</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0.243977</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>47980</th>\n","      <td>27</td>\n","      <td>12</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>47981</th>\n","      <td>40</td>\n","      <td>9</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0.243977</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>47982</th>\n","      <td>58</td>\n","      <td>9</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>47983</th>\n","      <td>22</td>\n","      <td>9</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>0.243977</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>47984</th>\n","      <td>52</td>\n","      <td>9</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0.243977</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>47985 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c34679ab-5f04-437b-9ce7-b6ce706b0e5e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c34679ab-5f04-437b-9ce7-b6ce706b0e5e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c34679ab-5f04-437b-9ce7-b6ce706b0e5e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-16fba9aa-8daa-4937-aa89-ea540ac82286\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-16fba9aa-8daa-4937-aa89-ea540ac82286')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-16fba9aa-8daa-4937-aa89-ea540ac82286 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(df_base2f.drop('class',axis=1),df_base2f['class'], test_size=0.4, random_state=1)"],"metadata":{"id":"MJludtIS6b_j","executionInfo":{"status":"ok","timestamp":1693468890443,"user_tz":-540,"elapsed":30,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","\n","model = DecisionTreeClassifier()\n","model.fit(X_train, y_train)\n","pred = model.predict(X_test)"],"metadata":{"id":"Rbzjy3Js6eTK","executionInfo":{"status":"ok","timestamp":1693468890444,"user_tz":-540,"elapsed":31,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","accuracy_score(y_test, pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b8teMXAE6jF2","executionInfo":{"status":"ok","timestamp":1693468890444,"user_tz":-540,"elapsed":31,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"67d54472-a2c0-4edd-d3f0-4aa7c4db78d9"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7747733666770866"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["- 기본 데이터로 했을 떄보다 0.001이 줄었다.\n","- 더 많은 데이터를 추가하거나 하이퍼파라미터를 튜닝하거나 다른 모델을 사용하여 정확도를 높일 수 있다.\n","- 그래도 인코딩 방법이나 파생변수를 잘 만들면 높일 수 있을 것 같다."],"metadata":{"id":"xAK6JP0Z6mf4"}},{"cell_type":"markdown","source":["## 정확도를 더 높이기 위해서 컬럼을 더 추가해보기"],"metadata":{"id":"ykYlEzaqe5Pk"}},{"cell_type":"code","source":["df"],"metadata":{"id":"PfLKa6C86kcN","colab":{"base_uri":"https://localhost:8080/","height":756},"executionInfo":{"status":"ok","timestamp":1693468890445,"user_tz":-540,"elapsed":30,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"68b45cdf-af2d-406b-8c5c-793fa4a7d106"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Unnamed: 0  age     workclass     education  education-num  \\\n","0               0   25       Private          11th              7   \n","1               1   38       Private       HS-grad              9   \n","2               2   28     Local-gov    Assoc-acdm             12   \n","3               3   44       Private  Some-college             10   \n","4               4   18           NaN  Some-college             10   \n","...           ...  ...           ...           ...            ...   \n","48837       48837   27       Private    Assoc-acdm             12   \n","48838       48838   40       Private       HS-grad              9   \n","48839       48839   58       Private       HS-grad              9   \n","48840       48840   22       Private       HS-grad              9   \n","48841       48841   52  Self-emp-inc       HS-grad              9   \n","\n","           marital-status         occupation relationship   race     sex  \\\n","0           Never-married  Machine-op-inspct    Own-child  Black    Male   \n","1      Married-civ-spouse    Farming-fishing      Husband  White    Male   \n","2      Married-civ-spouse    Protective-serv      Husband  White    Male   \n","3      Married-civ-spouse  Machine-op-inspct      Husband  Black    Male   \n","4           Never-married                NaN    Own-child  White  Female   \n","...                   ...                ...          ...    ...     ...   \n","48837  Married-civ-spouse       Tech-support         Wife  White  Female   \n","48838  Married-civ-spouse  Machine-op-inspct      Husband  White    Male   \n","48839             Widowed       Adm-clerical    Unmarried  White  Female   \n","48840       Never-married       Adm-clerical    Own-child  White    Male   \n","48841  Married-civ-spouse    Exec-managerial         Wife  White  Female   \n","\n","       capital-gain  capital-loss  hours-per-week native-country  class  \n","0                 0             0              40  United-States      0  \n","1                 0             0              50  United-States      0  \n","2                 0             0              40  United-States      1  \n","3              7688             0              40  United-States      1  \n","4                 0             0              30  United-States      0  \n","...             ...           ...             ...            ...    ...  \n","48837             0             0              38  United-States      0  \n","48838             0             0              40  United-States      1  \n","48839             0             0              40  United-States      0  \n","48840             0             0              20  United-States      0  \n","48841         15024             0              40  United-States      1  \n","\n","[48842 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-28f91565-a0a1-4dc7-90b7-e51938751a1c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>education</th>\n","      <th>education-num</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>25</td>\n","      <td>Private</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Never-married</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Own-child</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Farming-fishing</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>28</td>\n","      <td>Local-gov</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Protective-serv</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>44</td>\n","      <td>Private</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>18</td>\n","      <td>NaN</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Never-married</td>\n","      <td>NaN</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>48837</td>\n","      <td>27</td>\n","      <td>Private</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Tech-support</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>48838</td>\n","      <td>40</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>48839</td>\n","      <td>58</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Widowed</td>\n","      <td>Adm-clerical</td>\n","      <td>Unmarried</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>48840</td>\n","      <td>22</td>\n","      <td>Private</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>United-States</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>48841</td>\n","      <td>52</td>\n","      <td>Self-emp-inc</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>15024</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>48842 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28f91565-a0a1-4dc7-90b7-e51938751a1c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-28f91565-a0a1-4dc7-90b7-e51938751a1c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-28f91565-a0a1-4dc7-90b7-e51938751a1c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9b304fbc-3380-4c87-869c-4ecd102c9f26\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b304fbc-3380-4c87-869c-4ecd102c9f26')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9b304fbc-3380-4c87-869c-4ecd102c9f26 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kbe6IM_Pgaai","executionInfo":{"status":"ok","timestamp":1693468890445,"user_tz":-540,"elapsed":29,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"e2364b95-701d-476b-d76f-04ec28a47d49"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Unnamed: 0', 'age', 'workclass', 'education', 'education-num',\n","       'marital-status', 'occupation', 'relationship', 'race', 'sex',\n","       'capital-gain', 'capital-loss', 'hours-per-week', 'native-country',\n","       'class'],\n","      dtype='object')"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["#df의 많은 컬럼을 이용해보자\n","df = df[['age', 'workclass', 'education-num',\n","       'marital-status', 'occupation', 'relationship', 'race', 'sex',\n","       'capital-gain', 'capital-loss', 'hours-per-week', 'class']]"],"metadata":{"id":"gVo67I56gK0n","executionInfo":{"status":"ok","timestamp":1693468890446,"user_tz":-540,"elapsed":28,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["df_add1 = pd.get_dummies(df, drop_first = True)\n","df_add1 = df_add1 *1\n","df_add1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"7NYduIfigob7","executionInfo":{"status":"ok","timestamp":1693468890446,"user_tz":-540,"elapsed":27,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"2adffeec-ecdb-4b97-af7f-b8a5482ceb45"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age  education-num  capital-gain  capital-loss  hours-per-week  class  \\\n","0       25              7             0             0              40      0   \n","1       38              9             0             0              50      0   \n","2       28             12             0             0              40      1   \n","3       44             10          7688             0              40      1   \n","4       18             10             0             0              30      0   \n","...    ...            ...           ...           ...             ...    ...   \n","48837   27             12             0             0              38      0   \n","48838   40              9             0             0              40      1   \n","48839   58              9             0             0              40      0   \n","48840   22              9             0             0              20      0   \n","48841   52              9         15024             0              40      1   \n","\n","       workclass_Local-gov  workclass_Never-worked  workclass_Private  \\\n","0                        0                       0                  1   \n","1                        0                       0                  1   \n","2                        1                       0                  0   \n","3                        0                       0                  1   \n","4                        0                       0                  0   \n","...                    ...                     ...                ...   \n","48837                    0                       0                  1   \n","48838                    0                       0                  1   \n","48839                    0                       0                  1   \n","48840                    0                       0                  1   \n","48841                    0                       0                  0   \n","\n","       workclass_Self-emp-inc  ...  relationship_Not-in-family  \\\n","0                           0  ...                           0   \n","1                           0  ...                           0   \n","2                           0  ...                           0   \n","3                           0  ...                           0   \n","4                           0  ...                           0   \n","...                       ...  ...                         ...   \n","48837                       0  ...                           0   \n","48838                       0  ...                           0   \n","48839                       0  ...                           0   \n","48840                       0  ...                           0   \n","48841                       1  ...                           0   \n","\n","       relationship_Other-relative  relationship_Own-child  \\\n","0                                0                       1   \n","1                                0                       0   \n","2                                0                       0   \n","3                                0                       0   \n","4                                0                       1   \n","...                            ...                     ...   \n","48837                            0                       0   \n","48838                            0                       0   \n","48839                            0                       0   \n","48840                            0                       1   \n","48841                            0                       0   \n","\n","       relationship_Unmarried  relationship_Wife  race_Asian-Pac-Islander  \\\n","0                           0                  0                        0   \n","1                           0                  0                        0   \n","2                           0                  0                        0   \n","3                           0                  0                        0   \n","4                           0                  0                        0   \n","...                       ...                ...                      ...   \n","48837                       0                  1                        0   \n","48838                       0                  0                        0   \n","48839                       1                  0                        0   \n","48840                       0                  0                        0   \n","48841                       0                  1                        0   \n","\n","       race_Black  race_Other  race_White  sex_Male  \n","0               1           0           0         1  \n","1               0           0           1         1  \n","2               0           0           1         1  \n","3               1           0           0         1  \n","4               0           0           1         0  \n","...           ...         ...         ...       ...  \n","48837           0           0           1         0  \n","48838           0           0           1         1  \n","48839           0           0           1         0  \n","48840           0           0           1         1  \n","48841           0           0           1         0  \n","\n","[48842 rows x 42 columns]"],"text/html":["\n","  <div id=\"df-545f2ede-3eac-4bd6-b577-b2b77026b001\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>education-num</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>class</th>\n","      <th>workclass_Local-gov</th>\n","      <th>workclass_Never-worked</th>\n","      <th>workclass_Private</th>\n","      <th>workclass_Self-emp-inc</th>\n","      <th>...</th>\n","      <th>relationship_Not-in-family</th>\n","      <th>relationship_Other-relative</th>\n","      <th>relationship_Own-child</th>\n","      <th>relationship_Unmarried</th>\n","      <th>relationship_Wife</th>\n","      <th>race_Asian-Pac-Islander</th>\n","      <th>race_Black</th>\n","      <th>race_Other</th>\n","      <th>race_White</th>\n","      <th>sex_Male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>10</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>27</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>40</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>58</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>22</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>52</td>\n","      <td>9</td>\n","      <td>15024</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>48842 rows × 42 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-545f2ede-3eac-4bd6-b577-b2b77026b001')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-545f2ede-3eac-4bd6-b577-b2b77026b001 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-545f2ede-3eac-4bd6-b577-b2b77026b001');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f3ec625f-5a6d-4a92-b93c-6774c6491aba\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3ec625f-5a6d-4a92-b93c-6774c6491aba')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f3ec625f-5a6d-4a92-b93c-6774c6491aba button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["#데이터 분할\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(df_add1.drop('class',axis=1),df_add1['class'],test_size = 0.4,random_state = 100)"],"metadata":{"id":"CUJMTSLngvWl","executionInfo":{"status":"ok","timestamp":1693468890447,"user_tz":-540,"elapsed":27,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["#모델 적용\n","from sklearn.tree import DecisionTreeClassifier\n","model = DecisionTreeClassifier()\n","model.fit(X_train,y_train)\n","train_pred = model.predict(X_train)\n","test_pred = model.predict(X_test)"],"metadata":{"id":"ufBamwVihK-e","executionInfo":{"status":"ok","timestamp":1693468891315,"user_tz":-540,"elapsed":895,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["#정확도 확인\n","from sklearn.metrics import accuracy_score\n","print('train : ',accuracy_score(y_train, train_pred))\n","print('test : ',accuracy_score(y_test, test_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wV7pBaKAhc8V","executionInfo":{"status":"ok","timestamp":1693468891315,"user_tz":-540,"elapsed":9,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"3f48f6d6-8997-4072-b7a9-997c9662a824"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["train :  0.975635557072172\n","test :  0.8155295081128116\n"]}]},{"cell_type":"markdown","source":["- train에서 0.97,test에서 0.81이 나온다.\n","- train에 비해 test가 굉장히 낮다\n","- 과적합이 발생한 것\n","- 과적합은 피하기 어려우므로 train, validation, test의 값을 확인하면서 과적합 발생 전에 멈춰야 한다."],"metadata":{"id":"fZtu6qnFimLB"}},{"cell_type":"markdown","source":["# 정확도를 더 올리는 방법\n","- 피처를 추가한다.(데이터 추가)\n","- 피처 엔지니어링을 통해 더 의미 있는 특성을 만든다(파생변수)\n","- 모델의 하이퍼파라미터를 튜닝하여 진행한다.\n","- 새로운 모델을 사용해본다."],"metadata":{"id":"TeTnojgTi5Nc"}},{"cell_type":"code","source":["#하이퍼파라미터 튜닝해보기\n","from sklearn.tree import DecisionTreeClassifier\n","model = DecisionTreeClassifier(max_depth = 5, #트리의 최대 깊이를 5로 정한다.\n","                              min_samples_split = 4)#노드를 분할하기 위한 최소 샘플 데이터수를 4로 정한다.\n","model.fit(X_train, y_train)\n","train_pred = model.predict(X_train)\n","test_pred = model.predict(X_test)\n"],"metadata":{"id":"eXaNWTN_htxX","executionInfo":{"status":"ok","timestamp":1693468891316,"user_tz":-540,"elapsed":8,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","print('train : ',accuracy_score(y_train, train_pred))\n","print('test : ',accuracy_score(y_test, test_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NoHqVH7Gj-is","executionInfo":{"status":"ok","timestamp":1693468891316,"user_tz":-540,"elapsed":8,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"3eefb145-b62f-4edd-9aa8-6234314c6312"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["train :  0.8539498379116192\n","test :  0.8499769667809797\n"]}]},{"cell_type":"markdown","source":["- train :  0.8539498379116192\n","- test :  0.8499257818498234\n","- 과적합은 막았다.\n","- 정확도가 떨어짐"],"metadata":{"id":"3NXzPBqHkKQy"}},{"cell_type":"markdown","source":["# 다른 모델을 사용해보기"],"metadata":{"id":"Unn6pfMmka_D"}},{"cell_type":"markdown","source":["# 랜덤포레스트\n","- 훈련을 통해 구성해놓은 다수의 나무들로부터 분류 결과를 취합해서 결론을 얻는다.\n","- 다수의 나무를 기반으로 예측하기 때문에 오버피팅의 영향력이 줄어들어 좋은 성능을 보인다,\n","- 배깅 : 임의로 일정개수의 행을 선택해서 의사결정 트리를 만드는 것(중복을 허용해야 함)\n","- 배깅 피처 : 트리를 만들 떄 사용될 속성들을 제한함으로써 각 나무들에 다양성을 줘야 한다.\n","- 나무를 만들 때 모든 속성들에서 임의로 일부를 선택하고 그 중 정보 획득량이 가장 높은 것을 기준으로 데이터를 분할한다."],"metadata":{"id":"O8z-hJwLnIbm"}},{"cell_type":"markdown","source":["# 하이퍼 파라미터\n","- n_estimators : 결정트리의 개수를 지정(default = 10)\n","- min_samples_split : 노드를 분할하기 위한 최소한의 샘플 데이터 수 (default = 2)\n","- min_samples_leaf : 리프노드가 되기 위해 필요한 최소한의 샘플 데이터 수\n","- max_featrues : 최적의 분할을 위해 고려한 최대 feature개수(default = 'auto')\n","- max_depth : 트리의 최대 깊이(default = None)\n","- max_leaf_nodes : 리프노드의 최대 개수(default = None)"],"metadata":{"id":"BGnWxHeMtJUt"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier#랜덤포레스트 사용\n","rf = RandomForestClassifier(random_state = 100)\n","rf.fit(X_train, y_train)\n","\n","train_pred = rf.predict(X_train)\n","test_pred = rf.predict(X_test)\n","\n","print('train : ',accuracy_score(y_train, train_pred))\n","print('test : ',accuracy_score(y_test, test_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PxJfYB0MkHIL","executionInfo":{"status":"ok","timestamp":1693468895176,"user_tz":-540,"elapsed":3865,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"e9ab0026-2172-4656-adb2-f1c978251cd7"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["train :  0.9755331854632315\n","test :  0.8466499462558222\n"]}]},{"cell_type":"markdown","source":["- 앙상블 작동원리 : 랜덤포레스트는 부트스트래핑 방식으로 진행\n"],"metadata":{"id":"Wt-TtKN1vhAI"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","#랜덤포레스트\n","\n","rf = RandomForestClassifier(max_depth=10,random_state=111,n_estimators =300)#300개의 데이터 샘플을 이용\n","rf.fit(X_train, y_train)\n","\n","train_pred = rf.predict(X_train)\n","test_pred = rf.predict(X_test)\n","\n","print('train : ',accuracy_score(y_train, train_pred))\n","print('test : ',accuracy_score(y_test, test_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_WKEMspHkzkq","executionInfo":{"status":"ok","timestamp":1693468902966,"user_tz":-540,"elapsed":7792,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"b17b90ea-aa06-4c52-8123-b2d2c160cf45"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["train :  0.8709776488653813\n","test :  0.85806418590367\n"]}]},{"cell_type":"markdown","source":["# 자전거 수요 예측 데이터"],"metadata":{"id":"nKiSJYrUwAsw"}},{"cell_type":"code","source":["train = pd.read_csv('/content/drive/MyDrive/BDA_CSV/train_bk.csv')"],"metadata":{"id":"mgRt2BNsvrFO","executionInfo":{"status":"ok","timestamp":1693468903578,"user_tz":-540,"elapsed":615,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":52,"outputs":[]},{"cell_type":"markdown","source":["#컬럼 설명\n","- datetime : 날짜\n","- season : 1-봄, 2-여름, 3-가을, 4-겨울\n","- holiday : 휴일 여부\n","- workingday : 주말 또는 휴일이 아닌 날\n","- weather : 1-맑음, 2-흐림 3-약간의 눈 또는 비, 4-강한 눈 또는 비\n","- temp : 기온\n","- atemp : 체감온도\n","- humidity : 습도\n","- windspeed : 풍속\n","- casual : 비회원사용자 수\n","- registerd : 회원자 수\n","- count : 총 렌탈 수"],"metadata":{"id":"ZKO948fmxgSU"}},{"cell_type":"code","source":["train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":791},"id":"eMIvWAFmwMt2","executionInfo":{"status":"ok","timestamp":1693468903579,"user_tz":-540,"elapsed":21,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"ade9af0d-4807-4583-af11-0ada7a965d21"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  datetime  season  holiday  workingday  weather   temp  \\\n","0      2011-01-01 00:00:00       1        0           0        1   9.84   \n","1      2011-01-01 01:00:00       1        0           0        1   9.02   \n","2      2011-01-01 02:00:00       1        0           0        1   9.02   \n","3      2011-01-01 03:00:00       1        0           0        1   9.84   \n","4      2011-01-01 04:00:00       1        0           0        1   9.84   \n","...                    ...     ...      ...         ...      ...    ...   \n","10881  2012-12-19 19:00:00       4        0           1        1  15.58   \n","10882  2012-12-19 20:00:00       4        0           1        1  14.76   \n","10883  2012-12-19 21:00:00       4        0           1        1  13.94   \n","10884  2012-12-19 22:00:00       4        0           1        1  13.94   \n","10885  2012-12-19 23:00:00       4        0           1        1  13.12   \n","\n","        atemp  humidity  windspeed  casual  registered  count  \n","0      14.395        81     0.0000       3          13     16  \n","1      13.635        80     0.0000       8          32     40  \n","2      13.635        80     0.0000       5          27     32  \n","3      14.395        75     0.0000       3          10     13  \n","4      14.395        75     0.0000       0           1      1  \n","...       ...       ...        ...     ...         ...    ...  \n","10881  19.695        50    26.0027       7         329    336  \n","10882  17.425        57    15.0013      10         231    241  \n","10883  15.910        61    15.0013       4         164    168  \n","10884  17.425        61     6.0032      12         117    129  \n","10885  16.665        66     8.9981       4          84     88  \n","\n","[10886 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-43517bac-062f-4b91-a017-eb14632f0f6e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>datetime</th>\n","      <th>season</th>\n","      <th>holiday</th>\n","      <th>workingday</th>\n","      <th>weather</th>\n","      <th>temp</th>\n","      <th>atemp</th>\n","      <th>humidity</th>\n","      <th>windspeed</th>\n","      <th>casual</th>\n","      <th>registered</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011-01-01 00:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.84</td>\n","      <td>14.395</td>\n","      <td>81</td>\n","      <td>0.0000</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011-01-01 01:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.02</td>\n","      <td>13.635</td>\n","      <td>80</td>\n","      <td>0.0000</td>\n","      <td>8</td>\n","      <td>32</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011-01-01 02:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.02</td>\n","      <td>13.635</td>\n","      <td>80</td>\n","      <td>0.0000</td>\n","      <td>5</td>\n","      <td>27</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011-01-01 03:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.84</td>\n","      <td>14.395</td>\n","      <td>75</td>\n","      <td>0.0000</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011-01-01 04:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.84</td>\n","      <td>14.395</td>\n","      <td>75</td>\n","      <td>0.0000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10881</th>\n","      <td>2012-12-19 19:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15.58</td>\n","      <td>19.695</td>\n","      <td>50</td>\n","      <td>26.0027</td>\n","      <td>7</td>\n","      <td>329</td>\n","      <td>336</td>\n","    </tr>\n","    <tr>\n","      <th>10882</th>\n","      <td>2012-12-19 20:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14.76</td>\n","      <td>17.425</td>\n","      <td>57</td>\n","      <td>15.0013</td>\n","      <td>10</td>\n","      <td>231</td>\n","      <td>241</td>\n","    </tr>\n","    <tr>\n","      <th>10883</th>\n","      <td>2012-12-19 21:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.94</td>\n","      <td>15.910</td>\n","      <td>61</td>\n","      <td>15.0013</td>\n","      <td>4</td>\n","      <td>164</td>\n","      <td>168</td>\n","    </tr>\n","    <tr>\n","      <th>10884</th>\n","      <td>2012-12-19 22:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.94</td>\n","      <td>17.425</td>\n","      <td>61</td>\n","      <td>6.0032</td>\n","      <td>12</td>\n","      <td>117</td>\n","      <td>129</td>\n","    </tr>\n","    <tr>\n","      <th>10885</th>\n","      <td>2012-12-19 23:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.12</td>\n","      <td>16.665</td>\n","      <td>66</td>\n","      <td>8.9981</td>\n","      <td>4</td>\n","      <td>84</td>\n","      <td>88</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10886 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43517bac-062f-4b91-a017-eb14632f0f6e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-43517bac-062f-4b91-a017-eb14632f0f6e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-43517bac-062f-4b91-a017-eb14632f0f6e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6e40b1ab-fef0-4f6e-9a2e-b67058eb8475\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6e40b1ab-fef0-4f6e-9a2e-b67058eb8475')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6e40b1ab-fef0-4f6e-9a2e-b67058eb8475 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["train.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3tNswVhUyPP7","executionInfo":{"status":"ok","timestamp":1693468903580,"user_tz":-540,"elapsed":21,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"e61878a7-72c6-447f-a977-7d1aee143e56"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10886 entries, 0 to 10885\n","Data columns (total 12 columns):\n"," #   Column      Non-Null Count  Dtype  \n","---  ------      --------------  -----  \n"," 0   datetime    10886 non-null  object \n"," 1   season      10886 non-null  int64  \n"," 2   holiday     10886 non-null  int64  \n"," 3   workingday  10886 non-null  int64  \n"," 4   weather     10886 non-null  int64  \n"," 5   temp        10886 non-null  float64\n"," 6   atemp       10886 non-null  float64\n"," 7   humidity    10886 non-null  int64  \n"," 8   windspeed   10886 non-null  float64\n"," 9   casual      10886 non-null  int64  \n"," 10  registered  10886 non-null  int64  \n"," 11  count       10886 non-null  int64  \n","dtypes: float64(3), int64(8), object(1)\n","memory usage: 1020.7+ KB\n"]}]},{"cell_type":"markdown","source":["- 날짜 데이터 전처리 필요"],"metadata":{"id":"g9vA0iFnzjns"}},{"cell_type":"code","source":["#날짜와 시간을 나눌 수 있다.\n","train['datetime'][4].split()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7Jg8Kv0KzW1g","executionInfo":{"status":"ok","timestamp":1693468903581,"user_tz":-540,"elapsed":20,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"4e65cff0-4bee-4194-f7ff-e875a18ecc23"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['2011-01-01', '04:00:00']"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["train['datetime'][4].split()[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"7BakiFx-z0gO","executionInfo":{"status":"ok","timestamp":1693468903582,"user_tz":-540,"elapsed":19,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"06ac67ee-743e-4bc5-fed4-27d60e52b481"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'2011-01-01'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":56}]},{"cell_type":"markdown","source":["- 시계열 데이터로 인덱스를 잡거나 문자열 상태에서 피저츨 뽑을 수 있다."],"metadata":{"id":"UFf0nWimz8yl"}},{"cell_type":"code","source":["train['date'] = train['datetime'].apply(lambda x: x.split()[0])\n","train['year'] = train['datetime'].apply(lambda x: x.split('-')[0])\n","train['month'] = train['datetime'].apply(lambda x: x.split()[0].split('-')[1])\n","train['day'] = train['datetime'].apply(lambda x: x.split()[0].split('-')[2])\n","\n","train['hour'] = train['datetime'].apply(lambda x:x.split()[1].split(':')[0])\n","train['minute'] = train['datetime'].apply(lambda x:x.split()[1].split(':')[1])\n","train['second'] = train['datetime'].apply(lambda x:x.split()[1].split(':')[2])\n","train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":791},"id":"M9DbVnJYz7cz","executionInfo":{"status":"ok","timestamp":1693468903582,"user_tz":-540,"elapsed":18,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"14077bdd-8692-40cd-e3e8-49b980b98e36"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  datetime  season  holiday  workingday  weather   temp  \\\n","0      2011-01-01 00:00:00       1        0           0        1   9.84   \n","1      2011-01-01 01:00:00       1        0           0        1   9.02   \n","2      2011-01-01 02:00:00       1        0           0        1   9.02   \n","3      2011-01-01 03:00:00       1        0           0        1   9.84   \n","4      2011-01-01 04:00:00       1        0           0        1   9.84   \n","...                    ...     ...      ...         ...      ...    ...   \n","10881  2012-12-19 19:00:00       4        0           1        1  15.58   \n","10882  2012-12-19 20:00:00       4        0           1        1  14.76   \n","10883  2012-12-19 21:00:00       4        0           1        1  13.94   \n","10884  2012-12-19 22:00:00       4        0           1        1  13.94   \n","10885  2012-12-19 23:00:00       4        0           1        1  13.12   \n","\n","        atemp  humidity  windspeed  casual  registered  count        date  \\\n","0      14.395        81     0.0000       3          13     16  2011-01-01   \n","1      13.635        80     0.0000       8          32     40  2011-01-01   \n","2      13.635        80     0.0000       5          27     32  2011-01-01   \n","3      14.395        75     0.0000       3          10     13  2011-01-01   \n","4      14.395        75     0.0000       0           1      1  2011-01-01   \n","...       ...       ...        ...     ...         ...    ...         ...   \n","10881  19.695        50    26.0027       7         329    336  2012-12-19   \n","10882  17.425        57    15.0013      10         231    241  2012-12-19   \n","10883  15.910        61    15.0013       4         164    168  2012-12-19   \n","10884  17.425        61     6.0032      12         117    129  2012-12-19   \n","10885  16.665        66     8.9981       4          84     88  2012-12-19   \n","\n","       year month day hour minute second  \n","0      2011    01  01   00     00     00  \n","1      2011    01  01   01     00     00  \n","2      2011    01  01   02     00     00  \n","3      2011    01  01   03     00     00  \n","4      2011    01  01   04     00     00  \n","...     ...   ...  ..  ...    ...    ...  \n","10881  2012    12  19   19     00     00  \n","10882  2012    12  19   20     00     00  \n","10883  2012    12  19   21     00     00  \n","10884  2012    12  19   22     00     00  \n","10885  2012    12  19   23     00     00  \n","\n","[10886 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-f71e60d6-097d-4f58-9d75-6e8b0da0347e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>datetime</th>\n","      <th>season</th>\n","      <th>holiday</th>\n","      <th>workingday</th>\n","      <th>weather</th>\n","      <th>temp</th>\n","      <th>atemp</th>\n","      <th>humidity</th>\n","      <th>windspeed</th>\n","      <th>casual</th>\n","      <th>registered</th>\n","      <th>count</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>day</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>second</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011-01-01 00:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.84</td>\n","      <td>14.395</td>\n","      <td>81</td>\n","      <td>0.0000</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>16</td>\n","      <td>2011-01-01</td>\n","      <td>2011</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011-01-01 01:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.02</td>\n","      <td>13.635</td>\n","      <td>80</td>\n","      <td>0.0000</td>\n","      <td>8</td>\n","      <td>32</td>\n","      <td>40</td>\n","      <td>2011-01-01</td>\n","      <td>2011</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>00</td>\n","      <td>00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011-01-01 02:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.02</td>\n","      <td>13.635</td>\n","      <td>80</td>\n","      <td>0.0000</td>\n","      <td>5</td>\n","      <td>27</td>\n","      <td>32</td>\n","      <td>2011-01-01</td>\n","      <td>2011</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>02</td>\n","      <td>00</td>\n","      <td>00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011-01-01 03:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.84</td>\n","      <td>14.395</td>\n","      <td>75</td>\n","      <td>0.0000</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>2011-01-01</td>\n","      <td>2011</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>03</td>\n","      <td>00</td>\n","      <td>00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011-01-01 04:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.84</td>\n","      <td>14.395</td>\n","      <td>75</td>\n","      <td>0.0000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2011-01-01</td>\n","      <td>2011</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>04</td>\n","      <td>00</td>\n","      <td>00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10881</th>\n","      <td>2012-12-19 19:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15.58</td>\n","      <td>19.695</td>\n","      <td>50</td>\n","      <td>26.0027</td>\n","      <td>7</td>\n","      <td>329</td>\n","      <td>336</td>\n","      <td>2012-12-19</td>\n","      <td>2012</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>19</td>\n","      <td>00</td>\n","      <td>00</td>\n","    </tr>\n","    <tr>\n","      <th>10882</th>\n","      <td>2012-12-19 20:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14.76</td>\n","      <td>17.425</td>\n","      <td>57</td>\n","      <td>15.0013</td>\n","      <td>10</td>\n","      <td>231</td>\n","      <td>241</td>\n","      <td>2012-12-19</td>\n","      <td>2012</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>20</td>\n","      <td>00</td>\n","      <td>00</td>\n","    </tr>\n","    <tr>\n","      <th>10883</th>\n","      <td>2012-12-19 21:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.94</td>\n","      <td>15.910</td>\n","      <td>61</td>\n","      <td>15.0013</td>\n","      <td>4</td>\n","      <td>164</td>\n","      <td>168</td>\n","      <td>2012-12-19</td>\n","      <td>2012</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>21</td>\n","      <td>00</td>\n","      <td>00</td>\n","    </tr>\n","    <tr>\n","      <th>10884</th>\n","      <td>2012-12-19 22:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.94</td>\n","      <td>17.425</td>\n","      <td>61</td>\n","      <td>6.0032</td>\n","      <td>12</td>\n","      <td>117</td>\n","      <td>129</td>\n","      <td>2012-12-19</td>\n","      <td>2012</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>22</td>\n","      <td>00</td>\n","      <td>00</td>\n","    </tr>\n","    <tr>\n","      <th>10885</th>\n","      <td>2012-12-19 23:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.12</td>\n","      <td>16.665</td>\n","      <td>66</td>\n","      <td>8.9981</td>\n","      <td>4</td>\n","      <td>84</td>\n","      <td>88</td>\n","      <td>2012-12-19</td>\n","      <td>2012</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>23</td>\n","      <td>00</td>\n","      <td>00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10886 rows × 19 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f71e60d6-097d-4f58-9d75-6e8b0da0347e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f71e60d6-097d-4f58-9d75-6e8b0da0347e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f71e60d6-097d-4f58-9d75-6e8b0da0347e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-550b8da6-5eb1-4f39-b414-91a33aae7e09\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-550b8da6-5eb1-4f39-b414-91a33aae7e09')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-550b8da6-5eb1-4f39-b414-91a33aae7e09 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["#요일 추출하기\n","from datetime import datetime\n","import calendar"],"metadata":{"id":"PQ5pJBmk02Ow","executionInfo":{"status":"ok","timestamp":1693469286978,"user_tz":-540,"elapsed":3,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["print(datetime.strptime(train['date'][10], '%Y-%m-%d'))\n","\n","#월화수목금토일 정수로 변환\n","print(datetime.strptime(train['date'][10], '%Y-%m-%d').weekday())\n","print(calendar.day_name[datetime.strptime(train['date'][10], '%Y-%m-%d').weekday()])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"md2J3So_op7t","executionInfo":{"status":"ok","timestamp":1693469317275,"user_tz":-540,"elapsed":297,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"d46bcbd3-16f3-4ef8-848d-06bca86bbbf2"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["2011-01-01 00:00:00\n","5\n","Saturday\n"]}]},{"cell_type":"code","source":["#요일을 컬럼으로 추가\n","train['weekday'] = train['date'].apply(lambda dateString: calendar.day_name[datetime.strptime(dateString,'%Y-%m-%d').weekday()])"],"metadata":{"id":"XWI4tl3roxSo","executionInfo":{"status":"ok","timestamp":1693469401560,"user_tz":-540,"elapsed":601,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":791},"id":"QxKHBZNNpFvR","executionInfo":{"status":"ok","timestamp":1693469405971,"user_tz":-540,"elapsed":310,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"863312b4-3b72-4609-9306-555acc98d00f"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  datetime  season  holiday  workingday  weather   temp  \\\n","0      2011-01-01 00:00:00       1        0           0        1   9.84   \n","1      2011-01-01 01:00:00       1        0           0        1   9.02   \n","2      2011-01-01 02:00:00       1        0           0        1   9.02   \n","3      2011-01-01 03:00:00       1        0           0        1   9.84   \n","4      2011-01-01 04:00:00       1        0           0        1   9.84   \n","...                    ...     ...      ...         ...      ...    ...   \n","10881  2012-12-19 19:00:00       4        0           1        1  15.58   \n","10882  2012-12-19 20:00:00       4        0           1        1  14.76   \n","10883  2012-12-19 21:00:00       4        0           1        1  13.94   \n","10884  2012-12-19 22:00:00       4        0           1        1  13.94   \n","10885  2012-12-19 23:00:00       4        0           1        1  13.12   \n","\n","        atemp  humidity  windspeed  casual  registered  count        date  \\\n","0      14.395        81     0.0000       3          13     16  2011-01-01   \n","1      13.635        80     0.0000       8          32     40  2011-01-01   \n","2      13.635        80     0.0000       5          27     32  2011-01-01   \n","3      14.395        75     0.0000       3          10     13  2011-01-01   \n","4      14.395        75     0.0000       0           1      1  2011-01-01   \n","...       ...       ...        ...     ...         ...    ...         ...   \n","10881  19.695        50    26.0027       7         329    336  2012-12-19   \n","10882  17.425        57    15.0013      10         231    241  2012-12-19   \n","10883  15.910        61    15.0013       4         164    168  2012-12-19   \n","10884  17.425        61     6.0032      12         117    129  2012-12-19   \n","10885  16.665        66     8.9981       4          84     88  2012-12-19   \n","\n","       year month day hour minute second    weekday  \n","0      2011    01  01   00     00     00   Saturday  \n","1      2011    01  01   01     00     00   Saturday  \n","2      2011    01  01   02     00     00   Saturday  \n","3      2011    01  01   03     00     00   Saturday  \n","4      2011    01  01   04     00     00   Saturday  \n","...     ...   ...  ..  ...    ...    ...        ...  \n","10881  2012    12  19   19     00     00  Wednesday  \n","10882  2012    12  19   20     00     00  Wednesday  \n","10883  2012    12  19   21     00     00  Wednesday  \n","10884  2012    12  19   22     00     00  Wednesday  \n","10885  2012    12  19   23     00     00  Wednesday  \n","\n","[10886 rows x 20 columns]"],"text/html":["\n","  <div id=\"df-4953dbb6-ac37-4b8e-be67-b516e7d6ed0a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>datetime</th>\n","      <th>season</th>\n","      <th>holiday</th>\n","      <th>workingday</th>\n","      <th>weather</th>\n","      <th>temp</th>\n","      <th>atemp</th>\n","      <th>humidity</th>\n","      <th>windspeed</th>\n","      <th>casual</th>\n","      <th>registered</th>\n","      <th>count</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>day</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>second</th>\n","      <th>weekday</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2011-01-01 00:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.84</td>\n","      <td>14.395</td>\n","      <td>81</td>\n","      <td>0.0000</td>\n","      <td>3</td>\n","      <td>13</td>\n","      <td>16</td>\n","      <td>2011-01-01</td>\n","      <td>2011</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011-01-01 01:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.02</td>\n","      <td>13.635</td>\n","      <td>80</td>\n","      <td>0.0000</td>\n","      <td>8</td>\n","      <td>32</td>\n","      <td>40</td>\n","      <td>2011-01-01</td>\n","      <td>2011</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011-01-01 02:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.02</td>\n","      <td>13.635</td>\n","      <td>80</td>\n","      <td>0.0000</td>\n","      <td>5</td>\n","      <td>27</td>\n","      <td>32</td>\n","      <td>2011-01-01</td>\n","      <td>2011</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>02</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011-01-01 03:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.84</td>\n","      <td>14.395</td>\n","      <td>75</td>\n","      <td>0.0000</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>2011-01-01</td>\n","      <td>2011</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>03</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011-01-01 04:00:00</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>9.84</td>\n","      <td>14.395</td>\n","      <td>75</td>\n","      <td>0.0000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2011-01-01</td>\n","      <td>2011</td>\n","      <td>01</td>\n","      <td>01</td>\n","      <td>04</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>Saturday</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10881</th>\n","      <td>2012-12-19 19:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>15.58</td>\n","      <td>19.695</td>\n","      <td>50</td>\n","      <td>26.0027</td>\n","      <td>7</td>\n","      <td>329</td>\n","      <td>336</td>\n","      <td>2012-12-19</td>\n","      <td>2012</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>19</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>Wednesday</td>\n","    </tr>\n","    <tr>\n","      <th>10882</th>\n","      <td>2012-12-19 20:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>14.76</td>\n","      <td>17.425</td>\n","      <td>57</td>\n","      <td>15.0013</td>\n","      <td>10</td>\n","      <td>231</td>\n","      <td>241</td>\n","      <td>2012-12-19</td>\n","      <td>2012</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>20</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>Wednesday</td>\n","    </tr>\n","    <tr>\n","      <th>10883</th>\n","      <td>2012-12-19 21:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.94</td>\n","      <td>15.910</td>\n","      <td>61</td>\n","      <td>15.0013</td>\n","      <td>4</td>\n","      <td>164</td>\n","      <td>168</td>\n","      <td>2012-12-19</td>\n","      <td>2012</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>21</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>Wednesday</td>\n","    </tr>\n","    <tr>\n","      <th>10884</th>\n","      <td>2012-12-19 22:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.94</td>\n","      <td>17.425</td>\n","      <td>61</td>\n","      <td>6.0032</td>\n","      <td>12</td>\n","      <td>117</td>\n","      <td>129</td>\n","      <td>2012-12-19</td>\n","      <td>2012</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>22</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>Wednesday</td>\n","    </tr>\n","    <tr>\n","      <th>10885</th>\n","      <td>2012-12-19 23:00:00</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13.12</td>\n","      <td>16.665</td>\n","      <td>66</td>\n","      <td>8.9981</td>\n","      <td>4</td>\n","      <td>84</td>\n","      <td>88</td>\n","      <td>2012-12-19</td>\n","      <td>2012</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>23</td>\n","      <td>00</td>\n","      <td>00</td>\n","      <td>Wednesday</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10886 rows × 20 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4953dbb6-ac37-4b8e-be67-b516e7d6ed0a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4953dbb6-ac37-4b8e-be67-b516e7d6ed0a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4953dbb6-ac37-4b8e-be67-b516e7d6ed0a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ece719be-51c7-4dba-80de-7d6d3dfeee12\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ece719be-51c7-4dba-80de-7d6d3dfeee12')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ece719be-51c7-4dba-80de-7d6d3dfeee12 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":61}]},{"cell_type":"markdown","source":["## 수요예측에 대해 모델링 진행 전\n","- 월별, 요일별, 시간별 분포를 확인해본다"],"metadata":{"id":"KnSqqz3ppSFQ"}},{"cell_type":"code","source":["import seaborn as sns"],"metadata":{"id":"hBaSTZ-HpG3C","executionInfo":{"status":"ok","timestamp":1693469488507,"user_tz":-540,"elapsed":323,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["#count컬럼 전체 분포 확인\n","sns.distplot(train['count'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"hFXLBRz3pbB6","executionInfo":{"status":"ok","timestamp":1693470190682,"user_tz":-540,"elapsed":2089,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"0aac8bec-6ac1-45ae-ac32-41ddf3579860"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-73-9905d7534b29>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(train['count'])\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='count', ylabel='Density'>"]},"metadata":{},"execution_count":73},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#year별 분포 확인\n","train_year = train.groupby('year')['count'].sum()\n","train_year\n","import matplotlib.pyplot as plt\n","train_year.plot(kind = 'bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":504},"id":"USQ51wWurj_A","executionInfo":{"status":"ok","timestamp":1693470384750,"user_tz":-540,"elapsed":457,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"190465ba-bd21-4348-d05c-4b1d6a1af169"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='year'>"]},"metadata":{},"execution_count":77},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#month별 분포확인\n","train_month = train.groupby('month')['count'].sum()\n","train_month\n","train_month.plot(kind = 'bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":471},"id":"7pcKIf3Xsytc","executionInfo":{"status":"ok","timestamp":1693470427479,"user_tz":-540,"elapsed":1390,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"a529d5ab-d41d-4ff9-f796-fe7fd9fd2f76"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='month'>"]},"metadata":{},"execution_count":78},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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AwAA1qIIAQAAa1GEAACAtShCAADAWhQhAABgLYoQAACwFkUIAABYiyIEAACsRRECAADWoggBAABrUYQAAIC1KEIAAMBaFCEAAGAtihAAALAWRQgAAFiLIgQAAKxFEQIAANaiCAEAAGtRhAAAgLWC/R0AuFzc8yt8vs+Df+zu830CAAIfR4QAAIC1KEIAAMBaFCEAAGAtihAAALAWRQgAAFiLIgQAAKxFEQIAANaiCAEAAGtRhAAAgLUoQgAAwFoUIQAAYC2KEAAAsBZFCAAAWIsiBAAArEURAgAA1qIIAQAAa1GEAACAtShCAADAWhQhAABgLYoQAACwFkUIAABYiyIEAACsRRECAADWoggBAABrUYQAAIC1KEIAAMBaFCEAAGAtihAAALAWRQgAAFiLIgQAAKxFEQIAANaiCAEAAGtRhAAAgLUoQgAAwFoUIQAAYC2KEAAAsBZFCAAAWIsiBAAArEURAgAA1qIIAQAAa1GEAACAtShCAADAWhQhAABgLYoQAACwFkUIAABYiyIEAACsRRECAADWoggBAABrUYQAAIC1KlyE1q1bpx49eigmJkYul0tLly71WjfGaPz48WrQoIGqV6+upKQk7d2712vmxIkT6tevn8LDwxUZGanBgwfrzJkzXjM7duzQI488orCwMMXGxmratGlXZFmyZIlatGihsLAwtW7dWitXrqxwFgAAYK8KF6GioiK1bdtWGRkZ5a5PmzZNs2bN0ty5c7V582bVrFlTKSkpOnfunDPTr18/7dy5U1lZWVq+fLnWrVunoUOHOuuFhYVKTk5W48aNlZubq5deekkTJ07U66+/7sxs3LhRffv21eDBg7Vt2zalpqYqNTVVX3zxRYWyAAAAewVX9AFdu3ZV165dy10zxujVV1/VuHHj1LNnT0nSW2+9paioKC1dulR9+vTRrl27lJmZqU8//VTt27eXJP35z39Wt27d9PLLLysmJkZvv/22SkpKNG/ePIWEhOjuu+9WXl6epk+f7hSmmTNnqkuXLho9erQkafLkycrKytLs2bM1d+7cG8oCAADs5tNzhA4cOCCPx6OkpCTnvoiICCUkJCgnJ0eSlJOTo8jISKcESVJSUpLcbrc2b97szDz66KMKCQlxZlJSUrRnzx6dPHnSmbn0ecpmyp7nRrJcrri4WIWFhV4bAACounxahDwejyQpKirK6/6oqChnzePxqH79+l7rwcHBqlOnjtdMefu49DmuNnPp+vWyXG7q1KmKiIhwttjY2Bv4qQEAQKCq8FtjVdnYsWOVnp7u3C4sLKxyZSju+RU+3+fBP3b3+T4BALgVfHpEKDo6WpKUn5/vdX9+fr6zFh0draNHj3qtX7hwQSdOnPCaKW8flz7H1WYuXb9elsuFhoYqPDzcawMAAFWXT4tQkyZNFB0drezsbOe+wsJCbd68WYmJiZKkxMREnTp1Srm5uc7MmjVrVFpaqoSEBGdm3bp1On/+vDOTlZWlu+66S7fddpszc+nzlM2UPc+NZAEAAHarcBE6c+aM8vLylJeXJ+n7k5Lz8vJ06NAhuVwujRw5UlOmTNGHH36ozz//XAMGDFBMTIxSU1MlSS1btlSXLl00ZMgQbdmyRRs2bFBaWpr69OmjmJgYSdIvfvELhYSEaPDgwdq5c6cWL16smTNner1t9dvf/laZmZl65ZVXtHv3bk2cOFFbt25VWlqaJN1QFgAAYLcKnyO0detWde7c2bldVk4GDhyoBQsWaMyYMSoqKtLQoUN16tQpPfzww8rMzFRYWJjzmLfffltpaWl6/PHH5Xa71atXL82aNctZj4iI0OrVqzV8+HDFx8erXr16Gj9+vNe1hh588EEtWrRI48aN0wsvvKDmzZtr6dKluueee5yZG8kCAADsVeEi1KlTJxljrrrucrk0adIkTZo06aozderU0aJFi675PG3atNH69euvOdO7d2/17t37X8oCAADsxXeNAQAAa1GEAACAtShCAADAWhQhAABgLYoQAACwFkUIAABYiyIEAACsRRECAADWoggBAABrUYQAAIC1KEIAAMBaFCEAAGAtihAAALAWRQgAAFiLIgQAAKxFEQIAANaiCAEAAGtRhAAAgLUoQgAAwFoUIQAAYC2KEAAAsBZFCAAAWIsiBAAArEURAgAA1qIIAQAAawX7O0BVEvf8Cp/u7+Afu/t0fwAAwBtHhAAAgLUoQgAAwFoUIQAAYC2KEAAAsBZFCAAAWIsiBAAArEURAgAA1qIIAQAAa1GEAACAtShCAADAWhQhAABgLYoQAACwFkUIAABYiyIEAACsRRECAADWoggBAABrUYQAAIC1KEIAAMBaFCEAAGAtihAAALAWRQgAAFiLIgQAAKxFEQIAANaiCAEAAGtRhAAAgLUoQgAAwFoUIQAAYC2KEAAAsBZFCAAAWIsiBAAArEURAgAA1qIIAQAAa1GEAACAtShCAADAWhQhAABgLYoQAACwFkUIAABYiyIEAACsRRECAADWoggBAABrUYQAAIC1KEIAAMBaPi9CEydOlMvl8tpatGjhrJ87d07Dhw9X3bp1VatWLfXq1Uv5+fle+zh06JC6d++uGjVqqH79+ho9erQuXLjgNfPxxx/rvvvuU2hoqJo1a6YFCxZckSUjI0NxcXEKCwtTQkKCtmzZ4usfFwAABLCbckTo7rvv1jfffONsn3zyibM2atQoLVu2TEuWLNHatWt15MgRPfnkk876xYsX1b17d5WUlGjjxo1auHChFixYoPHjxzszBw4cUPfu3dW5c2fl5eVp5MiR+tWvfqVVq1Y5M4sXL1Z6eromTJigzz77TG3btlVKSoqOHj16M35kAAAQgG5KEQoODlZ0dLSz1atXT5JUUFCgv/zlL5o+fboee+wxxcfHa/78+dq4caM2bdokSVq9erX+53/+R3/729/Url07de3aVZMnT1ZGRoZKSkokSXPnzlWTJk30yiuvqGXLlkpLS9NTTz2lGTNmOBmmT5+uIUOGaNCgQWrVqpXmzp2rGjVqaN68eTfjRwYAAAHophShvXv3KiYmRk2bNlW/fv106NAhSVJubq7Onz+vpKQkZ7ZFixZq1KiRcnJyJEk5OTlq3bq1oqKinJmUlBQVFhZq586dzsyl+yibKdtHSUmJcnNzvWbcbreSkpKcmfIUFxersLDQawMAAFWXz4tQQkKCFixYoMzMTL322ms6cOCAHnnkEZ0+fVoej0chISGKjIz0ekxUVJQ8Ho8kyePxeJWgsvWytWvNFBYW6rvvvtO3336rixcvljtTto/yTJ06VREREc4WGxv7o14DAAAQGIJ9vcOuXbs6/92mTRslJCSocePGevfdd1W9enVfP51PjR07Vunp6c7twsJCyhAAAFXYTf/4fGRkpO68807t27dP0dHRKikp0alTp7xm8vPzFR0dLUmKjo6+4lNkZbevNxMeHq7q1aurXr16CgoKKnembB/lCQ0NVXh4uNcGAACqrptehM6cOaMvv/xSDRo0UHx8vKpVq6bs7Gxnfc+ePTp06JASExMlSYmJifr888+9Pt2VlZWl8PBwtWrVypm5dB9lM2X7CAkJUXx8vNdMaWmpsrOznRkAAACfF6Hf//73Wrt2rQ4ePKiNGzfqiSeeUFBQkPr27auIiAgNHjxY6enp+uc//6nc3FwNGjRIiYmJeuCBByRJycnJatWqlfr376/t27dr1apVGjdunIYPH67Q0FBJ0rPPPqv9+/drzJgx2r17t+bMmaN3331Xo0aNcnKkp6frjTfe0MKFC7Vr1y4NGzZMRUVFGjRokK9/ZAAAEKB8fo7QV199pb59++r48eO6/fbb9fDDD2vTpk26/fbbJUkzZsyQ2+1Wr169VFxcrJSUFM2ZM8d5fFBQkJYvX65hw4YpMTFRNWvW1MCBAzVp0iRnpkmTJlqxYoVGjRqlmTNnqmHDhnrzzTeVkpLizDz99NM6duyYxo8fL4/Ho3bt2ikzM/OKE6gBAIC9fF6E3nnnnWuuh4WFKSMjQxkZGVedady4sVauXHnN/XTq1Enbtm275kxaWprS0tKuOQMAAOzFd40BAABrUYQAAIC1KEIAAMBaFCEAAGAtihAAALAWRQgAAFiLIgQAAKxFEQIAANaiCAEAAGtRhAAAgLUoQgAAwFoUIQAAYC2KEAAAsBZFCAAAWIsiBAAArEURAgAA1qIIAQAAa1GEAACAtShCAADAWhQhAABgLYoQAACwFkUIAABYiyIEAACsRRECAADWoggBAABrUYQAAIC1KEIAAMBaFCEAAGAtihAAALAWRQgAAFiLIgQAAKxFEQIAANaiCAEAAGtRhAAAgLUoQgAAwFoUIQAAYC2KEAAAsBZFCAAAWIsiBAAArEURAgAA1qIIAQAAa1GEAACAtShCAADAWhQhAABgLYoQAACwFkUIAABYiyIEAACsRRECAADWoggBAABrUYQAAIC1KEIAAMBaFCEAAGAtihAAALAWRQgAAFiLIgQAAKxFEQIAANaiCAEAAGtRhAAAgLUoQgAAwFoUIQAAYC2KEAAAsBZFCAAAWIsiBAAArEURAgAA1qIIAQAAa1GEAACAtShCAADAWhQhAABgLYoQAACwlhVFKCMjQ3FxcQoLC1NCQoK2bNni70gAAKASqPJFaPHixUpPT9eECRP02WefqW3btkpJSdHRo0f9HQ0AAPhZlS9C06dP15AhQzRo0CC1atVKc+fOVY0aNTRv3jx/RwMAAH4W7O8AN1NJSYlyc3M1duxY5z63262kpCTl5ORcMV9cXKzi4mLndkFBgSSpsLDwhp6vtPjsv5jY240+b0X4OqPk+5yBkFHi19tXAiGjxK+3rwRCRolfb1/xV8ayGWPM9XdoqrCvv/7aSDIbN270un/06NGmQ4cOV8xPmDDBSGJjY2NjY2OrAtvhw4ev2xWq9BGhiho7dqzS09Od26WlpTpx4oTq1q0rl8vlk+coLCxUbGysDh8+rPDwcJ/s09cCIaMUGDnJ6DuBkJOMvhMIOcnoO77OaYzR6dOnFRMTc93ZKl2E6tWrp6CgIOXn53vdn5+fr+jo6CvmQ0NDFRoa6nVfZGTkTckWHh5eqX9TSoGRUQqMnGT0nUDISUbfCYScZPQdX+aMiIi4obkqfbJ0SEiI4uPjlZ2d7dxXWlqq7OxsJSYm+jEZAACoDKr0ESFJSk9P18CBA9W+fXt16NBBr776qoqKijRo0CB/RwMAAH5W5YvQ008/rWPHjmn8+PHyeDxq166dMjMzFRUV5Zc8oaGhmjBhwhVvwVUmgZBRCoycZPSdQMhJRt8JhJxk9B1/5nQZcyOfLQMAAKh6qvQ5QgAAANdCEQIAANaiCAEAAGtRhAAAgLUoQgAAwFoUIQAAYK0qfx2hyuzkyZNatmyZBgwY4O8oKi0tldt9ZS8uLS3VV199pUaNGvkhlTdjjA4ePKjY2FgFBwerpKRE77//voqLi9WtWzfVq1fP3xHL9dhjj2n+/Plq3Lixv6OU68CBA9q3b58aNGige+65x99xJEnFxcVyu92qVq2aJOnLL7/UvHnzdOjQITVu3FiDBw9WkyZN/JrxvffeU9euXVWjRg2/5rie7du3Kzc3V506dVLTpk21c+dOZWRkqLS0VE888YRSUlL8HdGxZs0affLJJ/rmm2/kdrvVtGlT/exnP1Pz5s39HQ1VmU++5h0/Sl5ennG73X7NUFBQYHr37m3CwsJM/fr1zYsvvmguXLjgrHs8Hr9nNMaY3bt3m8aNGxu3222aNWtm9u/fb+Lj403NmjVNjRo1TL169cz//u//+jXjBx98UO4WFBRkZs+e7dz2p2HDhpnTp08bY4w5e/as6dWrl3G73cblchm32206d+7srPtTx44dzZIlS4wxxnzyyScmNDTUtGnTxjz99NPm3nvvNTVq1DAbN270a0aXy2XCw8PNkCFDzKZNm/ya5Wree+89ExQUZOrWrWtq1aplsrKyTGRkpElKSjIpKSkmKCjIvP322/6OafLz802HDh2M2+02wcHBxu12m/j4eBMdHW2CgoLM6NGj/R3RUVxcbBYvXmxGjhxp+vTpY/r06WNGjhxp3n33XVNcXOzveNfl8XjMH/7wB3/HMMYYc/jw4XL/vCkpKTFr1669ZTkoQjdRQUHBNbf169f7vWT85je/MXfeeadZsmSJeeONN0zjxo1N9+7dnf+hPR6Pcblcfs1ojDE9e/Y0P/vZz8yOHTvMyJEjTcuWLU3Pnj1NSUmJOXfunOnRo4f55S9/6deMZWXC5XJddfP3r7fb7Tb5+fnGGGPGjh1rGjZsaNasWWOKiorMJ598Yu644w7z/PPP+zWjMcaEh4c7xbZjx45m1KhRXuvjxo0zDz30kD+iOVwul5k0aZK59957jcvlMnfffbeZMWOG+fbbb/2a61L33XefmTJlijHGmL///e8mMjLSTJo0yVl/+eWXTbt27fwVz/H000+b1NRUU1BQYM6dO2fS0tLMgAEDjDHGZGdnm7p165pXX33VzymN2bt3r2natKkJCwszHTt2ND//+c/Nz3/+c9OxY0cTFhZmmjVrZvbu3evvmNdUGf4BfuTIEXP//fcbt9ttgoKCTP/+/b0K0a3+BzhF6CYq+4vvaltl+IuxUaNG5p///Kdz+9ixY6ZDhw4mOTnZnDt3rtIcEbr99tvNtm3bjDHGnDlzxrhcLrN+/XpnfcOGDaZRo0Z+Sve9Ll26mO7duztFo0xwcLDZuXOnn1J5c7lcTr577rnHLFq0yGv9gw8+MHfeeac/onmpWbOm2bVrlzHGmKioKJOXl+e1vm/fPlOrVi1/RHNc+lpu3brVDBs2zERGRprQ0FDTu3dvs3r1ar/mM+b71/HAgQPGGGNKS0tNtWrVzI4dO5z1L7/80u+vozHfF98vvvjCuX3mzBlTrVo1U1BQYIwx5q9//au56667/BXPkZSUZHr27OnkulRBQYHp2bOnSU5O9kOyH2zfvv2a2+LFi/3+Z/qAAQNMQkKC+fTTT01WVpaJj4837du3NydOnDDG3Pp/gHOO0E1Uu3Zt/ed//qcSEhLKXd+7d69+/etf3+JU3o4dO+Z17kq9evX0j3/8QykpKerWrZvefPNNP6b7wZkzZ1SnTh1JUs2aNVWzZk01aNDAWY+NjVV+fr6/4kmSPvroI82YMUPt27fXnDlz9NOf/tSvea7G5XJJkjwej9q0aeO11rZtWx0+fNgfsbwkJCRo2bJlatGihe644w5t375dbdu2ddbz8vKc3w+VQXx8vOLj4zV9+nQtWbJE8+bNU5cuXdSoUSMdOHDAb7lq166t48ePKy4uTqdOndKFCxd0/PhxZ/348eOqVauW3/KVCQ0NdX5fSpLb7dbFixd14cIFSdKDDz6ogwcP+indDzZs2KAtW7YoPDz8irXw8HBNnjz5qn/e3yrt2rWTy+WSKefbs8ruv/S19od//OMfev/999W+fXtJ37+uvXv31mOPPabs7GxJuqUZKUI30X333SdJ6tixY7nrkZGR5f5mvZUaNWqkXbt2eZ14Wrt2ba1evVrJycl64okn/JjuBzExMTp06JBz0va0adNUv359Z/3YsWO67bbb/BXPMWrUKHXu3Fn9+vXTsmXLNGPGDH9HusKLL76oGjVqyO1268iRI7r77rudtePHj6tmzZp+TPe9KVOmqGvXrioqKlLfvn31u9/9Tnv37lXLli21Z88ezZo1S2PHjvVrxvL+oA4LC1P//v3Vv39/7du3T/Pnz/dDsh8kJSVp+PDhGjFihBYvXqzk5GSNHTtW8+fPl8vl0ujRo/Xwww/7NaMkPfzwwxo/frwWLlyokJAQvfDCC2ratKlTdivL/9+RkZE6ePDgVT9UcPDgQUVGRt7aUJepU6eOpk2bpscff7zc9Z07d6pHjx63OJW3goICr1/P0NBQ/fd//7d69+6tzp07629/+9utDXTLjj1Z6PXXX7/m+9oej8dMnDjxFia60ogRI8xTTz1V7lphYaFJSEjw+2FUY4z59a9/bd54442rrk+dOtV069btFia6tqKiIjN06FDTvHlzExQUVGneGuvYsaPp1KmTs13+mk6ePNl07NjRP+Eus3HjRvPAAw9ccZ7VT37yk0pxvsilb41VVh6Px/zbv/2bqVWrlklJSTGnTp0yaWlpzmvZvHlzs2/fPn/HNF9++aW54447THBwsKlWrZqJiIjwemtx/vz5leLctRdffNHcdtttZvr06Wb79u3G4/EYj8djtm/fbqZPn27q1KljJkyY4NeMycnJZvLkyVddz8vL8/t5n61btzb/9V//dcX958+fN6mpqaZRo0a39O8dvn3ecidPnrziqMClTp8+rc8+++yqR7UqiwMHDigsLMzr7bLKYNmyZVqzZo3Gjh3rdQSrstq/f79CQkLUsGFDf0dxHDt2TPv371dpaakaNGiguLg4f0eSJP3f//2fYmNjy73sRGW3f/9+nT17Vi1atFBwcOV4Y+Ds2bPasGGDiouLlZiYqLp16/o7Urn+9Kc/aebMmfJ4PM5RQWOMoqOjNXLkSI0ZM8av+d5//30VFRXpl7/8ZbnrJ0+e1IcffqiBAwfe4mQ/eO6555SXl6dVq1ZdsXbhwgX16tVLy5YtU2lp6S3JQxG6yb799lvNmzdPOTk58ng8kqTo6Gg9+OCDeuaZZ3T77bf7OWFgZJQCI+fVMiYmJmrQoEGVOmNleh2lwMgZ6BkHDRpUaa6/FQiv5aUOHDjgldPf17UKJBcuXNDZs2fLPdeqbP3rr7++ZddeowjdRJ9++qlSUlJUo0YNJSUlKSoqSpKUn5+v7OxsnT17VqtWrXJOGCNjYOcko105yWhfzus5fPiwJkyYoHnz5vk7ylWRsRy37E04CyUkJJihQ4ea0tLSK9ZKS0vN0KFDzQMPPOCHZD8IhIzGBEZOMvpOIOQko+8ESs7rqQzX6LkeMl6JI0I3UfXq1bVt2za1aNGi3PXdu3fr3nvv1XfffXeLk/0gEDJKgZGTjL4TCDnJ6DuBkvPDDz+85vr+/fv1u9/9ThcvXrxFia5ExoqrHGfJVVHR0dHasmXLVf/n3rJli3MI2F8CIaMUGDnJ6DuBkJOMvhMoOVNTU696jZ4y/r5GDxkrjiJ0E/3+97/X0KFDlZubq8cff/yK973feOMNvfzyy2S8AYGQk4y+Ewg5yeg7gZKzQYMGmjNnjnr27Fnuel5enuLj429xKm9k/BFu2ZtwlnrnnXdMQkKCCQ4Odq7dERwcbBISEszixYv9Hc8YExgZjQmMnGT0nUDISUbfCYScPXr0MC+++OJV1yvDNXrIWHGcI3SLnD9/Xt9++62k77/Golq1an5OdKVAyCgFRk4y+k4g5CSj71TmnOvXr1dRUZG6dOlS7npRUZG2bt3q1+uukbHiKEIAAMBagXdJVAAAAB+hCAEAAGtRhAAAgLUoQgAAwFoUIQCooIkTJ6pdu3b+jgHAByhCAHANLpdLS5cu9XcMADcJRQgAAFiLIgQgIHTq1EkjRozQyJEjddtttykqKkpvvPGGioqKNGjQINWuXVvNmjXTRx995Dxm7dq16tChg0JDQ9WgQQM9//zzunDhgtc+f/Ob32jMmDGqU6eOoqOjNXHiRGc9Li5OkvTEE0/I5XI5t8v89a9/VVxcnCIiItSnTx+dPn36Zr4EAG4CihCAgLFw4ULVq1dPW7Zs0YgRIzRs2DD17t1bDz74oD777DMlJyerf//+Onv2rL7++mt169ZN999/v7Zv367XXntNf/nLXzRlypQr9lmzZk1t3rxZ06ZN06RJk5SVlSVJ+vTTTyVJ8+fP1zfffOPclqQvv/xSS5cu1fLly7V8+XKtXbtWf/zjH2/diwHAJ7iyNICA0KlTJ128eFHr16+XJF28eFERERF68skn9dZbb0mSPB6PGjRooJycHC1btkzvvfeedu3a5XyT9Zw5c/Tcc8+poKBAbrf7in1KUocOHfTYY485pcblcun9999XamqqMzNx4kS99NJL8ng8ql27tiRpzJgxWrdunTZt2nQrXg4APsIRIQABo02bNs5/BwUFqW7dumrdurVzX9m3lh89elS7du1SYmKiU4Ik6aGHHtKZM2f01VdflbtP6ftvxj569Oh1s8TFxTklqCKPA1C5UIQABIzLv4DT5XJ53VdWekpLS/+lfd7I43/s4wBULhQhAFVSy5YtlZOTo0vf/d+wYYNq166thg0b3vB+qlWrposXL96MiAAqAYoQgCrpP/7jP3T48GGNGDFCu3fv1gcffKAJEyYoPT1dbveN/9EXFxen7OxseTwenTx58iYmBuAPFCEAVdJPfvITrVy5Ulu2bFHbtm317LPPavDgwRo3blyF9vPKK68oKytLsbGxuvfee29SWgD+wqfGAACAtTgiBAAArEURAgAA1qIIAQAAa1GEAACAtShCAADAWhQhAABgLYoQAACwFkUIAABYiyIEAACsRRECAADWoggBAABr/T+xYKjeCOybywAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["#weekday별 분포 확인\n","train_weekday = train.groupby('weekday')['count'].sum()\n","train_weekday\n","train_weekday.plot(kind = 'bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":534},"id":"XPqme764tAC_","executionInfo":{"status":"ok","timestamp":1693470459580,"user_tz":-540,"elapsed":1454,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"338a192e-e12e-49a2-873b-ad5aee2a8b7a"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='weekday'>"]},"metadata":{},"execution_count":79},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"l3xnucHhtHOm"},"execution_count":null,"outputs":[]}]}