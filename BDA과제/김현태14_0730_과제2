{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP8JNC6PeaRoscrrectYRHF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["필수과제2\n","- 위에 배웠던 모든 스케일링과 인코딩을 진행\n","- 주어진 데이터를 사용하여 해당 데이터를 가지고 스케일링 및 인코딩 진행\n","- 기존 데이터분포를 확인해보고 이 데이터 분포를통해서 어떤 식으로 스케일링을 해야할지 고민하고 정리 ex) 이상치가 많다, 치우쳐진 데이터이다 (요약통계나 시각화를 통해서 확인가능하며 더 나아가 정규분포인지아닌지 통계치를 가지고 검정가능)\n","- 스케일링한 데이터를 가지고 모델링을 돌려볼 예정이므로 csv파일로도 준비부탁드립니다. (csv파일로 스케일링 된 데이터를 실제 머신에 넣어보고 어떤 정확도와 RMSE값이 나오는지 확인해 볼 것)\n","- 당일에 랜덤으로 csv파일 요청할 예정"],"metadata":{"id":"Y56Z1gAzlLU1"}},{"cell_type":"markdown","source":["- passengerID : 승객 아이디 pppp(그룹번호)_qq(그룹 내 개인번호)\n","- HomePlanet : 출발지\n","- CryoSleep : 기간동안 냉동수면의 여부\n","- Cabin : 방번호\n","- Destination : 목적지\n","- Age : 나이\n","- Vip : vip여부\n","- Roomseivice, FoodCourt, ShoppingMall, Spa, VRDeck : 청구금액\n","- Name : 이름\n","- Transported : 다른 차원으로 이동됐는지 여부(목표 타겟)"],"metadata":{"id":"03iGpo_KuPWB"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tyZ74cLMlbXx","executionInfo":{"status":"ok","timestamp":1691307356311,"user_tz":-540,"elapsed":20803,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"2450132e-8d0a-46a2-a452-19ca51bfff9f"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"69OHGlLvlAIq","executionInfo":{"status":"ok","timestamp":1691310449130,"user_tz":-540,"elapsed":433,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"9c9f1480-456f-46a0-b23a-54d20b8c93dc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId HomePlanet CryoSleep     Cabin    Destination   Age    VIP  \\\n","0        0001_01     Europa     False     B/0/P    TRAPPIST-1e  39.0  False   \n","1        0002_01      Earth     False     F/0/S    TRAPPIST-1e  24.0  False   \n","2        0003_01     Europa     False     A/0/S    TRAPPIST-1e  58.0   True   \n","3        0003_02     Europa     False     A/0/S    TRAPPIST-1e  33.0  False   \n","4        0004_01      Earth     False     F/1/S    TRAPPIST-1e  16.0  False   \n","...          ...        ...       ...       ...            ...   ...    ...   \n","8688     9276_01     Europa     False    A/98/P    55 Cancri e  41.0   True   \n","8689     9278_01      Earth      True  G/1499/S  PSO J318.5-22  18.0  False   \n","8690     9279_01      Earth     False  G/1500/S    TRAPPIST-1e  26.0  False   \n","8691     9280_01     Europa     False   E/608/S    55 Cancri e  32.0  False   \n","8692     9280_02     Europa     False   E/608/S    TRAPPIST-1e  44.0  False   \n","\n","      RoomService  FoodCourt  ShoppingMall     Spa  VRDeck               Name  \\\n","0             0.0        0.0           0.0     0.0     0.0    Maham Ofracculy   \n","1           109.0        9.0          25.0   549.0    44.0       Juanna Vines   \n","2            43.0     3576.0           0.0  6715.0    49.0      Altark Susent   \n","3             0.0     1283.0         371.0  3329.0   193.0       Solam Susent   \n","4           303.0       70.0         151.0   565.0     2.0  Willy Santantines   \n","...           ...        ...           ...     ...     ...                ...   \n","8688          0.0     6819.0           0.0  1643.0    74.0  Gravior Noxnuther   \n","8689          0.0        0.0           0.0     0.0     0.0    Kurta Mondalley   \n","8690          0.0        0.0        1872.0     1.0     0.0       Fayey Connon   \n","8691          0.0     1049.0           0.0   353.0  3235.0   Celeon Hontichre   \n","8692        126.0     4688.0           0.0     0.0    12.0   Propsh Hontichre   \n","\n","      Transported  \n","0           False  \n","1            True  \n","2           False  \n","3           False  \n","4            True  \n","...           ...  \n","8688        False  \n","8689        False  \n","8690         True  \n","8691        False  \n","8692         True  \n","\n","[8693 rows x 14 columns]"],"text/html":["\n","\n","  <div id=\"df-b9385a23-887c-4b1b-9912-922d5fb5aa94\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Name</th>\n","      <th>Transported</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>B/0/P</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Maham Ofracculy</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>Juanna Vines</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>Altark Susent</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>33.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>Solam Susent</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>16.0</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>Willy Santantines</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>9276_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/98/P</td>\n","      <td>55 Cancri e</td>\n","      <td>41.0</td>\n","      <td>True</td>\n","      <td>0.0</td>\n","      <td>6819.0</td>\n","      <td>0.0</td>\n","      <td>1643.0</td>\n","      <td>74.0</td>\n","      <td>Gravior Noxnuther</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>9278_01</td>\n","      <td>Earth</td>\n","      <td>True</td>\n","      <td>G/1499/S</td>\n","      <td>PSO J318.5-22</td>\n","      <td>18.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Kurta Mondalley</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>9279_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>G/1500/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>26.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1872.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>Fayey Connon</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>9280_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>E/608/S</td>\n","      <td>55 Cancri e</td>\n","      <td>32.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1049.0</td>\n","      <td>0.0</td>\n","      <td>353.0</td>\n","      <td>3235.0</td>\n","      <td>Celeon Hontichre</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>9280_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>E/608/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>44.0</td>\n","      <td>False</td>\n","      <td>126.0</td>\n","      <td>4688.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.0</td>\n","      <td>Propsh Hontichre</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9385a23-887c-4b1b-9912-922d5fb5aa94')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-d120e34d-d7ed-410b-ad59-34a3418e8e86\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d120e34d-d7ed-410b-ad59-34a3418e8e86')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-d120e34d-d7ed-410b-ad59-34a3418e8e86 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b9385a23-887c-4b1b-9912-922d5fb5aa94 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b9385a23-887c-4b1b-9912-922d5fb5aa94');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":29}],"source":["import pandas as pd\n","df = pd.read_csv('/content/drive/MyDrive/BDA_CSV/spaceship_tt.csv')\n","df"]},{"cell_type":"markdown","source":["## passengerID 컬럼에서 그룹넘버가 같으면 그룹이라고 컬럼을 만들자"],"metadata":{"id":"nzEGI436Mckl"}},{"cell_type":"code","source":["df['group'] = df['PassengerId'].str.extract(r'(\\d{4})') #앞의 네자리 숫자를 추출하여 group컬럼을 생성\n","df['group'] = df.duplicated(subset = 'group', keep = False)\n","#중복된 값, 즉 그룹넘버가 같으면 True로 설정하는 group컬럼 생성\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"Mv0P0q8MMiUd","executionInfo":{"status":"ok","timestamp":1691310450541,"user_tz":-540,"elapsed":5,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"62da392a-74fd-46dc-a5e5-8ddc50230589"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId HomePlanet CryoSleep     Cabin    Destination   Age    VIP  \\\n","0        0001_01     Europa     False     B/0/P    TRAPPIST-1e  39.0  False   \n","1        0002_01      Earth     False     F/0/S    TRAPPIST-1e  24.0  False   \n","2        0003_01     Europa     False     A/0/S    TRAPPIST-1e  58.0   True   \n","3        0003_02     Europa     False     A/0/S    TRAPPIST-1e  33.0  False   \n","4        0004_01      Earth     False     F/1/S    TRAPPIST-1e  16.0  False   \n","...          ...        ...       ...       ...            ...   ...    ...   \n","8688     9276_01     Europa     False    A/98/P    55 Cancri e  41.0   True   \n","8689     9278_01      Earth      True  G/1499/S  PSO J318.5-22  18.0  False   \n","8690     9279_01      Earth     False  G/1500/S    TRAPPIST-1e  26.0  False   \n","8691     9280_01     Europa     False   E/608/S    55 Cancri e  32.0  False   \n","8692     9280_02     Europa     False   E/608/S    TRAPPIST-1e  44.0  False   \n","\n","      RoomService  FoodCourt  ShoppingMall     Spa  VRDeck               Name  \\\n","0             0.0        0.0           0.0     0.0     0.0    Maham Ofracculy   \n","1           109.0        9.0          25.0   549.0    44.0       Juanna Vines   \n","2            43.0     3576.0           0.0  6715.0    49.0      Altark Susent   \n","3             0.0     1283.0         371.0  3329.0   193.0       Solam Susent   \n","4           303.0       70.0         151.0   565.0     2.0  Willy Santantines   \n","...           ...        ...           ...     ...     ...                ...   \n","8688          0.0     6819.0           0.0  1643.0    74.0  Gravior Noxnuther   \n","8689          0.0        0.0           0.0     0.0     0.0    Kurta Mondalley   \n","8690          0.0        0.0        1872.0     1.0     0.0       Fayey Connon   \n","8691          0.0     1049.0           0.0   353.0  3235.0   Celeon Hontichre   \n","8692        126.0     4688.0           0.0     0.0    12.0   Propsh Hontichre   \n","\n","      Transported  group  \n","0           False  False  \n","1            True  False  \n","2           False   True  \n","3           False   True  \n","4            True  False  \n","...           ...    ...  \n","8688        False  False  \n","8689        False  False  \n","8690         True  False  \n","8691        False   True  \n","8692         True   True  \n","\n","[8693 rows x 15 columns]"],"text/html":["\n","\n","  <div id=\"df-159490cd-8750-4430-8456-fb565c8ace9e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Name</th>\n","      <th>Transported</th>\n","      <th>group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>B/0/P</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Maham Ofracculy</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>Juanna Vines</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>Altark Susent</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>33.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>Solam Susent</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>16.0</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>Willy Santantines</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>9276_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/98/P</td>\n","      <td>55 Cancri e</td>\n","      <td>41.0</td>\n","      <td>True</td>\n","      <td>0.0</td>\n","      <td>6819.0</td>\n","      <td>0.0</td>\n","      <td>1643.0</td>\n","      <td>74.0</td>\n","      <td>Gravior Noxnuther</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>9278_01</td>\n","      <td>Earth</td>\n","      <td>True</td>\n","      <td>G/1499/S</td>\n","      <td>PSO J318.5-22</td>\n","      <td>18.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Kurta Mondalley</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>9279_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>G/1500/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>26.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1872.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>Fayey Connon</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>9280_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>E/608/S</td>\n","      <td>55 Cancri e</td>\n","      <td>32.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1049.0</td>\n","      <td>0.0</td>\n","      <td>353.0</td>\n","      <td>3235.0</td>\n","      <td>Celeon Hontichre</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>9280_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>E/608/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>44.0</td>\n","      <td>False</td>\n","      <td>126.0</td>\n","      <td>4688.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.0</td>\n","      <td>Propsh Hontichre</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 15 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-159490cd-8750-4430-8456-fb565c8ace9e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-34b8e00c-4716-4789-bb49-f728d92c6616\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34b8e00c-4716-4789-bb49-f728d92c6616')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-34b8e00c-4716-4789-bb49-f728d92c6616 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-159490cd-8750-4430-8456-fb565c8ace9e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-159490cd-8750-4430-8456-fb565c8ace9e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["## HomePlanet컬럼은 원핫인코딩을 이용하여 인코딩 하겠다.\n","- Earth, Europa, Mars는 순서나 순위의 의미가 없으므로 원핫인코딩 사용"],"metadata":{"id":"8inSUHroOvjJ"}},{"cell_type":"code","source":["Home = pd.get_dummies(df.HomePlanet)\n","Home"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"ZuNZNCd6OCyP","executionInfo":{"status":"ok","timestamp":1691310451215,"user_tz":-540,"elapsed":12,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"07eb5c4a-5bc8-40de-f22e-6d4654668791"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Earth  Europa  Mars\n","0         0       1     0\n","1         1       0     0\n","2         0       1     0\n","3         0       1     0\n","4         1       0     0\n","...     ...     ...   ...\n","8688      0       1     0\n","8689      1       0     0\n","8690      1       0     0\n","8691      0       1     0\n","8692      0       1     0\n","\n","[8693 rows x 3 columns]"],"text/html":["\n","\n","  <div id=\"df-53f9ebfb-3519-4c8e-914f-5cd0935c4cb1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Earth</th>\n","      <th>Europa</th>\n","      <th>Mars</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53f9ebfb-3519-4c8e-914f-5cd0935c4cb1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-4508de35-0606-46af-839d-2a206ab327a1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4508de35-0606-46af-839d-2a206ab327a1')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-4508de35-0606-46af-839d-2a206ab327a1 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-53f9ebfb-3519-4c8e-914f-5cd0935c4cb1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-53f9ebfb-3519-4c8e-914f-5cd0935c4cb1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["df = pd.concat([df,Home],axis = 1 )\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"VBVgX62YPZoa","executionInfo":{"status":"ok","timestamp":1691310451216,"user_tz":-540,"elapsed":12,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"b2bbb842-7417-4427-d7de-99b5ef83ecd8"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId HomePlanet CryoSleep     Cabin    Destination   Age    VIP  \\\n","0        0001_01     Europa     False     B/0/P    TRAPPIST-1e  39.0  False   \n","1        0002_01      Earth     False     F/0/S    TRAPPIST-1e  24.0  False   \n","2        0003_01     Europa     False     A/0/S    TRAPPIST-1e  58.0   True   \n","3        0003_02     Europa     False     A/0/S    TRAPPIST-1e  33.0  False   \n","4        0004_01      Earth     False     F/1/S    TRAPPIST-1e  16.0  False   \n","...          ...        ...       ...       ...            ...   ...    ...   \n","8688     9276_01     Europa     False    A/98/P    55 Cancri e  41.0   True   \n","8689     9278_01      Earth      True  G/1499/S  PSO J318.5-22  18.0  False   \n","8690     9279_01      Earth     False  G/1500/S    TRAPPIST-1e  26.0  False   \n","8691     9280_01     Europa     False   E/608/S    55 Cancri e  32.0  False   \n","8692     9280_02     Europa     False   E/608/S    TRAPPIST-1e  44.0  False   \n","\n","      RoomService  FoodCourt  ShoppingMall     Spa  VRDeck               Name  \\\n","0             0.0        0.0           0.0     0.0     0.0    Maham Ofracculy   \n","1           109.0        9.0          25.0   549.0    44.0       Juanna Vines   \n","2            43.0     3576.0           0.0  6715.0    49.0      Altark Susent   \n","3             0.0     1283.0         371.0  3329.0   193.0       Solam Susent   \n","4           303.0       70.0         151.0   565.0     2.0  Willy Santantines   \n","...           ...        ...           ...     ...     ...                ...   \n","8688          0.0     6819.0           0.0  1643.0    74.0  Gravior Noxnuther   \n","8689          0.0        0.0           0.0     0.0     0.0    Kurta Mondalley   \n","8690          0.0        0.0        1872.0     1.0     0.0       Fayey Connon   \n","8691          0.0     1049.0           0.0   353.0  3235.0   Celeon Hontichre   \n","8692        126.0     4688.0           0.0     0.0    12.0   Propsh Hontichre   \n","\n","      Transported  group  Earth  Europa  Mars  \n","0           False  False      0       1     0  \n","1            True  False      1       0     0  \n","2           False   True      0       1     0  \n","3           False   True      0       1     0  \n","4            True  False      1       0     0  \n","...           ...    ...    ...     ...   ...  \n","8688        False  False      0       1     0  \n","8689        False  False      1       0     0  \n","8690         True  False      1       0     0  \n","8691        False   True      0       1     0  \n","8692         True   True      0       1     0  \n","\n","[8693 rows x 18 columns]"],"text/html":["\n","\n","  <div id=\"df-94f3d105-8486-46ff-8878-bd9b16551750\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Name</th>\n","      <th>Transported</th>\n","      <th>group</th>\n","      <th>Earth</th>\n","      <th>Europa</th>\n","      <th>Mars</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>B/0/P</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Maham Ofracculy</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>Juanna Vines</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>Altark Susent</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>33.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>Solam Susent</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>16.0</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>Willy Santantines</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>9276_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/98/P</td>\n","      <td>55 Cancri e</td>\n","      <td>41.0</td>\n","      <td>True</td>\n","      <td>0.0</td>\n","      <td>6819.0</td>\n","      <td>0.0</td>\n","      <td>1643.0</td>\n","      <td>74.0</td>\n","      <td>Gravior Noxnuther</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>9278_01</td>\n","      <td>Earth</td>\n","      <td>True</td>\n","      <td>G/1499/S</td>\n","      <td>PSO J318.5-22</td>\n","      <td>18.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Kurta Mondalley</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>9279_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>G/1500/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>26.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1872.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>Fayey Connon</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>9280_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>E/608/S</td>\n","      <td>55 Cancri e</td>\n","      <td>32.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1049.0</td>\n","      <td>0.0</td>\n","      <td>353.0</td>\n","      <td>3235.0</td>\n","      <td>Celeon Hontichre</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>9280_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>E/608/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>44.0</td>\n","      <td>False</td>\n","      <td>126.0</td>\n","      <td>4688.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.0</td>\n","      <td>Propsh Hontichre</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 18 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94f3d105-8486-46ff-8878-bd9b16551750')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-989ca991-4403-4755-82bf-e4b61a20d9fe\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-989ca991-4403-4755-82bf-e4b61a20d9fe')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-989ca991-4403-4755-82bf-e4b61a20d9fe button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-94f3d105-8486-46ff-8878-bd9b16551750 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-94f3d105-8486-46ff-8878-bd9b16551750');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["## Cabin 컬럼은 방의 위치를 말해주는데 몇번째 칸에 있냐가 중요하다 판단하여 번호와 좌측인지 우측인지는 제외하겠다.\n","- A~T까지만 구분"],"metadata":{"id":"VT3PmuVfTPwQ"}},{"cell_type":"code","source":["df['Cabin_num'] = df['Cabin'].str.extract(r'^([A-Za-z])')#맨 앞 한글자만 추출해서 컬럼에 지정\n","df = pd.concat([df,pd.get_dummies(df['Cabin_num'])],axis = 1)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"LNTIQXWhPm2L","executionInfo":{"status":"ok","timestamp":1691310451216,"user_tz":-540,"elapsed":11,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"711190af-e2ef-414b-c4ba-3cbe4691ec92"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId HomePlanet CryoSleep     Cabin    Destination   Age    VIP  \\\n","0        0001_01     Europa     False     B/0/P    TRAPPIST-1e  39.0  False   \n","1        0002_01      Earth     False     F/0/S    TRAPPIST-1e  24.0  False   \n","2        0003_01     Europa     False     A/0/S    TRAPPIST-1e  58.0   True   \n","3        0003_02     Europa     False     A/0/S    TRAPPIST-1e  33.0  False   \n","4        0004_01      Earth     False     F/1/S    TRAPPIST-1e  16.0  False   \n","...          ...        ...       ...       ...            ...   ...    ...   \n","8688     9276_01     Europa     False    A/98/P    55 Cancri e  41.0   True   \n","8689     9278_01      Earth      True  G/1499/S  PSO J318.5-22  18.0  False   \n","8690     9279_01      Earth     False  G/1500/S    TRAPPIST-1e  26.0  False   \n","8691     9280_01     Europa     False   E/608/S    55 Cancri e  32.0  False   \n","8692     9280_02     Europa     False   E/608/S    TRAPPIST-1e  44.0  False   \n","\n","      RoomService  FoodCourt  ShoppingMall  ...  Mars  Cabin_num  A  B  C  D  \\\n","0             0.0        0.0           0.0  ...     0          B  0  1  0  0   \n","1           109.0        9.0          25.0  ...     0          F  0  0  0  0   \n","2            43.0     3576.0           0.0  ...     0          A  1  0  0  0   \n","3             0.0     1283.0         371.0  ...     0          A  1  0  0  0   \n","4           303.0       70.0         151.0  ...     0          F  0  0  0  0   \n","...           ...        ...           ...  ...   ...        ... .. .. .. ..   \n","8688          0.0     6819.0           0.0  ...     0          A  1  0  0  0   \n","8689          0.0        0.0           0.0  ...     0          G  0  0  0  0   \n","8690          0.0        0.0        1872.0  ...     0          G  0  0  0  0   \n","8691          0.0     1049.0           0.0  ...     0          E  0  0  0  0   \n","8692        126.0     4688.0           0.0  ...     0          E  0  0  0  0   \n","\n","      E  F  G  T  \n","0     0  0  0  0  \n","1     0  1  0  0  \n","2     0  0  0  0  \n","3     0  0  0  0  \n","4     0  1  0  0  \n","...  .. .. .. ..  \n","8688  0  0  0  0  \n","8689  0  0  1  0  \n","8690  0  0  1  0  \n","8691  1  0  0  0  \n","8692  1  0  0  0  \n","\n","[8693 rows x 27 columns]"],"text/html":["\n","\n","  <div id=\"df-2c810546-d2f7-4c7b-98da-a9c0a6aa626e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>...</th>\n","      <th>Mars</th>\n","      <th>Cabin_num</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>E</th>\n","      <th>F</th>\n","      <th>G</th>\n","      <th>T</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>B/0/P</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>B</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>F</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>33.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>16.0</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>F</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>9276_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/98/P</td>\n","      <td>55 Cancri e</td>\n","      <td>41.0</td>\n","      <td>True</td>\n","      <td>0.0</td>\n","      <td>6819.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>A</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>9278_01</td>\n","      <td>Earth</td>\n","      <td>True</td>\n","      <td>G/1499/S</td>\n","      <td>PSO J318.5-22</td>\n","      <td>18.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>G</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>9279_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>G/1500/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>26.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1872.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>G</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>9280_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>E/608/S</td>\n","      <td>55 Cancri e</td>\n","      <td>32.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1049.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>E</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>9280_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>E/608/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>44.0</td>\n","      <td>False</td>\n","      <td>126.0</td>\n","      <td>4688.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>E</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 27 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2c810546-d2f7-4c7b-98da-a9c0a6aa626e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-f27b2cc8-6e10-4a47-8e9b-5c5dd9bd0690\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f27b2cc8-6e10-4a47-8e9b-5c5dd9bd0690')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-f27b2cc8-6e10-4a47-8e9b-5c5dd9bd0690 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2c810546-d2f7-4c7b-98da-a9c0a6aa626e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2c810546-d2f7-4c7b-98da-a9c0a6aa626e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":33}]},{"cell_type":"markdown","source":["## destination컬럼은 목적지 별로 원핫인코딩"],"metadata":{"id":"O4BP9vy60Rad"}},{"cell_type":"code","source":["df['Destination'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-uz7YvekwyaL","executionInfo":{"status":"ok","timestamp":1691310451636,"user_tz":-540,"elapsed":3,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"286701b6-cb8d-4382-dc8a-b34c2b204243"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["TRAPPIST-1e      5915\n","55 Cancri e      1800\n","PSO J318.5-22     796\n","Name: Destination, dtype: int64"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["df = pd.concat([df, pd.get_dummies(df['Destination'])],axis = 1)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_C61sJhC0aGg","executionInfo":{"status":"ok","timestamp":1691310452080,"user_tz":-540,"elapsed":7,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"42f263e4-cf19-4f1e-abc7-d293e0d69505"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId HomePlanet CryoSleep     Cabin    Destination   Age    VIP  \\\n","0        0001_01     Europa     False     B/0/P    TRAPPIST-1e  39.0  False   \n","1        0002_01      Earth     False     F/0/S    TRAPPIST-1e  24.0  False   \n","2        0003_01     Europa     False     A/0/S    TRAPPIST-1e  58.0   True   \n","3        0003_02     Europa     False     A/0/S    TRAPPIST-1e  33.0  False   \n","4        0004_01      Earth     False     F/1/S    TRAPPIST-1e  16.0  False   \n","...          ...        ...       ...       ...            ...   ...    ...   \n","8688     9276_01     Europa     False    A/98/P    55 Cancri e  41.0   True   \n","8689     9278_01      Earth      True  G/1499/S  PSO J318.5-22  18.0  False   \n","8690     9279_01      Earth     False  G/1500/S    TRAPPIST-1e  26.0  False   \n","8691     9280_01     Europa     False   E/608/S    55 Cancri e  32.0  False   \n","8692     9280_02     Europa     False   E/608/S    TRAPPIST-1e  44.0  False   \n","\n","      RoomService  FoodCourt  ShoppingMall  ...  B  C  D  E  F  G  T  \\\n","0             0.0        0.0           0.0  ...  1  0  0  0  0  0  0   \n","1           109.0        9.0          25.0  ...  0  0  0  0  1  0  0   \n","2            43.0     3576.0           0.0  ...  0  0  0  0  0  0  0   \n","3             0.0     1283.0         371.0  ...  0  0  0  0  0  0  0   \n","4           303.0       70.0         151.0  ...  0  0  0  0  1  0  0   \n","...           ...        ...           ...  ... .. .. .. .. .. .. ..   \n","8688          0.0     6819.0           0.0  ...  0  0  0  0  0  0  0   \n","8689          0.0        0.0           0.0  ...  0  0  0  0  0  1  0   \n","8690          0.0        0.0        1872.0  ...  0  0  0  0  0  1  0   \n","8691          0.0     1049.0           0.0  ...  0  0  0  1  0  0  0   \n","8692        126.0     4688.0           0.0  ...  0  0  0  1  0  0  0   \n","\n","      55 Cancri e PSO J318.5-22  TRAPPIST-1e  \n","0               0             0            1  \n","1               0             0            1  \n","2               0             0            1  \n","3               0             0            1  \n","4               0             0            1  \n","...           ...           ...          ...  \n","8688            1             0            0  \n","8689            0             1            0  \n","8690            0             0            1  \n","8691            1             0            0  \n","8692            0             0            1  \n","\n","[8693 rows x 30 columns]"],"text/html":["\n","\n","  <div id=\"df-04013f25-11cc-44cc-83ea-e8342c28c853\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>...</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>E</th>\n","      <th>F</th>\n","      <th>G</th>\n","      <th>T</th>\n","      <th>55 Cancri e</th>\n","      <th>PSO J318.5-22</th>\n","      <th>TRAPPIST-1e</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>B/0/P</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>33.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>16.0</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>9276_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/98/P</td>\n","      <td>55 Cancri e</td>\n","      <td>41.0</td>\n","      <td>True</td>\n","      <td>0.0</td>\n","      <td>6819.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>9278_01</td>\n","      <td>Earth</td>\n","      <td>True</td>\n","      <td>G/1499/S</td>\n","      <td>PSO J318.5-22</td>\n","      <td>18.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>9279_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>G/1500/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>26.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1872.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>9280_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>E/608/S</td>\n","      <td>55 Cancri e</td>\n","      <td>32.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1049.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>9280_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>E/608/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>44.0</td>\n","      <td>False</td>\n","      <td>126.0</td>\n","      <td>4688.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 30 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04013f25-11cc-44cc-83ea-e8342c28c853')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-b02f7da4-fc7e-4d85-a7d5-68e2cb7ca705\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b02f7da4-fc7e-4d85-a7d5-68e2cb7ca705')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-b02f7da4-fc7e-4d85-a7d5-68e2cb7ca705 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-04013f25-11cc-44cc-83ea-e8342c28c853 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-04013f25-11cc-44cc-83ea-e8342c28c853');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n15suW7D0jQ-","executionInfo":{"status":"ok","timestamp":1691310452081,"user_tz":-540,"elapsed":6,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"63f29b1a-77f4-4398-dc6e-23bea190e501"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['PassengerId', 'HomePlanet', 'CryoSleep', 'Cabin', 'Destination', 'Age',\n","       'VIP', 'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck',\n","       'Name', 'Transported', 'group', 'Earth', 'Europa', 'Mars', 'Cabin_num',\n","       'A', 'B', 'C', 'D', 'E', 'F', 'G', 'T', '55 Cancri e', 'PSO J318.5-22',\n","       'TRAPPIST-1e'],\n","      dtype='object')"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["df = df[['PassengerId','group', 'Earth', 'Europa', 'Mars', 'CryoSleep', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'T',\n","          '55 Cancri e', 'PSO J318.5-22', 'TRAPPIST-1e', 'VIP',\n","         'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck', 'Transported']]\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"GjV69QkY02bM","executionInfo":{"status":"ok","timestamp":1691310453029,"user_tz":-540,"elapsed":5,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"dda6adf1-6390-40f2-f222-e8e2a8022d97"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  group  Earth  Europa  Mars CryoSleep  A  B  C  D  ...  \\\n","0        0001_01  False      0       1     0     False  0  1  0  0  ...   \n","1        0002_01  False      1       0     0     False  0  0  0  0  ...   \n","2        0003_01   True      0       1     0     False  1  0  0  0  ...   \n","3        0003_02   True      0       1     0     False  1  0  0  0  ...   \n","4        0004_01  False      1       0     0     False  0  0  0  0  ...   \n","...          ...    ...    ...     ...   ...       ... .. .. .. ..  ...   \n","8688     9276_01  False      0       1     0     False  1  0  0  0  ...   \n","8689     9278_01  False      1       0     0      True  0  0  0  0  ...   \n","8690     9279_01  False      1       0     0     False  0  0  0  0  ...   \n","8691     9280_01   True      0       1     0     False  0  0  0  0  ...   \n","8692     9280_02   True      0       1     0     False  0  0  0  0  ...   \n","\n","      55 Cancri e  PSO J318.5-22  TRAPPIST-1e    VIP  RoomService  FoodCourt  \\\n","0               0              0            1  False          0.0        0.0   \n","1               0              0            1  False        109.0        9.0   \n","2               0              0            1   True         43.0     3576.0   \n","3               0              0            1  False          0.0     1283.0   \n","4               0              0            1  False        303.0       70.0   \n","...           ...            ...          ...    ...          ...        ...   \n","8688            1              0            0   True          0.0     6819.0   \n","8689            0              1            0  False          0.0        0.0   \n","8690            0              0            1  False          0.0        0.0   \n","8691            1              0            0  False          0.0     1049.0   \n","8692            0              0            1  False        126.0     4688.0   \n","\n","      ShoppingMall     Spa  VRDeck  Transported  \n","0              0.0     0.0     0.0        False  \n","1             25.0   549.0    44.0         True  \n","2              0.0  6715.0    49.0        False  \n","3            371.0  3329.0   193.0        False  \n","4            151.0   565.0     2.0         True  \n","...            ...     ...     ...          ...  \n","8688           0.0  1643.0    74.0        False  \n","8689           0.0     0.0     0.0        False  \n","8690        1872.0     1.0     0.0         True  \n","8691           0.0   353.0  3235.0        False  \n","8692           0.0     0.0    12.0         True  \n","\n","[8693 rows x 24 columns]"],"text/html":["\n","\n","  <div id=\"df-d325ffec-0e48-4695-9325-f4fadc12f60e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>group</th>\n","      <th>Earth</th>\n","      <th>Europa</th>\n","      <th>Mars</th>\n","      <th>CryoSleep</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>...</th>\n","      <th>55 Cancri e</th>\n","      <th>PSO J318.5-22</th>\n","      <th>TRAPPIST-1e</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Transported</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>9276_01</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>0.0</td>\n","      <td>6819.0</td>\n","      <td>0.0</td>\n","      <td>1643.0</td>\n","      <td>74.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>9278_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>9279_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1872.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>9280_01</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1049.0</td>\n","      <td>0.0</td>\n","      <td>353.0</td>\n","      <td>3235.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>9280_02</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>126.0</td>\n","      <td>4688.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.0</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 24 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d325ffec-0e48-4695-9325-f4fadc12f60e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-c1b85ba7-855a-4b3d-89b8-9e7c7fce5313\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c1b85ba7-855a-4b3d-89b8-9e7c7fce5313')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-c1b85ba7-855a-4b3d-89b8-9e7c7fce5313 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d325ffec-0e48-4695-9325-f4fadc12f60e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d325ffec-0e48-4695-9325-f4fadc12f60e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["##  'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck' 컬럼들의 분포를 확인\n","- 형태가 죄측으로"],"metadata":{"id":"mJRaD5ElyHf4"}},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","import matplotlib.gridspec as gridspec\n","\n","grid = gridspec.GridSpec(3,2)\n","plt.figure(figsize = (20,15))\n","plt.subplots_adjust(wspace = 0.5, hspace = 0.5)\n","\n","features = ['RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck']\n","\n","for idx, feature in enumerate(features):\n","  ax = plt.subplot(grid[idx])\n","  sns.distplot(df[feature], ax = ax)\n","  ax.set_title(f'{feature} Distribution')"],"metadata":{"id":"-j629ksP1oma","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1691310456902,"user_tz":-540,"elapsed":3358,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"af096ac2-f027-4303-a4e4-55aaaeaa1735"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-38-8affb41ea7c9>:13: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df[feature], ax = ax)\n","<ipython-input-38-8affb41ea7c9>:13: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df[feature], ax = ax)\n","<ipython-input-38-8affb41ea7c9>:13: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df[feature], ax = ax)\n","<ipython-input-38-8affb41ea7c9>:13: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df[feature], ax = ax)\n","<ipython-input-38-8affb41ea7c9>:13: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df[feature], ax = ax)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x1500 with 5 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["features = ['RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck']\n","for feature in features:\n","  skewness = df[feature].skew() #왜도 계산\n","  kurtosis = df[feature].kurtosis() #첨도 계산\n","  print(feature, \"왜도 : \", skewness)\n","  print(feature, \"첨도 : \", kurtosis)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Ghz8rDZyDn6","executionInfo":{"status":"ok","timestamp":1691310456902,"user_tz":-540,"elapsed":8,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"506abb93-3cc6-48aa-be4f-bd1bd03f2a35"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["RoomService 왜도 :  6.333014062092135\n","RoomService 첨도 :  65.27380190330952\n","FoodCourt 왜도 :  7.102227852514122\n","FoodCourt 첨도 :  73.3072300133306\n","ShoppingMall 왜도 :  12.62756203889759\n","ShoppingMall 첨도 :  328.8709130625136\n","Spa 왜도 :  7.63601988471242\n","Spa 첨도 :  81.20210973062822\n","VRDeck 왜도 :  7.819731592048683\n","VRDeck 첨도 :  86.01118606096058\n"]}]},{"cell_type":"markdown","source":["- 각 컬럼의 분포와 왜도, 첨도를 확인했을때, 로그변환이 필요해 보인다."],"metadata":{"id":"OHjhFqECz9qe"}},{"cell_type":"markdown","source":["## 로그 변환"],"metadata":{"id":"o-RMkjRs1jql"}},{"cell_type":"code","source":["import numpy as np\n","df_fee = df[['RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck']]\n","df_fee_log = np.log(df_fee)\n","print(\"로그 전\")\n","print(df_fee.describe())\n","print('로그 후')\n","print(df_fee_log.describe())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CBmIPYvgz2hq","executionInfo":{"status":"ok","timestamp":1691310456903,"user_tz":-540,"elapsed":7,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"77a95dcd-26dc-4ddc-a2f4-c91f7aaa7d71"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["로그 전\n","        RoomService     FoodCourt  ShoppingMall           Spa        VRDeck\n","count   8512.000000   8510.000000   8485.000000   8510.000000   8505.000000\n","mean     224.687617    458.077203    173.729169    311.138778    304.854791\n","std      666.717663   1611.489240    604.696458   1136.705535   1145.717189\n","min        0.000000      0.000000      0.000000      0.000000      0.000000\n","25%        0.000000      0.000000      0.000000      0.000000      0.000000\n","50%        0.000000      0.000000      0.000000      0.000000      0.000000\n","75%       47.000000     76.000000     27.000000     59.000000     46.000000\n","max    14327.000000  29813.000000  23492.000000  22408.000000  24133.000000\n","로그 후\n","       RoomService    FoodCourt  ShoppingMall          Spa       VRDeck\n","count  8512.000000  8510.000000   8485.000000  8510.000000  8505.000000\n","mean          -inf         -inf          -inf         -inf         -inf\n","std            NaN          NaN           NaN          NaN          NaN\n","min           -inf         -inf          -inf         -inf         -inf\n","25%            NaN          NaN           NaN          NaN          NaN\n","50%            NaN          NaN           NaN          NaN          NaN\n","75%       3.850148     4.330733      3.295837     4.077537     3.828641\n","max       9.569901    10.302700     10.064415    10.017173    10.091335\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/pandas/core/internals/blocks.py:351: RuntimeWarning: divide by zero encountered in log\n","  result = func(self.values, **kwargs)\n","/usr/local/lib/python3.10/dist-packages/numpy/lib/function_base.py:4486: RuntimeWarning: invalid value encountered in subtract\n","  diff_b_a = subtract(b, a)\n","/usr/local/lib/python3.10/dist-packages/numpy/lib/function_base.py:4486: RuntimeWarning: invalid value encountered in subtract\n","  diff_b_a = subtract(b, a)\n","/usr/local/lib/python3.10/dist-packages/numpy/lib/function_base.py:4486: RuntimeWarning: invalid value encountered in subtract\n","  diff_b_a = subtract(b, a)\n","/usr/local/lib/python3.10/dist-packages/numpy/lib/function_base.py:4486: RuntimeWarning: invalid value encountered in subtract\n","  diff_b_a = subtract(b, a)\n","/usr/local/lib/python3.10/dist-packages/numpy/lib/function_base.py:4486: RuntimeWarning: invalid value encountered in subtract\n","  diff_b_a = subtract(b, a)\n"]}]},{"cell_type":"markdown","source":["- 로그 변환 후 값이 NaN이거나 -inf인 값들은 그냥 0으로 바꾼다."],"metadata":{"id":"jzBVD0-O2n2R"}},{"cell_type":"code","source":["df_fee_log[np.isnan(df_fee_log)] = 0\n","df_fee_log[df_fee_log == -np.inf] = 0\n","df_fee_log"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"j25swCIs2dHN","executionInfo":{"status":"ok","timestamp":1691310462450,"user_tz":-540,"elapsed":587,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"2ce72308-47b2-482a-c00f-7155a15b6a77"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      RoomService  FoodCourt  ShoppingMall       Spa    VRDeck\n","0        0.000000   0.000000      0.000000  0.000000  0.000000\n","1        4.691348   2.197225      3.218876  6.308098  3.784190\n","2        3.761200   8.182000      0.000000  8.812099  3.891820\n","3        0.000000   7.156956      5.916202  8.110427  5.262690\n","4        5.713733   4.248495      5.017280  6.336826  0.693147\n","...           ...        ...           ...       ...       ...\n","8688     0.000000   8.827468      0.000000  7.404279  4.304065\n","8689     0.000000   0.000000      0.000000  0.000000  0.000000\n","8690     0.000000   0.000000      7.534763  0.000000  0.000000\n","8691     0.000000   6.955593      0.000000  5.866468  8.081784\n","8692     4.836282   8.452761      0.000000  0.000000  2.484907\n","\n","[8693 rows x 5 columns]"],"text/html":["\n","\n","  <div id=\"df-331140b1-d9e0-40e5-b50a-c1aaa2e438fd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.691348</td>\n","      <td>2.197225</td>\n","      <td>3.218876</td>\n","      <td>6.308098</td>\n","      <td>3.784190</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.761200</td>\n","      <td>8.182000</td>\n","      <td>0.000000</td>\n","      <td>8.812099</td>\n","      <td>3.891820</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000000</td>\n","      <td>7.156956</td>\n","      <td>5.916202</td>\n","      <td>8.110427</td>\n","      <td>5.262690</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.713733</td>\n","      <td>4.248495</td>\n","      <td>5.017280</td>\n","      <td>6.336826</td>\n","      <td>0.693147</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>0.000000</td>\n","      <td>8.827468</td>\n","      <td>0.000000</td>\n","      <td>7.404279</td>\n","      <td>4.304065</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.534763</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>0.000000</td>\n","      <td>6.955593</td>\n","      <td>0.000000</td>\n","      <td>5.866468</td>\n","      <td>8.081784</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>4.836282</td>\n","      <td>8.452761</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.484907</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-331140b1-d9e0-40e5-b50a-c1aaa2e438fd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-f33bb6c5-7403-443e-8d87-0073770ece19\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f33bb6c5-7403-443e-8d87-0073770ece19')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-f33bb6c5-7403-443e-8d87-0073770ece19 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-331140b1-d9e0-40e5-b50a-c1aaa2e438fd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-331140b1-d9e0-40e5-b50a-c1aaa2e438fd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df_fee_log.columns = ['log_RoomService', 'log_FoodCourt', 'log_ShoppingMall', 'log_Spa', 'log_VRDeck']"],"metadata":{"id":"8ENtDI2d2-6s","executionInfo":{"status":"ok","timestamp":1691310465601,"user_tz":-540,"elapsed":3,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["grid = gridspec.GridSpec(3,2)\n","plt.figure(figsize = (20,15))\n","plt.subplots_adjust(wspace = 0.5, hspace = 0.5)\n","\n","features = ['log_RoomService', 'log_FoodCourt', 'log_ShoppingMall', 'log_Spa', 'log_VRDeck']\n","\n","for idx, feature in enumerate(features):\n","  ax = plt.subplot(grid[idx])\n","  sns.distplot(df_fee_log[feature], ax = ax)\n","  ax.set_title(f'{feature} Distribution')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"tFqtK5FC3VsQ","executionInfo":{"status":"ok","timestamp":1691310469497,"user_tz":-540,"elapsed":2487,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"0850e346-885a-4bab-bf24-7950fd174e62"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-43-903a36239187>:9: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df_fee_log[feature], ax = ax)\n","<ipython-input-43-903a36239187>:9: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df_fee_log[feature], ax = ax)\n","<ipython-input-43-903a36239187>:9: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df_fee_log[feature], ax = ax)\n","<ipython-input-43-903a36239187>:9: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df_fee_log[feature], ax = ax)\n","<ipython-input-43-903a36239187>:9: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df_fee_log[feature], ax = ax)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x1500 with 5 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["features = ['log_RoomService', 'log_FoodCourt', 'log_ShoppingMall', 'log_Spa', 'log_VRDeck']\n","for feature in features:\n","  skewness = df_fee_log[feature].skew() #왜도 계산\n","  kurtosis = df_fee_log[feature].kurtosis() #첨도 계산\n","  print(feature, \"왜도 : \", skewness)\n","  print(feature, \"첨도 : \", kurtosis)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c-KDa57C3-jG","executionInfo":{"status":"ok","timestamp":1691310472149,"user_tz":-540,"elapsed":409,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"637117f5-2349-4781-9273-f224f07216ba"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["log_RoomService 왜도 :  1.162566846683719\n","log_RoomService 첨도 :  -0.3526319192312224\n","log_FoodCourt 왜도 :  1.1542002472621742\n","log_FoodCourt 첨도 :  -0.30454619798450544\n","log_ShoppingMall 왜도 :  1.2549323200207336\n","log_ShoppingMall 첨도 :  -0.07906036182289089\n","log_Spa 왜도 :  1.1364644153523717\n","log_Spa 첨도 :  -0.3085782088182376\n","log_VRDeck 왜도 :  1.2069644228349954\n","log_VRDeck 첨도 :  -0.14816099109159708\n"]}]},{"cell_type":"markdown","source":["- 왜도가 0에 가까워지고 첨도가 작아졌으므로 로그 변환은 멈춘다."],"metadata":{"id":"u1hIGr4i4dtD"}},{"cell_type":"markdown","source":["## RobustScaler() 사용"],"metadata":{"id":"GTec_A_y85NS"}},{"cell_type":"code","source":["from sklearn.preprocessing import RobustScaler\n","\n","scaler = RobustScaler()\n","scaler.fit(df_fee_log)\n","df_log_scaled = scaler.transform(df_fee_log)\n","df_scaled = pd.DataFrame(data = df_log_scaled, columns = df_fee_log.columns)\n","df_scaled"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"WfhJam0f4WDf","executionInfo":{"status":"ok","timestamp":1691311440320,"user_tz":-540,"elapsed":456,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"84669dc1-7824-4c83-bed2-25102c84d02e"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      log_RoomService  log_FoodCourt  log_ShoppingMall   log_Spa  log_VRDeck\n","0            0.000000       0.000000          0.000000  0.000000    0.000000\n","1            1.263298       0.534491          1.041356  1.588825    1.025837\n","2            1.012825       1.990331          0.000000  2.219509    1.055014\n","3            0.000000       1.740982          1.913983  2.042779    1.426637\n","4            1.538608       1.033477          1.623168  1.596060    0.187902\n","...               ...            ...               ...       ...         ...\n","8688         0.000000       2.147346          0.000000  1.864921    1.166768\n","8689         0.000000       0.000000          0.000000  0.000000    0.000000\n","8690         0.000000       0.000000          2.437612  0.000000    0.000000\n","8691         0.000000       1.691999          0.000000  1.477591    2.190851\n","8692         1.302326       2.056196          0.000000  0.000000    0.673621\n","\n","[8693 rows x 5 columns]"],"text/html":["\n","\n","  <div id=\"df-90f51c75-1029-4cbd-94e9-b7ddb1db105f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>log_RoomService</th>\n","      <th>log_FoodCourt</th>\n","      <th>log_ShoppingMall</th>\n","      <th>log_Spa</th>\n","      <th>log_VRDeck</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.263298</td>\n","      <td>0.534491</td>\n","      <td>1.041356</td>\n","      <td>1.588825</td>\n","      <td>1.025837</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.012825</td>\n","      <td>1.990331</td>\n","      <td>0.000000</td>\n","      <td>2.219509</td>\n","      <td>1.055014</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000000</td>\n","      <td>1.740982</td>\n","      <td>1.913983</td>\n","      <td>2.042779</td>\n","      <td>1.426637</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.538608</td>\n","      <td>1.033477</td>\n","      <td>1.623168</td>\n","      <td>1.596060</td>\n","      <td>0.187902</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>0.000000</td>\n","      <td>2.147346</td>\n","      <td>0.000000</td>\n","      <td>1.864921</td>\n","      <td>1.166768</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.437612</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>0.000000</td>\n","      <td>1.691999</td>\n","      <td>0.000000</td>\n","      <td>1.477591</td>\n","      <td>2.190851</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>1.302326</td>\n","      <td>2.056196</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.673621</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90f51c75-1029-4cbd-94e9-b7ddb1db105f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-1ef859a6-f11b-48a3-8310-63c3e6d3f073\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1ef859a6-f11b-48a3-8310-63c3e6d3f073')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-1ef859a6-f11b-48a3-8310-63c3e6d3f073 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-90f51c75-1029-4cbd-94e9-b7ddb1db105f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-90f51c75-1029-4cbd-94e9-b7ddb1db105f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["#최종df만들기\n","df = pd.concat([df,df_scaled],axis = 1)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"hXFIuzgaBHvM","executionInfo":{"status":"ok","timestamp":1691311507281,"user_tz":-540,"elapsed":4,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"9e83f1ca-0314-469b-9b2c-acf7729ed07a"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  group  Earth  Europa  Mars CryoSleep  A  B  C  D  ...  \\\n","0        0001_01  False      0       1     0     False  0  1  0  0  ...   \n","1        0002_01  False      1       0     0     False  0  0  0  0  ...   \n","2        0003_01   True      0       1     0     False  1  0  0  0  ...   \n","3        0003_02   True      0       1     0     False  1  0  0  0  ...   \n","4        0004_01  False      1       0     0     False  0  0  0  0  ...   \n","...          ...    ...    ...     ...   ...       ... .. .. .. ..  ...   \n","8688     9276_01  False      0       1     0     False  1  0  0  0  ...   \n","8689     9278_01  False      1       0     0      True  0  0  0  0  ...   \n","8690     9279_01  False      1       0     0     False  0  0  0  0  ...   \n","8691     9280_01   True      0       1     0     False  0  0  0  0  ...   \n","8692     9280_02   True      0       1     0     False  0  0  0  0  ...   \n","\n","      FoodCourt  ShoppingMall     Spa  VRDeck  Transported  log_RoomService  \\\n","0           0.0           0.0     0.0     0.0        False         0.000000   \n","1           9.0          25.0   549.0    44.0         True         1.263298   \n","2        3576.0           0.0  6715.0    49.0        False         1.012825   \n","3        1283.0         371.0  3329.0   193.0        False         0.000000   \n","4          70.0         151.0   565.0     2.0         True         1.538608   \n","...         ...           ...     ...     ...          ...              ...   \n","8688     6819.0           0.0  1643.0    74.0        False         0.000000   \n","8689        0.0           0.0     0.0     0.0        False         0.000000   \n","8690        0.0        1872.0     1.0     0.0         True         0.000000   \n","8691     1049.0           0.0   353.0  3235.0        False         0.000000   \n","8692     4688.0           0.0     0.0    12.0         True         1.302326   \n","\n","      log_FoodCourt log_ShoppingMall   log_Spa  log_VRDeck  \n","0          0.000000         0.000000  0.000000    0.000000  \n","1          0.534491         1.041356  1.588825    1.025837  \n","2          1.990331         0.000000  2.219509    1.055014  \n","3          1.740982         1.913983  2.042779    1.426637  \n","4          1.033477         1.623168  1.596060    0.187902  \n","...             ...              ...       ...         ...  \n","8688       2.147346         0.000000  1.864921    1.166768  \n","8689       0.000000         0.000000  0.000000    0.000000  \n","8690       0.000000         2.437612  0.000000    0.000000  \n","8691       1.691999         0.000000  1.477591    2.190851  \n","8692       2.056196         0.000000  0.000000    0.673621  \n","\n","[8693 rows x 29 columns]"],"text/html":["\n","\n","  <div id=\"df-2ec6a79a-736d-4805-8da0-b44987e3651e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>group</th>\n","      <th>Earth</th>\n","      <th>Europa</th>\n","      <th>Mars</th>\n","      <th>CryoSleep</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>...</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Transported</th>\n","      <th>log_RoomService</th>\n","      <th>log_FoodCourt</th>\n","      <th>log_ShoppingMall</th>\n","      <th>log_Spa</th>\n","      <th>log_VRDeck</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>True</td>\n","      <td>1.263298</td>\n","      <td>0.534491</td>\n","      <td>1.041356</td>\n","      <td>1.588825</td>\n","      <td>1.025837</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>False</td>\n","      <td>1.012825</td>\n","      <td>1.990331</td>\n","      <td>0.000000</td>\n","      <td>2.219509</td>\n","      <td>1.055014</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.740982</td>\n","      <td>1.913983</td>\n","      <td>2.042779</td>\n","      <td>1.426637</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>True</td>\n","      <td>1.538608</td>\n","      <td>1.033477</td>\n","      <td>1.623168</td>\n","      <td>1.596060</td>\n","      <td>0.187902</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>9276_01</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>6819.0</td>\n","      <td>0.0</td>\n","      <td>1643.0</td>\n","      <td>74.0</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>2.147346</td>\n","      <td>0.000000</td>\n","      <td>1.864921</td>\n","      <td>1.166768</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>9278_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>9279_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>1872.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>True</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.437612</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>9280_01</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1049.0</td>\n","      <td>0.0</td>\n","      <td>353.0</td>\n","      <td>3235.0</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.691999</td>\n","      <td>0.000000</td>\n","      <td>1.477591</td>\n","      <td>2.190851</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>9280_02</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>4688.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.0</td>\n","      <td>True</td>\n","      <td>1.302326</td>\n","      <td>2.056196</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.673621</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 29 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ec6a79a-736d-4805-8da0-b44987e3651e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-c6b62d88-f76e-44d5-9f0e-116001c214a1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c6b62d88-f76e-44d5-9f0e-116001c214a1')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-c6b62d88-f76e-44d5-9f0e-116001c214a1 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2ec6a79a-736d-4805-8da0-b44987e3651e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2ec6a79a-736d-4805-8da0-b44987e3651e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yoFK1VECBYDp","executionInfo":{"status":"ok","timestamp":1691311538253,"user_tz":-540,"elapsed":2,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"d1d2c845-13e8-4c46-8834-ba8ef3de4c9f"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['PassengerId', 'group', 'Earth', 'Europa', 'Mars', 'CryoSleep', 'A',\n","       'B', 'C', 'D', 'E', 'F', 'G', 'T', '55 Cancri e', 'PSO J318.5-22',\n","       'TRAPPIST-1e', 'VIP', 'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa',\n","       'VRDeck', 'Transported', 'log_RoomService', 'log_FoodCourt',\n","       'log_ShoppingMall', 'log_Spa', 'log_VRDeck'],\n","      dtype='object')"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["df = df[['PassengerId', 'group', 'Earth', 'Europa', 'Mars', 'CryoSleep', 'A',\n","       'B', 'C', 'D', 'E', 'F', 'G', 'T', '55 Cancri e', 'PSO J318.5-22',\n","       'TRAPPIST-1e', 'VIP', 'log_RoomService', 'log_FoodCourt',\n","       'log_ShoppingMall', 'log_Spa', 'log_VRDeck',  'Transported']]\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"bonssc2TBfvy","executionInfo":{"status":"ok","timestamp":1691311600586,"user_tz":-540,"elapsed":13,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"5062f544-4a99-4ada-9d50-03a30b33e435"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  group  Earth  Europa  Mars CryoSleep  A  B  C  D  ...  \\\n","0        0001_01  False      0       1     0     False  0  1  0  0  ...   \n","1        0002_01  False      1       0     0     False  0  0  0  0  ...   \n","2        0003_01   True      0       1     0     False  1  0  0  0  ...   \n","3        0003_02   True      0       1     0     False  1  0  0  0  ...   \n","4        0004_01  False      1       0     0     False  0  0  0  0  ...   \n","...          ...    ...    ...     ...   ...       ... .. .. .. ..  ...   \n","8688     9276_01  False      0       1     0     False  1  0  0  0  ...   \n","8689     9278_01  False      1       0     0      True  0  0  0  0  ...   \n","8690     9279_01  False      1       0     0     False  0  0  0  0  ...   \n","8691     9280_01   True      0       1     0     False  0  0  0  0  ...   \n","8692     9280_02   True      0       1     0     False  0  0  0  0  ...   \n","\n","      55 Cancri e  PSO J318.5-22  TRAPPIST-1e    VIP  log_RoomService  \\\n","0               0              0            1  False         0.000000   \n","1               0              0            1  False         1.263298   \n","2               0              0            1   True         1.012825   \n","3               0              0            1  False         0.000000   \n","4               0              0            1  False         1.538608   \n","...           ...            ...          ...    ...              ...   \n","8688            1              0            0   True         0.000000   \n","8689            0              1            0  False         0.000000   \n","8690            0              0            1  False         0.000000   \n","8691            1              0            0  False         0.000000   \n","8692            0              0            1  False         1.302326   \n","\n","      log_FoodCourt  log_ShoppingMall   log_Spa  log_VRDeck  Transported  \n","0          0.000000          0.000000  0.000000    0.000000        False  \n","1          0.534491          1.041356  1.588825    1.025837         True  \n","2          1.990331          0.000000  2.219509    1.055014        False  \n","3          1.740982          1.913983  2.042779    1.426637        False  \n","4          1.033477          1.623168  1.596060    0.187902         True  \n","...             ...               ...       ...         ...          ...  \n","8688       2.147346          0.000000  1.864921    1.166768        False  \n","8689       0.000000          0.000000  0.000000    0.000000        False  \n","8690       0.000000          2.437612  0.000000    0.000000         True  \n","8691       1.691999          0.000000  1.477591    2.190851        False  \n","8692       2.056196          0.000000  0.000000    0.673621         True  \n","\n","[8693 rows x 24 columns]"],"text/html":["\n","\n","  <div id=\"df-9696d00b-43e7-433b-b761-3fc752e08132\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>group</th>\n","      <th>Earth</th>\n","      <th>Europa</th>\n","      <th>Mars</th>\n","      <th>CryoSleep</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>...</th>\n","      <th>55 Cancri e</th>\n","      <th>PSO J318.5-22</th>\n","      <th>TRAPPIST-1e</th>\n","      <th>VIP</th>\n","      <th>log_RoomService</th>\n","      <th>log_FoodCourt</th>\n","      <th>log_ShoppingMall</th>\n","      <th>log_Spa</th>\n","      <th>log_VRDeck</th>\n","      <th>Transported</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>1.263298</td>\n","      <td>0.534491</td>\n","      <td>1.041356</td>\n","      <td>1.588825</td>\n","      <td>1.025837</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>1.012825</td>\n","      <td>1.990331</td>\n","      <td>0.000000</td>\n","      <td>2.219509</td>\n","      <td>1.055014</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.740982</td>\n","      <td>1.913983</td>\n","      <td>2.042779</td>\n","      <td>1.426637</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>1.538608</td>\n","      <td>1.033477</td>\n","      <td>1.623168</td>\n","      <td>1.596060</td>\n","      <td>0.187902</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>9276_01</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>0.000000</td>\n","      <td>2.147346</td>\n","      <td>0.000000</td>\n","      <td>1.864921</td>\n","      <td>1.166768</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>9278_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>9279_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.437612</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>9280_01</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.691999</td>\n","      <td>0.000000</td>\n","      <td>1.477591</td>\n","      <td>2.190851</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>9280_02</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>1.302326</td>\n","      <td>2.056196</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.673621</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 24 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9696d00b-43e7-433b-b761-3fc752e08132')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-020a1a62-26ca-4251-872a-5e6fcc36e770\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-020a1a62-26ca-4251-872a-5e6fcc36e770')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-020a1a62-26ca-4251-872a-5e6fcc36e770 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9696d00b-43e7-433b-b761-3fc752e08132 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9696d00b-43e7-433b-b761-3fc752e08132');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["df.rename(columns = {'log_RoomService' : 'scaled_RommService', 'log_FoodCourt' : 'scaled_FoodCourt',\n","       'log_ShoppingMall' : 'scaled_ShoppingMall', 'log_Spa' : 'scaled_Spa', 'log_VRDeck' : 'scaled_VRDeck'}, inplace = True)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":559},"id":"kJJqbZhJBut6","executionInfo":{"status":"ok","timestamp":1691311754630,"user_tz":-540,"elapsed":6,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"751d6bc5-72fc-4781-c9aa-da2726edb437"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-50-105cbe45e565>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df.rename(columns = {'log_RoomService' : 'scaled_RommService', 'log_FoodCourt' : 'scaled_FoodCourt',\n"]},{"output_type":"execute_result","data":{"text/plain":["     PassengerId  group  Earth  Europa  Mars CryoSleep  A  B  C  D  ...  \\\n","0        0001_01  False      0       1     0     False  0  1  0  0  ...   \n","1        0002_01  False      1       0     0     False  0  0  0  0  ...   \n","2        0003_01   True      0       1     0     False  1  0  0  0  ...   \n","3        0003_02   True      0       1     0     False  1  0  0  0  ...   \n","4        0004_01  False      1       0     0     False  0  0  0  0  ...   \n","...          ...    ...    ...     ...   ...       ... .. .. .. ..  ...   \n","8688     9276_01  False      0       1     0     False  1  0  0  0  ...   \n","8689     9278_01  False      1       0     0      True  0  0  0  0  ...   \n","8690     9279_01  False      1       0     0     False  0  0  0  0  ...   \n","8691     9280_01   True      0       1     0     False  0  0  0  0  ...   \n","8692     9280_02   True      0       1     0     False  0  0  0  0  ...   \n","\n","      55 Cancri e  PSO J318.5-22  TRAPPIST-1e    VIP  scaled_RommService  \\\n","0               0              0            1  False            0.000000   \n","1               0              0            1  False            1.263298   \n","2               0              0            1   True            1.012825   \n","3               0              0            1  False            0.000000   \n","4               0              0            1  False            1.538608   \n","...           ...            ...          ...    ...                 ...   \n","8688            1              0            0   True            0.000000   \n","8689            0              1            0  False            0.000000   \n","8690            0              0            1  False            0.000000   \n","8691            1              0            0  False            0.000000   \n","8692            0              0            1  False            1.302326   \n","\n","      scaled_FoodCourt  scaled_ShoppingMall scaled_Spa  scaled_VRDeck  \\\n","0             0.000000             0.000000   0.000000       0.000000   \n","1             0.534491             1.041356   1.588825       1.025837   \n","2             1.990331             0.000000   2.219509       1.055014   \n","3             1.740982             1.913983   2.042779       1.426637   \n","4             1.033477             1.623168   1.596060       0.187902   \n","...                ...                  ...        ...            ...   \n","8688          2.147346             0.000000   1.864921       1.166768   \n","8689          0.000000             0.000000   0.000000       0.000000   \n","8690          0.000000             2.437612   0.000000       0.000000   \n","8691          1.691999             0.000000   1.477591       2.190851   \n","8692          2.056196             0.000000   0.000000       0.673621   \n","\n","      Transported  \n","0           False  \n","1            True  \n","2           False  \n","3           False  \n","4            True  \n","...           ...  \n","8688        False  \n","8689        False  \n","8690         True  \n","8691        False  \n","8692         True  \n","\n","[8693 rows x 24 columns]"],"text/html":["\n","\n","  <div id=\"df-0ea4f612-036c-4054-bffa-b8fce8b56763\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>group</th>\n","      <th>Earth</th>\n","      <th>Europa</th>\n","      <th>Mars</th>\n","      <th>CryoSleep</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>...</th>\n","      <th>55 Cancri e</th>\n","      <th>PSO J318.5-22</th>\n","      <th>TRAPPIST-1e</th>\n","      <th>VIP</th>\n","      <th>scaled_RommService</th>\n","      <th>scaled_FoodCourt</th>\n","      <th>scaled_ShoppingMall</th>\n","      <th>scaled_Spa</th>\n","      <th>scaled_VRDeck</th>\n","      <th>Transported</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>1.263298</td>\n","      <td>0.534491</td>\n","      <td>1.041356</td>\n","      <td>1.588825</td>\n","      <td>1.025837</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>1.012825</td>\n","      <td>1.990331</td>\n","      <td>0.000000</td>\n","      <td>2.219509</td>\n","      <td>1.055014</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.740982</td>\n","      <td>1.913983</td>\n","      <td>2.042779</td>\n","      <td>1.426637</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>1.538608</td>\n","      <td>1.033477</td>\n","      <td>1.623168</td>\n","      <td>1.596060</td>\n","      <td>0.187902</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>9276_01</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>0.000000</td>\n","      <td>2.147346</td>\n","      <td>0.000000</td>\n","      <td>1.864921</td>\n","      <td>1.166768</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>9278_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>9279_01</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.437612</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>9280_01</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0.000000</td>\n","      <td>1.691999</td>\n","      <td>0.000000</td>\n","      <td>1.477591</td>\n","      <td>2.190851</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>9280_02</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>1.302326</td>\n","      <td>2.056196</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.673621</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 24 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ea4f612-036c-4054-bffa-b8fce8b56763')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-f06c165a-d523-4c9a-8650-813de21129ef\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f06c165a-d523-4c9a-8650-813de21129ef')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-f06c165a-d523-4c9a-8650-813de21129ef button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0ea4f612-036c-4054-bffa-b8fce8b56763 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0ea4f612-036c-4054-bffa-b8fce8b56763');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["# True = 1, False = 0으로 변경해주자\n","df = df.replace({True : 1, False : 0})\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":704},"id":"dn_o9vOMCQXk","executionInfo":{"status":"ok","timestamp":1691311933436,"user_tz":-540,"elapsed":4,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"5defc28f-57f8-4ed0-a154-1c6cdf6812e4"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  group  Earth  Europa  Mars  CryoSleep  A  B  C  D  ...  \\\n","0        0001_01      0      0       1     0        0.0  0  1  0  0  ...   \n","1        0002_01      0      1       0     0        0.0  0  0  0  0  ...   \n","2        0003_01      1      0       1     0        0.0  1  0  0  0  ...   \n","3        0003_02      1      0       1     0        0.0  1  0  0  0  ...   \n","4        0004_01      0      1       0     0        0.0  0  0  0  0  ...   \n","...          ...    ...    ...     ...   ...        ... .. .. .. ..  ...   \n","8688     9276_01      0      0       1     0        0.0  1  0  0  0  ...   \n","8689     9278_01      0      1       0     0        1.0  0  0  0  0  ...   \n","8690     9279_01      0      1       0     0        0.0  0  0  0  0  ...   \n","8691     9280_01      1      0       1     0        0.0  0  0  0  0  ...   \n","8692     9280_02      1      0       1     0        0.0  0  0  0  0  ...   \n","\n","      55 Cancri e  PSO J318.5-22  TRAPPIST-1e  VIP  scaled_RommService  \\\n","0               0              0            1  0.0            0.000000   \n","1               0              0            1  0.0            1.263298   \n","2               0              0            1  1.0            1.012825   \n","3               0              0            1  0.0            0.000000   \n","4               0              0            1  0.0            1.538608   \n","...           ...            ...          ...  ...                 ...   \n","8688            1              0            0  1.0            0.000000   \n","8689            0              1            0  0.0            0.000000   \n","8690            0              0            1  0.0            0.000000   \n","8691            1              0            0  0.0            0.000000   \n","8692            0              0            1  0.0            1.302326   \n","\n","      scaled_FoodCourt  scaled_ShoppingMall  scaled_Spa  scaled_VRDeck  \\\n","0             0.000000             0.000000    0.000000       0.000000   \n","1             0.534491             1.041356    1.588825       1.025837   \n","2             1.990331             0.000000    2.219509       1.055014   \n","3             1.740982             1.913983    2.042779       1.426637   \n","4             1.033477             1.623168    1.596060       0.187902   \n","...                ...                  ...         ...            ...   \n","8688          2.147346             0.000000    1.864921       1.166768   \n","8689          0.000000             0.000000    0.000000       0.000000   \n","8690          0.000000             2.437612    0.000000       0.000000   \n","8691          1.691999             0.000000    1.477591       2.190851   \n","8692          2.056196             0.000000    0.000000       0.673621   \n","\n","      Transported  \n","0               0  \n","1               1  \n","2               0  \n","3               0  \n","4               1  \n","...           ...  \n","8688            0  \n","8689            0  \n","8690            1  \n","8691            0  \n","8692            1  \n","\n","[8693 rows x 24 columns]"],"text/html":["\n","\n","  <div id=\"df-a4cf0885-e9a7-4eef-ad95-24db40aed462\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>group</th>\n","      <th>Earth</th>\n","      <th>Europa</th>\n","      <th>Mars</th>\n","      <th>CryoSleep</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>...</th>\n","      <th>55 Cancri e</th>\n","      <th>PSO J318.5-22</th>\n","      <th>TRAPPIST-1e</th>\n","      <th>VIP</th>\n","      <th>scaled_RommService</th>\n","      <th>scaled_FoodCourt</th>\n","      <th>scaled_ShoppingMall</th>\n","      <th>scaled_Spa</th>\n","      <th>scaled_VRDeck</th>\n","      <th>Transported</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.263298</td>\n","      <td>0.534491</td>\n","      <td>1.041356</td>\n","      <td>1.588825</td>\n","      <td>1.025837</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>1.012825</td>\n","      <td>1.990331</td>\n","      <td>0.000000</td>\n","      <td>2.219509</td>\n","      <td>1.055014</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>1.740982</td>\n","      <td>1.913983</td>\n","      <td>2.042779</td>\n","      <td>1.426637</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.538608</td>\n","      <td>1.033477</td>\n","      <td>1.623168</td>\n","      <td>1.596060</td>\n","      <td>0.187902</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>9276_01</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>2.147346</td>\n","      <td>0.000000</td>\n","      <td>1.864921</td>\n","      <td>1.166768</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>9278_01</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>9279_01</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.437612</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>9280_01</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>1.691999</td>\n","      <td>0.000000</td>\n","      <td>1.477591</td>\n","      <td>2.190851</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>9280_02</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>1.302326</td>\n","      <td>2.056196</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.673621</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 24 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4cf0885-e9a7-4eef-ad95-24db40aed462')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-95f54c5b-7c8a-45d9-bdff-8511f16bf814\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-95f54c5b-7c8a-45d9-bdff-8511f16bf814')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-95f54c5b-7c8a-45d9-bdff-8511f16bf814 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a4cf0885-e9a7-4eef-ad95-24db40aed462 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a4cf0885-e9a7-4eef-ad95-24db40aed462');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":51},{"output_type":"stream","name":"stdout","text":["Warning: Total number of columns (24) exceeds max_columns (20) limiting to first (20) columns.\n"]}]},{"cell_type":"code","source":["#csv파일로 저장하기\n","df.to_csv(\"spaceship_tt_scaled\")"],"metadata":{"id":"p_RYztoLDAJe","executionInfo":{"status":"ok","timestamp":1691312727149,"user_tz":-540,"elapsed":469,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"N9i8XofzDmRx"},"execution_count":null,"outputs":[]}]}