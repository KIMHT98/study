{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":1436,"status":"ok","timestamp":1698040262387,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"fKVLdOY_-RkI"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns"]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":475,"status":"ok","timestamp":1698040262860,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"DaQ9PsyK-s7s"},"outputs":[],"source":["titanic = sns.load_dataset('titanic')"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1698040262861,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"pzv2jUYS_HVn","outputId":"4dbfe6e2-6cfe-4bc6-b638-10cae6dfd4f7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         survived      pclass         age       sibsp       parch        fare\n","count  891.000000  891.000000  714.000000  891.000000  891.000000  891.000000\n","mean     0.383838    2.308642   29.699118    0.523008    0.381594   32.204208\n","std      0.486592    0.836071   14.526497    1.102743    0.806057   49.693429\n","min      0.000000    1.000000    0.420000    0.000000    0.000000    0.000000\n","25%      0.000000    2.000000   20.125000    0.000000    0.000000    7.910400\n","50%      0.000000    3.000000   28.000000    0.000000    0.000000   14.454200\n","75%      1.000000    3.000000   38.000000    1.000000    0.000000   31.000000\n","max      1.000000    3.000000   80.000000    8.000000    6.000000  512.329200"],"text/html":["\n","  <div id=\"df-15bdc16b-0be2-4f11-b903-276da68e9345\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-15bdc16b-0be2-4f11-b903-276da68e9345')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-15bdc16b-0be2-4f11-b903-276da68e9345 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-15bdc16b-0be2-4f11-b903-276da68e9345');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5c6841b3-a612-4e16-affa-2d93ac8de358\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c6841b3-a612-4e16-affa-2d93ac8de358')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5c6841b3-a612-4e16-affa-2d93ac8de358 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}],"source":["titanic.describe()"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":12,"status":"ok","timestamp":1698040262861,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"uk9jK4KjIgEy"},"outputs":[],"source":["titanic1 = titanic.copy() #원본데이터의 보존을 위해 복사"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1698040262861,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"K9gpGrlT_RDu","outputId":"b9bd8e2d-34f6-49c4-dd68-ee95255a4921"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='pclass'>"]},"metadata":{},"execution_count":5},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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0tLSopycHN1zzz3Wo6y2OJ1ORUdHe41FR0fL6XRaxy+PtVfzl/Lz8+VwOKwtPj7ep2sAAADBwac7QL1791Z9fb0k6ZZbblFVVZWGDRumuro6ffPNNz41kp2draqqKu3atcun+dciLy/P666S2+0O+hAUGhqq4uJif7cBBJRz585Z31TduHEjawKBv2DSvxM+BaBx48Zp27ZtGjZsmGbOnKmFCxdq+/bt2rZtmyZOnHjV55s/f742bdqknTt3ql+/flesjYmJUW1trddYbW2tYmJirOOXx779OK62tlZJSUltntNut8tut19134HMZrMF9XNcoKuFhoby7whgMJ8egf3mN7+x1tL84he/UG5urmpra/W3f/u3WrlyZYfP4/F4NH/+fG3cuFHbt29XQkLCd85JSUlRaWmp19i2bduslzEmJCQoJibGq8btdmvv3r1WDQAAMJtPd4C+vUg5JCRETz75pE+/PDs7W2vXrtVHH32k8PBwa42Ow+Gw/sssKytLt9xyi/Lz8yVJCxcu1H333adXX31VU6dO1bp167R//35r7ZHNZlNOTo6ef/55DRw40PoafFxcnDIyMnzqEwAAdC8dDkBX882ojn51vKCgQJI0fvx4r/FVq1Zpzpw5kqTq6mqvly3efffdWrt2rZ5++mk99dRTGjhwoIqKirwWTj/xxBNqbGzUI488orq6Oo0dO1YlJSVGPdsEAADt6/B7gEJCQmT7jndmeDwe2Ww2NTc3d0pz/tId3gMEoLVvvx8r2N93AqC1LnkP0I4dO665MQAAgEDQ4QB03333dWUfAAAA141P3wJbtWqVNmzY0Gp8w4YNWr169TU3BQAA0JV8CkD5+fnq06dPq/GoqCi98MIL19wUAABAV/IpAFVXV7f5zp7+/fururr6mpsCAADoSj4FoKioKH366aetxv/zP/9TN9988zU3BQAA0JV8CkCZmZn6x3/8R+3YsUPNzc1qbm7W9u3btXDhwjb/2joAAEAg8elN0L/61a90/PhxTZw4UT17XjpFc3OzZs+ezRogAAAQ8HwKQL169dL777+v559/Xp988onCwsKUmJio/v37d3Z/AAAAnc6nACRJK1eu1Ouvv67Dhw9LkgYOHKicnBzNmzev05oDAADoCj4FoMWLF+u1117TggULrL+wXlFRoccee0zV1dV67rnnOrVJAACAzuRT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\n"},"metadata":{}}],"source":["sns.boxplot(data = titanic, y = 'pclass')"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":621,"status":"ok","timestamp":1698040263474,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"JMvFhGthBNXa","outputId":"5e083b2d-9761-4b24-c299-516cba3e57ff"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='age'>"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}],"source":["sns.boxplot(data = titanic, y = 'age')"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1698040263475,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"kqcid28gBQtn","outputId":"183f9c11-a7fa-457f-8cfd-36dd932eef72"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='sibsp'>"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["sns.boxplot(data = titanic, y = 'sibsp')"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":528,"status":"ok","timestamp":1698040263980,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"Qfa59rvrBUl_","outputId":"bfcbf65f-d5fc-4af7-c97e-522e8d026ba8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='parch'>"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["sns.boxplot(data = titanic, y = 'parch')"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":36,"status":"ok","timestamp":1698040263980,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"qad8l8AvBWUc","outputId":"1404965d-944f-49c1-9827-aaa1e92077cd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='fare'>"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["sns.boxplot(data = titanic, y = 'fare')"]},{"cell_type":"markdown","metadata":{"id":"8cSQwi0LEtwh"},"source":["1. age컬럼에서 이상치들을 NaN값으로 변경하기"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":34,"status":"ok","timestamp":1698040263981,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"D3RPRR82BXnD"},"outputs":[],"source":["age25 = titanic1['age'].quantile(0.25)\n","age75 = titanic1['age'].quantile(0.75)\n","age_iqr = age75 - age25"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":34,"status":"ok","timestamp":1698040263981,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"62_h_2yjDfqX"},"outputs":[],"source":["age_low = age25-1.5*age_iqr\n","age_high = age75 + 1.5*age_iqr"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":34,"status":"ok","timestamp":1698040263981,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"W_OksYtWDs4a"},"outputs":[],"source":["titanic1['age'] = np.where((titanic1['age']<age_low)|(titanic1['age']>age_high),np.nan,titanic1['age'])"]},{"cell_type":"markdown","metadata":{"id":"SPKEm8guEzzX"},"source":["2. sibsp컬럼에서 이상치값을 NaN값으로 변경하기"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":33,"status":"ok","timestamp":1698040263981,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"x3L2lB24EfWz"},"outputs":[],"source":["sibsp25 = titanic1['sibsp'].quantile(0.25)\n","sibsp75 = titanic1['sibsp'].quantile(0.75)\n","sibsp_iqr = sibsp75 - sibsp25"]},{"cell_type":"code","execution_count":14,"metadata":{"executionInfo":{"elapsed":33,"status":"ok","timestamp":1698040263981,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"U6V0V73gE6zJ"},"outputs":[],"source":["sibsp_low = sibsp25-1.5*sibsp_iqr\n","sibsp_high = sibsp75 + 1.5*sibsp_iqr"]},{"cell_type":"code","execution_count":15,"metadata":{"executionInfo":{"elapsed":33,"status":"ok","timestamp":1698040263982,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"8qZA6NGJE6-H"},"outputs":[],"source":["titanic1['sibsp'] = np.where((titanic1['sibsp']<sibsp_low)|(titanic1['sibsp']>sibsp_high),np.nan,titanic1['sibsp'])"]},{"cell_type":"markdown","metadata":{"id":"NpCe1sZvFOGm"},"source":["3. parch컬럼의 이상치값을 NaN값으로 변경하기"]},{"cell_type":"code","execution_count":16,"metadata":{"executionInfo":{"elapsed":33,"status":"ok","timestamp":1698040263982,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"DcFXcua9FW9o"},"outputs":[],"source":["parch25 = titanic1['sibsp'].quantile(0.25)\n","parch75 = titanic1['sibsp'].quantile(0.75)\n","parch_iqr = parch75 - sibsp25"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":33,"status":"ok","timestamp":1698040263982,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"lpDVTRlzGKb-"},"outputs":[],"source":["parch_low = parch25-1.5*parch_iqr\n","parch_high = parch75 + 1.5*parch_iqr"]},{"cell_type":"code","execution_count":18,"metadata":{"executionInfo":{"elapsed":33,"status":"ok","timestamp":1698040263983,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"WuVhhiKBGRpB"},"outputs":[],"source":["titanic1['parch'] = np.where((titanic1['parch']<parch_low)|(titanic1['parch']>parch_high),np.nan,titanic1['parch'])"]},{"cell_type":"markdown","metadata":{"id":"etR4tLjdGdpy"},"source":["4. fara컬럼의 이상치값을 NaN값으로 변경하기"]},{"cell_type":"code","execution_count":19,"metadata":{"executionInfo":{"elapsed":33,"status":"ok","timestamp":1698040263983,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"lnAHA-uNGbnm"},"outputs":[],"source":["fare25 = titanic1['fare'].quantile(0.25)\n","fare75 = titanic1['fare'].quantile(0.75)\n","fare_iqr = fare75 - fare25"]},{"cell_type":"code","execution_count":20,"metadata":{"executionInfo":{"elapsed":34,"status":"ok","timestamp":1698040263984,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"l45qeeFrGrmO"},"outputs":[],"source":["fare_low = fare25-1.5*fare_iqr\n","fare_high = fare75 + 1.5*fare_iqr"]},{"cell_type":"code","execution_count":21,"metadata":{"executionInfo":{"elapsed":33,"status":"ok","timestamp":1698040263984,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"BgNDGDMgGxQI"},"outputs":[],"source":["titanic1['fare'] = np.where((titanic1['fare']<fare_low)|(titanic1['fare']>fare_high),np.nan,titanic1['fare'])"]},{"cell_type":"code","execution_count":22,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":34,"status":"ok","timestamp":1698040263985,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"N893_f6UG5i9","outputId":"f78951bb-53e8-4669-8701-a6135e3221ff"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 15 columns):\n"," #   Column       Non-Null Count  Dtype   \n","---  ------       --------------  -----   \n"," 0   survived     891 non-null    int64   \n"," 1   pclass       891 non-null    int64   \n"," 2   sex          891 non-null    object  \n"," 3   age          714 non-null    float64 \n"," 4   sibsp        891 non-null    int64   \n"," 5   parch        891 non-null    int64   \n"," 6   fare         891 non-null    float64 \n"," 7   embarked     889 non-null    object  \n"," 8   class        891 non-null    category\n"," 9   who          891 non-null    object  \n"," 10  adult_male   891 non-null    bool    \n"," 11  deck         203 non-null    category\n"," 12  embark_town  889 non-null    object  \n"," 13  alive        891 non-null    object  \n"," 14  alone        891 non-null    bool    \n","dtypes: bool(2), category(2), float64(2), int64(4), object(5)\n","memory usage: 80.7+ KB\n"]}],"source":["titanic.info()"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":33,"status":"ok","timestamp":1698040263985,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"BCknPSqdIpQm","outputId":"738b0dc2-5673-4a79-fbd5-e830bb556eed"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 15 columns):\n"," #   Column       Non-Null Count  Dtype   \n","---  ------       --------------  -----   \n"," 0   survived     891 non-null    int64   \n"," 1   pclass       891 non-null    int64   \n"," 2   sex          891 non-null    object  \n"," 3   age          703 non-null    float64 \n"," 4   sibsp        845 non-null    float64 \n"," 5   parch        876 non-null    float64 \n"," 6   fare         775 non-null    float64 \n"," 7   embarked     889 non-null    object  \n"," 8   class        891 non-null    category\n"," 9   who          891 non-null    object  \n"," 10  adult_male   891 non-null    bool    \n"," 11  deck         203 non-null    category\n"," 12  embark_town  889 non-null    object  \n"," 13  alive        891 non-null    object  \n"," 14  alone        891 non-null    bool    \n","dtypes: bool(2), category(2), float64(4), int64(2), object(5)\n","memory usage: 80.7+ KB\n"]}],"source":["titanic1.info() #원본데이터에 비해 결측값이 많이 생성된 것을 알 수 있다."]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":31,"status":"ok","timestamp":1698040263985,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"ct6CdNQqG8Z0","outputId":"7098cbaf-af44-4ded-fff5-39b57cedebf2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["survived         0\n","pclass           0\n","sex              0\n","age            177\n","sibsp            0\n","parch            0\n","fare             0\n","embarked         2\n","class            0\n","who              0\n","adult_male       0\n","deck           688\n","embark_town      2\n","alive            0\n","alone            0\n","dtype: int64"]},"metadata":{},"execution_count":24}],"source":["titanic.isna().sum()"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":30,"status":"ok","timestamp":1698040263985,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"braQideQJbNw","outputId":"50ecac33-0d9b-4cce-d316-25276421d890"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["survived         0\n","pclass           0\n","sex              0\n","age            188\n","sibsp           46\n","parch           15\n","fare           116\n","embarked         2\n","class            0\n","who              0\n","adult_male       0\n","deck           688\n","embark_town      2\n","alive            0\n","alone            0\n","dtype: int64"]},"metadata":{},"execution_count":25}],"source":["titanic1.isna().sum()"]},{"cell_type":"code","execution_count":26,"metadata":{"executionInfo":{"elapsed":29,"status":"ok","timestamp":1698040263986,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"dzWYMMPpG_rz"},"outputs":[],"source":["titanic2 = titanic1.dropna(subset = ['age', 'sibsp', 'parch', 'fare'])#수치형 데이터들의 결측값만 삭제"]},{"cell_type":"code","source":["titanic2.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LfwVOl1CGHem","executionInfo":{"status":"ok","timestamp":1698040418074,"user_tz":-540,"elapsed":6,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"41916d7a-6987-4142-ea5b-282b9c11a026"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 557 entries, 0 to 890\n","Data columns (total 15 columns):\n"," #   Column       Non-Null Count  Dtype   \n","---  ------       --------------  -----   \n"," 0   survived     557 non-null    int64   \n"," 1   pclass       557 non-null    int64   \n"," 2   sex          557 non-null    object  \n"," 3   age          557 non-null    float64 \n"," 4   sibsp        557 non-null    float64 \n"," 5   parch        557 non-null    float64 \n"," 6   fare         557 non-null    float64 \n"," 7   embarked     557 non-null    object  \n"," 8   class        557 non-null    category\n"," 9   who          557 non-null    object  \n"," 10  adult_male   557 non-null    bool    \n"," 11  deck         93 non-null     category\n"," 12  embark_town  557 non-null    object  \n"," 13  alive        557 non-null    object  \n"," 14  alone        557 non-null    bool    \n","dtypes: bool(2), category(2), float64(4), int64(2), object(5)\n","memory usage: 54.9+ KB\n"]}]},{"cell_type":"code","source":["sns.boxplot(data = titanic2, y = 'age')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"aWbS65pBGMBQ","executionInfo":{"status":"ok","timestamp":1698040476885,"user_tz":-540,"elapsed":551,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"346a43fa-59e3-4e33-ca8f-b07a6c93c435"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='age'>"]},"metadata":{},"execution_count":35},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.boxplot(data = titanic2, y = 'fare')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"o7fEMcwuGdnG","executionInfo":{"status":"ok","timestamp":1698040516650,"user_tz":-540,"elapsed":552,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"9b5fcccd-7686-414b-983a-7632318ec87a"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='fare'>"]},"metadata":{},"execution_count":36},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","execution_count":27,"metadata":{"executionInfo":{"elapsed":29,"status":"ok","timestamp":1698040263986,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"Fd-fr8o8KBNg"},"outputs":[],"source":["titanic3 = titanic1.dropna() #모든 결측값을 삭제"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":29,"status":"ok","timestamp":1698040263986,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"9KdakyrSHH9O","outputId":"93a6dd68-1838-4ccf-a97b-7a2fdf4157db"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         survived      pclass         age       sibsp       parch        fare\n","count  891.000000  891.000000  714.000000  891.000000  891.000000  891.000000\n","mean     0.383838    2.308642   29.699118    0.523008    0.381594   32.204208\n","std      0.486592    0.836071   14.526497    1.102743    0.806057   49.693429\n","min      0.000000    1.000000    0.420000    0.000000    0.000000    0.000000\n","25%      0.000000    2.000000   20.125000    0.000000    0.000000    7.910400\n","50%      0.000000    3.000000   28.000000    0.000000    0.000000   14.454200\n","75%      1.000000    3.000000   38.000000    1.000000    0.000000   31.000000\n","max      1.000000    3.000000   80.000000    8.000000    6.000000  512.329200"],"text/html":["\n","  <div id=\"df-b8febebc-27ca-496f-8d96-0ae59991f0a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>714.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.699118</td>\n","      <td>0.523008</td>\n","      <td>0.381594</td>\n","      <td>32.204208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>14.526497</td>\n","      <td>1.102743</td>\n","      <td>0.806057</td>\n","      <td>49.693429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.125000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.910400</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8febebc-27ca-496f-8d96-0ae59991f0a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b8febebc-27ca-496f-8d96-0ae59991f0a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b8febebc-27ca-496f-8d96-0ae59991f0a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f4e9c06b-63ea-41aa-a5e9-e1860e996bad\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f4e9c06b-63ea-41aa-a5e9-e1860e996bad')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f4e9c06b-63ea-41aa-a5e9-e1860e996bad button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}],"source":["titanic.describe() #원본데이터의 요약통계량 확인"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":28,"status":"ok","timestamp":1698040263986,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"NRBin7czJtny","outputId":"91c71336-1dab-44f5-fe65-8880ac17cf53"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         survived      pclass         age       sibsp       parch        fare\n","count  891.000000  891.000000  703.000000  845.000000  876.000000  775.000000\n","mean     0.383838    2.308642   29.072077    0.313609    0.317352   17.822091\n","std      0.486592    0.836071   13.728478    0.530909    0.632253   13.578085\n","min      0.000000    1.000000    0.420000    0.000000    0.000000    0.000000\n","25%      0.000000    2.000000   20.000000    0.000000    0.000000    7.895800\n","50%      0.000000    3.000000   28.000000    0.000000    0.000000   13.000000\n","75%      1.000000    3.000000   38.000000    1.000000    0.000000   26.000000\n","max      1.000000    3.000000   64.000000    2.000000    2.000000   65.000000"],"text/html":["\n","  <div id=\"df-0ee88463-b284-43a4-90e6-2edcee787a93\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891.000000</td>\n","      <td>891.000000</td>\n","      <td>703.000000</td>\n","      <td>845.000000</td>\n","      <td>876.000000</td>\n","      <td>775.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.383838</td>\n","      <td>2.308642</td>\n","      <td>29.072077</td>\n","      <td>0.313609</td>\n","      <td>0.317352</td>\n","      <td>17.822091</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.486592</td>\n","      <td>0.836071</td>\n","      <td>13.728478</td>\n","      <td>0.530909</td>\n","      <td>0.632253</td>\n","      <td>13.578085</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.895800</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>13.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>26.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>64.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>65.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ee88463-b284-43a4-90e6-2edcee787a93')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0ee88463-b284-43a4-90e6-2edcee787a93 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0ee88463-b284-43a4-90e6-2edcee787a93');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e33a3b16-a66f-407c-b5b7-c82b378ffaee\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e33a3b16-a66f-407c-b5b7-c82b378ffaee')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e33a3b16-a66f-407c-b5b7-c82b378ffaee button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":29}],"source":["titanic1.describe() #이상치값들을 NaN으로 변경했을 때의 요약통계량 변화 확인"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1698040263986,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"8hgtbPxoHMOl","outputId":"765a2fa2-579f-4742-eb84-87227da894ec"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         survived      pclass         age       sibsp       parch        fare\n","count  557.000000  557.000000  557.000000  557.000000  557.000000  557.000000\n","mean     0.371634    2.402154   29.171903    0.294434    0.249551   17.567175\n","std      0.483676    0.739334   12.881475    0.518910    0.546921   13.454891\n","min      0.000000    1.000000    0.420000    0.000000    0.000000    0.000000\n","25%      0.000000    2.000000   21.000000    0.000000    0.000000    7.895800\n","50%      0.000000    3.000000   28.000000    0.000000    0.000000   12.875000\n","75%      1.000000    3.000000   36.000000    1.000000    0.000000   26.000000\n","max      1.000000    3.000000   64.000000    2.000000    2.000000   65.000000"],"text/html":["\n","  <div id=\"df-285f3229-1bb5-464a-8cdd-e9f017a507e7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>557.000000</td>\n","      <td>557.000000</td>\n","      <td>557.000000</td>\n","      <td>557.000000</td>\n","      <td>557.000000</td>\n","      <td>557.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.371634</td>\n","      <td>2.402154</td>\n","      <td>29.171903</td>\n","      <td>0.294434</td>\n","      <td>0.249551</td>\n","      <td>17.567175</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.483676</td>\n","      <td>0.739334</td>\n","      <td>12.881475</td>\n","      <td>0.518910</td>\n","      <td>0.546921</td>\n","      <td>13.454891</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.895800</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>12.875000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>36.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>26.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>64.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>65.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-285f3229-1bb5-464a-8cdd-e9f017a507e7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-285f3229-1bb5-464a-8cdd-e9f017a507e7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-285f3229-1bb5-464a-8cdd-e9f017a507e7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf32238c-fb5e-4dd7-bb93-f66d66c7af3e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf32238c-fb5e-4dd7-bb93-f66d66c7af3e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf32238c-fb5e-4dd7-bb93-f66d66c7af3e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":30}],"source":["titanic2.describe() #수치데이터의 이상치들을 삭제했을때의 요약통계량"]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1698040263987,"user":{"displayName":"김현태","userId":"03086644637186436559"},"user_tz":-540},"id":"qD1NxsxKHnws","outputId":"ef8af1cc-6007-460b-a01b-77e3330ebacf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        survived     pclass        age      sibsp      parch       fare\n","count  93.000000  93.000000  93.000000  93.000000  93.000000  93.000000\n","mean    0.623656   1.376344  35.026882   0.301075   0.268817  32.543685\n","std     0.487094   0.674279  14.783099   0.527194   0.534460  16.995925\n","min     0.000000   1.000000   1.000000   0.000000   0.000000   0.000000\n","25%     0.000000   1.000000  26.000000   0.000000   0.000000  25.587500\n","50%     1.000000   1.000000  36.000000   0.000000   0.000000  30.000000\n","75%     1.000000   2.000000  47.000000   1.000000   0.000000  51.862500\n","max     1.000000   3.000000  62.000000   2.000000   2.000000  63.358300"],"text/html":["\n","  <div id=\"df-97200b88-5ef7-46f3-8bac-af64b1ce7473\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>pclass</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>93.000000</td>\n","      <td>93.000000</td>\n","      <td>93.000000</td>\n","      <td>93.000000</td>\n","      <td>93.000000</td>\n","      <td>93.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.623656</td>\n","      <td>1.376344</td>\n","      <td>35.026882</td>\n","      <td>0.301075</td>\n","      <td>0.268817</td>\n","      <td>32.543685</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.487094</td>\n","      <td>0.674279</td>\n","      <td>14.783099</td>\n","      <td>0.527194</td>\n","      <td>0.534460</td>\n","      <td>16.995925</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>26.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>25.587500</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>36.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>30.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>47.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>51.862500</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>62.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>63.358300</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97200b88-5ef7-46f3-8bac-af64b1ce7473')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-97200b88-5ef7-46f3-8bac-af64b1ce7473 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-97200b88-5ef7-46f3-8bac-af64b1ce7473');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e1775298-8639-4ccf-a5bf-d08c67dbf3fc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e1775298-8639-4ccf-a5bf-d08c67dbf3fc')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e1775298-8639-4ccf-a5bf-d08c67dbf3fc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":31}],"source":["titanic3.describe() #모든 이상치와 결측치를 삭제했을 때의 요약통계량"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xRHqnAh2KUoX","executionInfo":{"status":"ok","timestamp":1698040296884,"user_tz":-540,"elapsed":266,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"718c583f-7632-497d-82f6-73508a63951d"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 93 entries, 3 to 889\n","Data columns (total 15 columns):\n"," #   Column       Non-Null Count  Dtype   \n","---  ------       --------------  -----   \n"," 0   survived     93 non-null     int64   \n"," 1   pclass       93 non-null     int64   \n"," 2   sex          93 non-null     object  \n"," 3   age          93 non-null     float64 \n"," 4   sibsp        93 non-null     float64 \n"," 5   parch        93 non-null     float64 \n"," 6   fare         93 non-null     float64 \n"," 7   embarked     93 non-null     object  \n"," 8   class        93 non-null     category\n"," 9   who          93 non-null     object  \n"," 10  adult_male   93 non-null     bool    \n"," 11  deck         93 non-null     category\n"," 12  embark_town  93 non-null     object  \n"," 13  alive        93 non-null     object  \n"," 14  alone        93 non-null     bool    \n","dtypes: bool(2), category(2), float64(4), int64(2), object(5)\n","memory usage: 9.6+ KB\n"]}],"source":["titanic3.info()"]},{"cell_type":"code","source":[],"metadata":{"id":"qYMiyPQzFl7T"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[],"authorship_tag":"ABX9TyPABBVYb+RdZbyM5FJZ+hEv"},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}