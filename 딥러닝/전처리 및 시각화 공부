{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM94DBTxjRFmkOpsRhFAsGp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## numpy 연습문제\n","1. 3*2행렬 구조로 Array형태 데이터 A,B를 생성하고, +연산한 Array를 구하라.\n","2. 1~100 사이의 정수 중 랜덤하게 한 개의 숫자 추출\n","3. 1~100 사이의 정수 중 랜덤하게 두 개의 숫자 추출\n"],"metadata":{"id":"lGUwzy9z0xUj"}},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1O_oqO0x0rwe","executionInfo":{"status":"ok","timestamp":1692080136638,"user_tz":-540,"elapsed":308,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"26543177-6548-4af4-a4ef-37edbb817e16"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[2 3]\n"," [4 5]\n"," [6 7]]\n","[[1 1]\n"," [3 3]\n"," [5 5]]\n","[[ 3  4]\n"," [ 7  8]\n"," [11 12]]\n"]}],"source":["#1번\n","import numpy as np\n","A = np.array([[2,3],[4,5],[6,7]])\n","B = np.array([[1,1],[3,3],[5,5]])\n","print(A)\n","print(B)\n","print(A+B)"]},{"cell_type":"code","source":["#2번\n","a= np.random.randint(1,101)\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bvgwDO1Y1O7s","executionInfo":{"status":"ok","timestamp":1692080261641,"user_tz":-540,"elapsed":300,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"6b3a70bf-7b85-4f73-ba99-fa0d2b260d43"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["42"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#3번\n","a = np.random.randint(1,101,size = 2)\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yzNDKGLZ1m5g","executionInfo":{"status":"ok","timestamp":1692080343925,"user_tz":-540,"elapsed":3,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"48f0a3d5-bfe2-4221-ac86-06a8a99f41ea"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([65, 65])"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["## Pandas연습문제\n","1. 딕셔너리 방식으로 데이터프레임을 생성하라.\n","2. 1번의 결과물에서 index번호를 a,b,c,d,e,f형식으로 변경해라."],"metadata":{"id":"88X9_gvj2snF"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"sIMOCjHQ24rt","executionInfo":{"status":"ok","timestamp":1692080513806,"user_tz":-540,"elapsed":2,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["#1번\n","df = pd.DataFrame(data = {'학번' : [201901, 201902, 202001, 201504, 201402, 201809],\n","                   '이름' : ['원빈', '김우빈','장나라','서강준','김사랑','최준'],\n","                   '성정' : [70, 90, 80, 100, 75, 79],\n","                   '학점' : ['C','A','B','A+','C+','C+']},\n","                  columns = ['학번','이름','성정','학점'])\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"ngjJ4bMo2FD4","executionInfo":{"status":"ok","timestamp":1692080810808,"user_tz":-540,"elapsed":5,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"599ad54a-8b08-4e38-8f10-0cc8984f504d"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       학번   이름   성정  학점\n","0  201901   원빈   70   C\n","1  201902  김우빈   90   A\n","2  202001  장나라   80   B\n","3  201504  서강준  100  A+\n","4  201402  김사랑   75  C+\n","5  201809   최준   79  C+"],"text/html":["\n","\n","  <div id=\"df-bddbb38a-b2f0-49af-94f9-f34e111a1ca2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>학번</th>\n","      <th>이름</th>\n","      <th>성정</th>\n","      <th>학점</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>201901</td>\n","      <td>원빈</td>\n","      <td>70</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>201902</td>\n","      <td>김우빈</td>\n","      <td>90</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>202001</td>\n","      <td>장나라</td>\n","      <td>80</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>201504</td>\n","      <td>서강준</td>\n","      <td>100</td>\n","      <td>A+</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>201402</td>\n","      <td>김사랑</td>\n","      <td>75</td>\n","      <td>C+</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>201809</td>\n","      <td>최준</td>\n","      <td>79</td>\n","      <td>C+</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bddbb38a-b2f0-49af-94f9-f34e111a1ca2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-772f6df1-513c-4c99-8999-7d9615badfc0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-772f6df1-513c-4c99-8999-7d9615badfc0')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-772f6df1-513c-4c99-8999-7d9615badfc0 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bddbb38a-b2f0-49af-94f9-f34e111a1ca2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bddbb38a-b2f0-49af-94f9-f34e111a1ca2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#2번\n","df.index = ['a','b','c','d','e','f']\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"VIwE2Nz73rFm","executionInfo":{"status":"ok","timestamp":1692080863582,"user_tz":-540,"elapsed":271,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"5f1e6c57-7065-412e-80a9-82f660f4643f"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       학번   이름   성정  학점\n","a  201901   원빈   70   C\n","b  201902  김우빈   90   A\n","c  202001  장나라   80   B\n","d  201504  서강준  100  A+\n","e  201402  김사랑   75  C+\n","f  201809   최준   79  C+"],"text/html":["\n","\n","  <div id=\"df-7bf23a4f-13f4-480b-9919-5a954cf9407d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>학번</th>\n","      <th>이름</th>\n","      <th>성정</th>\n","      <th>학점</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>a</th>\n","      <td>201901</td>\n","      <td>원빈</td>\n","      <td>70</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>b</th>\n","      <td>201902</td>\n","      <td>김우빈</td>\n","      <td>90</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>c</th>\n","      <td>202001</td>\n","      <td>장나라</td>\n","      <td>80</td>\n","      <td>B</td>\n","    </tr>\n","    <tr>\n","      <th>d</th>\n","      <td>201504</td>\n","      <td>서강준</td>\n","      <td>100</td>\n","      <td>A+</td>\n","    </tr>\n","    <tr>\n","      <th>e</th>\n","      <td>201402</td>\n","      <td>김사랑</td>\n","      <td>75</td>\n","      <td>C+</td>\n","    </tr>\n","    <tr>\n","      <th>f</th>\n","      <td>201809</td>\n","      <td>최준</td>\n","      <td>79</td>\n","      <td>C+</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7bf23a4f-13f4-480b-9919-5a954cf9407d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-4adb81ff-c709-41e3-87c2-740b62f4ffea\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4adb81ff-c709-41e3-87c2-740b62f4ffea')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-4adb81ff-c709-41e3-87c2-740b62f4ffea button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7bf23a4f-13f4-480b-9919-5a954cf9407d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7bf23a4f-13f4-480b-9919-5a954cf9407d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["## 데이터프레임 조작 연습문제\n","1. 데이터프레임을 생성해라.\n","2. 1번의 데이터프레임에서 '합계'와 '평균점수' 컬럼을 추가하라.\n","3. 2번의 데이터프레임에서 '김영희','김희원','강희진'의 행만 추출해라.\n","4. 3번의 데이터프레임에서 '합계','평균점수'컬럼만 추출해라."],"metadata":{"id":"FL08109v6KGl"}},{"cell_type":"code","source":["#1번\n","df = pd.DataFrame(data = {'국어':[100,90,85,85,90,65,70,85],\n","                          '영어':[100,90,100,70,70,80,100,60],\n","                          '수학':[90,90,75,95,90,75,90,75]},\n","                  columns = ['국어','영어','수학'],\n","                  index = ['홍길동','김영희','김희원','강희진','최소희','이사랑','박아라','안경진'])\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"siBLE0l13zZO","executionInfo":{"status":"ok","timestamp":1692081605145,"user_tz":-540,"elapsed":5,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"c2d63c70-9466-49d7-bc85-680b3686e9ae"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      국어   영어  수학\n","홍길동  100  100  90\n","김영희   90   90  90\n","김희원   85  100  75\n","강희진   85   70  95\n","최소희   90   70  90\n","이사랑   65   80  75\n","박아라   70  100  90\n","안경진   85   60  75"],"text/html":["\n","\n","  <div id=\"df-6c3b7045-9788-4109-8b4d-3fe5f8fe6b89\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>국어</th>\n","      <th>영어</th>\n","      <th>수학</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>홍길동</th>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>김영희</th>\n","      <td>90</td>\n","      <td>90</td>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>김희원</th>\n","      <td>85</td>\n","      <td>100</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>강희진</th>\n","      <td>85</td>\n","      <td>70</td>\n","      <td>95</td>\n","    </tr>\n","    <tr>\n","      <th>최소희</th>\n","      <td>90</td>\n","      <td>70</td>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>이사랑</th>\n","      <td>65</td>\n","      <td>80</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>박아라</th>\n","      <td>70</td>\n","      <td>100</td>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>안경진</th>\n","      <td>85</td>\n","      <td>60</td>\n","      <td>75</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6c3b7045-9788-4109-8b4d-3fe5f8fe6b89')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-37c5c2f6-4891-4cb1-8f2e-32f898852c53\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-37c5c2f6-4891-4cb1-8f2e-32f898852c53')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-37c5c2f6-4891-4cb1-8f2e-32f898852c53 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6c3b7045-9788-4109-8b4d-3fe5f8fe6b89 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6c3b7045-9788-4109-8b4d-3fe5f8fe6b89');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["#2번\n","df['합계'] = df['국어']+df['영어']+df['수학']\n","df['평균점수'] = df['합계']/3\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"S17aJDd07DaF","executionInfo":{"status":"ok","timestamp":1692081662076,"user_tz":-540,"elapsed":6,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"dc6dcd0e-e6a1-4b19-ae5a-f6376a71ecb5"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      국어   영어  수학   합계       평균점수\n","홍길동  100  100  90  290  96.666667\n","김영희   90   90  90  270  90.000000\n","김희원   85  100  75  260  86.666667\n","강희진   85   70  95  250  83.333333\n","최소희   90   70  90  250  83.333333\n","이사랑   65   80  75  220  73.333333\n","박아라   70  100  90  260  86.666667\n","안경진   85   60  75  220  73.333333"],"text/html":["\n","\n","  <div id=\"df-4ec79ae8-64df-4726-a5b9-5bd48f1ff4e1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>국어</th>\n","      <th>영어</th>\n","      <th>수학</th>\n","      <th>합계</th>\n","      <th>평균점수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>홍길동</th>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>90</td>\n","      <td>290</td>\n","      <td>96.666667</td>\n","    </tr>\n","    <tr>\n","      <th>김영희</th>\n","      <td>90</td>\n","      <td>90</td>\n","      <td>90</td>\n","      <td>270</td>\n","      <td>90.000000</td>\n","    </tr>\n","    <tr>\n","      <th>김희원</th>\n","      <td>85</td>\n","      <td>100</td>\n","      <td>75</td>\n","      <td>260</td>\n","      <td>86.666667</td>\n","    </tr>\n","    <tr>\n","      <th>강희진</th>\n","      <td>85</td>\n","      <td>70</td>\n","      <td>95</td>\n","      <td>250</td>\n","      <td>83.333333</td>\n","    </tr>\n","    <tr>\n","      <th>최소희</th>\n","      <td>90</td>\n","      <td>70</td>\n","      <td>90</td>\n","      <td>250</td>\n","      <td>83.333333</td>\n","    </tr>\n","    <tr>\n","      <th>이사랑</th>\n","      <td>65</td>\n","      <td>80</td>\n","      <td>75</td>\n","      <td>220</td>\n","      <td>73.333333</td>\n","    </tr>\n","    <tr>\n","      <th>박아라</th>\n","      <td>70</td>\n","      <td>100</td>\n","      <td>90</td>\n","      <td>260</td>\n","      <td>86.666667</td>\n","    </tr>\n","    <tr>\n","      <th>안경진</th>\n","      <td>85</td>\n","      <td>60</td>\n","      <td>75</td>\n","      <td>220</td>\n","      <td>73.333333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ec79ae8-64df-4726-a5b9-5bd48f1ff4e1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-de951048-0216-4c84-95b3-97dc33c74171\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de951048-0216-4c84-95b3-97dc33c74171')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-de951048-0216-4c84-95b3-97dc33c74171 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4ec79ae8-64df-4726-a5b9-5bd48f1ff4e1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4ec79ae8-64df-4726-a5b9-5bd48f1ff4e1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["#3번\n","df.loc[['김영희','김희원','강희진']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"enqd6_T07STG","executionInfo":{"status":"ok","timestamp":1692081693391,"user_tz":-540,"elapsed":264,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"7f6060ba-6e61-4f96-a4e1-15715cfb1168"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     국어   영어  수학   합계       평균점수\n","김영희  90   90  90  270  90.000000\n","김희원  85  100  75  260  86.666667\n","강희진  85   70  95  250  83.333333"],"text/html":["\n","\n","  <div id=\"df-1596bf76-ad84-468f-96b0-6c9b5c2d5899\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>국어</th>\n","      <th>영어</th>\n","      <th>수학</th>\n","      <th>합계</th>\n","      <th>평균점수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>김영희</th>\n","      <td>90</td>\n","      <td>90</td>\n","      <td>90</td>\n","      <td>270</td>\n","      <td>90.000000</td>\n","    </tr>\n","    <tr>\n","      <th>김희원</th>\n","      <td>85</td>\n","      <td>100</td>\n","      <td>75</td>\n","      <td>260</td>\n","      <td>86.666667</td>\n","    </tr>\n","    <tr>\n","      <th>강희진</th>\n","      <td>85</td>\n","      <td>70</td>\n","      <td>95</td>\n","      <td>250</td>\n","      <td>83.333333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1596bf76-ad84-468f-96b0-6c9b5c2d5899')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-fd691c4b-a551-49fd-92cb-786b068e752a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd691c4b-a551-49fd-92cb-786b068e752a')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-fd691c4b-a551-49fd-92cb-786b068e752a button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1596bf76-ad84-468f-96b0-6c9b5c2d5899 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1596bf76-ad84-468f-96b0-6c9b5c2d5899');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["#4번\n","df.loc[['김영희','김희원','강희진'],['합계','평균점수']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"LwXb-qKo7Z77","executionInfo":{"status":"ok","timestamp":1692081741001,"user_tz":-540,"elapsed":273,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"47342dc8-8274-4250-c428-3aee1e0b879a"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      합계       평균점수\n","김영희  270  90.000000\n","김희원  260  86.666667\n","강희진  250  83.333333"],"text/html":["\n","\n","  <div id=\"df-bf216463-05c8-4f16-a747-7a9a219ff58e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>합계</th>\n","      <th>평균점수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>김영희</th>\n","      <td>270</td>\n","      <td>90.000000</td>\n","    </tr>\n","    <tr>\n","      <th>김희원</th>\n","      <td>260</td>\n","      <td>86.666667</td>\n","    </tr>\n","    <tr>\n","      <th>강희진</th>\n","      <td>250</td>\n","      <td>83.333333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf216463-05c8-4f16-a747-7a9a219ff58e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-181a93fe-1d1b-494d-9a59-ff64f561e9cc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-181a93fe-1d1b-494d-9a59-ff64f561e9cc')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-181a93fe-1d1b-494d-9a59-ff64f561e9cc button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bf216463-05c8-4f16-a747-7a9a219ff58e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bf216463-05c8-4f16-a747-7a9a219ff58e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["df.iloc[1:4,3:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"QwgDEYJl7lmE","executionInfo":{"status":"ok","timestamp":1692081808039,"user_tz":-540,"elapsed":4,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"06ac78d9-d0b3-4cac-ba33-abf4b7b21275"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      합계       평균점수\n","김영희  270  90.000000\n","김희원  260  86.666667\n","강희진  250  83.333333"],"text/html":["\n","\n","  <div id=\"df-3babe203-361c-4097-8a35-f1ebdc665f88\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>합계</th>\n","      <th>평균점수</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>김영희</th>\n","      <td>270</td>\n","      <td>90.000000</td>\n","    </tr>\n","    <tr>\n","      <th>김희원</th>\n","      <td>260</td>\n","      <td>86.666667</td>\n","    </tr>\n","    <tr>\n","      <th>강희진</th>\n","      <td>250</td>\n","      <td>83.333333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3babe203-361c-4097-8a35-f1ebdc665f88')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-ef4b84c6-ba83-48aa-bfb8-4378b64f756c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef4b84c6-ba83-48aa-bfb8-4378b64f756c')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-ef4b84c6-ba83-48aa-bfb8-4378b64f756c button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3babe203-361c-4097-8a35-f1ebdc665f88 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3babe203-361c-4097-8a35-f1ebdc665f88');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["## 결측치 처리 실습"],"metadata":{"id":"RDueSMKj_wbz"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd"],"metadata":{"id":"SOwEvmTM7s2g","executionInfo":{"status":"ok","timestamp":1692082857410,"user_tz":-540,"elapsed":269,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(data = {'group':['A','B','A','A','B','C','C','B'],\n","                          'score':[10,9,10,20,7,8,10,6],\n","                          'age'  :[27,28,30,36,24,27,33,25]},\n","                  columns = ['group','score','age'],\n","                  index = ['x1','x2','x3','x4','x5','x6','x7','x8'])\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"-5Fbz32P_2H6","executionInfo":{"status":"ok","timestamp":1692083036155,"user_tz":-540,"elapsed":283,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"f1d12d63-4af3-4d99-af08-6b88af96cb19"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   group  score  age\n","x1     A     10   27\n","x2     B      9   28\n","x3     A     10   30\n","x4     A     20   36\n","x5     B      7   24\n","x6     C      8   27\n","x7     C     10   33\n","x8     B      6   25"],"text/html":["\n","\n","  <div id=\"df-f89283cf-d845-495a-96d4-2db0123d043f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>score</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x1</th>\n","      <td>A</td>\n","      <td>10</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>x2</th>\n","      <td>B</td>\n","      <td>9</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>x3</th>\n","      <td>A</td>\n","      <td>10</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>x4</th>\n","      <td>A</td>\n","      <td>20</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>x5</th>\n","      <td>B</td>\n","      <td>7</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>x6</th>\n","      <td>C</td>\n","      <td>8</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>x7</th>\n","      <td>C</td>\n","      <td>10</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>x8</th>\n","      <td>B</td>\n","      <td>6</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f89283cf-d845-495a-96d4-2db0123d043f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-cbaf4684-c4b2-4ec7-9cfe-2b34dd509d8c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cbaf4684-c4b2-4ec7-9cfe-2b34dd509d8c')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-cbaf4684-c4b2-4ec7-9cfe-2b34dd509d8c button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f89283cf-d845-495a-96d4-2db0123d043f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f89283cf-d845-495a-96d4-2db0123d043f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["#결측치 생성 함수(np.nan)\n","df.loc['x1','age'] = np.nan\n","df.loc['x3',['score','age']] = np.nan\n","df.loc['x8'] = np.nan\n","df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"4H-Uc_SsAdLb","executionInfo":{"status":"ok","timestamp":1692083124743,"user_tz":-540,"elapsed":6,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"d1334dd1-a75d-4b2a-8780-d2e0687cbae5"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   group  score   age\n","x1     A   10.0   NaN\n","x2     B    9.0  28.0\n","x3     A    NaN   NaN\n","x4     A   20.0  36.0\n","x5     B    7.0  24.0\n","x6     C    8.0  27.0\n","x7     C   10.0  33.0\n","x8   NaN    NaN   NaN"],"text/html":["\n","\n","  <div id=\"df-d979a770-ed6d-4f27-a96e-da2ee817d51d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>score</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x1</th>\n","      <td>A</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>x2</th>\n","      <td>B</td>\n","      <td>9.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>x3</th>\n","      <td>A</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>x4</th>\n","      <td>A</td>\n","      <td>20.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>x5</th>\n","      <td>B</td>\n","      <td>7.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>x6</th>\n","      <td>C</td>\n","      <td>8.0</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>x7</th>\n","      <td>C</td>\n","      <td>10.0</td>\n","      <td>33.0</td>\n","    </tr>\n","    <tr>\n","      <th>x8</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d979a770-ed6d-4f27-a96e-da2ee817d51d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-d61e2aa5-93cb-415e-a62c-b32e27b0dbcb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d61e2aa5-93cb-415e-a62c-b32e27b0dbcb')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-d61e2aa5-93cb-415e-a62c-b32e27b0dbcb button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d979a770-ed6d-4f27-a96e-da2ee817d51d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d979a770-ed6d-4f27-a96e-da2ee817d51d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["#결측값 확인\n","df.isnull()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"U2ntUqKUA3a2","executionInfo":{"status":"ok","timestamp":1692083148612,"user_tz":-540,"elapsed":309,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"87dbeea1-b68e-4cf7-9a57-97723d7760a0"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    group  score    age\n","x1  False  False   True\n","x2  False  False  False\n","x3  False   True   True\n","x4  False  False  False\n","x5  False  False  False\n","x6  False  False  False\n","x7  False  False  False\n","x8   True   True   True"],"text/html":["\n","\n","  <div id=\"df-ac573d03-3d56-4e23-a124-87d0b52c1747\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>score</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>x2</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>x3</th>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>x4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>x5</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>x6</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>x7</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>x8</th>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac573d03-3d56-4e23-a124-87d0b52c1747')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-a632704f-5ca2-46c8-980f-57bc88170bab\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a632704f-5ca2-46c8-980f-57bc88170bab')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-a632704f-5ca2-46c8-980f-57bc88170bab button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ac573d03-3d56-4e23-a124-87d0b52c1747 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ac573d03-3d56-4e23-a124-87d0b52c1747');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["#결측값 삭제\n","df.dropna(how = 'all',axis = 0) #전체가 결측치인 행 제거"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"c_AVFNXCA9M1","executionInfo":{"status":"ok","timestamp":1692083260303,"user_tz":-540,"elapsed":420,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"653ad777-ce48-4f50-db25-8e375adb7328"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   group  score   age\n","x1     A   10.0   NaN\n","x2     B    9.0  28.0\n","x3     A    NaN   NaN\n","x4     A   20.0  36.0\n","x5     B    7.0  24.0\n","x6     C    8.0  27.0\n","x7     C   10.0  33.0"],"text/html":["\n","\n","  <div id=\"df-19dee21f-d53b-409e-8d6f-3337d861f1ba\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>score</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x1</th>\n","      <td>A</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>x2</th>\n","      <td>B</td>\n","      <td>9.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>x3</th>\n","      <td>A</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>x4</th>\n","      <td>A</td>\n","      <td>20.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>x5</th>\n","      <td>B</td>\n","      <td>7.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>x6</th>\n","      <td>C</td>\n","      <td>8.0</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>x7</th>\n","      <td>C</td>\n","      <td>10.0</td>\n","      <td>33.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19dee21f-d53b-409e-8d6f-3337d861f1ba')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-c4d08cb1-4826-43ca-a2be-2d8b95d6c344\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c4d08cb1-4826-43ca-a2be-2d8b95d6c344')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-c4d08cb1-4826-43ca-a2be-2d8b95d6c344 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-19dee21f-d53b-409e-8d6f-3337d861f1ba button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-19dee21f-d53b-409e-8d6f-3337d861f1ba');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["df.dropna()#기본값은 모든 결측치가 있는 행 삭제"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"LljKCUFeBYce","executionInfo":{"status":"ok","timestamp":1692083314149,"user_tz":-540,"elapsed":4,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"c4857735-9937-4fd6-cc60-c32a21aabf67"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   group  score   age\n","x2     B    9.0  28.0\n","x4     A   20.0  36.0\n","x5     B    7.0  24.0\n","x6     C    8.0  27.0\n","x7     C   10.0  33.0"],"text/html":["\n","\n","  <div id=\"df-30ba28fe-f730-4319-a994-61c1cdb7c196\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>score</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x2</th>\n","      <td>B</td>\n","      <td>9.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>x4</th>\n","      <td>A</td>\n","      <td>20.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>x5</th>\n","      <td>B</td>\n","      <td>7.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>x6</th>\n","      <td>C</td>\n","      <td>8.0</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>x7</th>\n","      <td>C</td>\n","      <td>10.0</td>\n","      <td>33.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30ba28fe-f730-4319-a994-61c1cdb7c196')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-2a2461c3-e1ac-4bab-988d-bfa96b4e31ca\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2a2461c3-e1ac-4bab-988d-bfa96b4e31ca')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-2a2461c3-e1ac-4bab-988d-bfa96b4e31ca button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-30ba28fe-f730-4319-a994-61c1cdb7c196 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-30ba28fe-f730-4319-a994-61c1cdb7c196');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["#임게치 삭제\n","df.dropna(thresh = 2, axis = 0)#결측치기 2개이상인 행 삭제"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"x0t-V_deBmQg","executionInfo":{"status":"ok","timestamp":1692083389971,"user_tz":-540,"elapsed":8,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"44be4735-a50a-4192-a7a9-b32df611b8d6"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   group  score   age\n","x1     A   10.0   NaN\n","x2     B    9.0  28.0\n","x4     A   20.0  36.0\n","x5     B    7.0  24.0\n","x6     C    8.0  27.0\n","x7     C   10.0  33.0"],"text/html":["\n","\n","  <div id=\"df-e9bf503d-8080-4f62-b516-aaa9d01d9e19\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>score</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x1</th>\n","      <td>A</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>x2</th>\n","      <td>B</td>\n","      <td>9.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>x4</th>\n","      <td>A</td>\n","      <td>20.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>x5</th>\n","      <td>B</td>\n","      <td>7.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>x6</th>\n","      <td>C</td>\n","      <td>8.0</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>x7</th>\n","      <td>C</td>\n","      <td>10.0</td>\n","      <td>33.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9bf503d-8080-4f62-b516-aaa9d01d9e19')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-70cdb774-d03a-44fc-addf-a3c847d2b683\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-70cdb774-d03a-44fc-addf-a3c847d2b683')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-70cdb774-d03a-44fc-addf-a3c847d2b683 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e9bf503d-8080-4f62-b516-aaa9d01d9e19 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e9bf503d-8080-4f62-b516-aaa9d01d9e19');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["df = df.dropna(how = 'all',axis = 0)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"LF__3xNUB4KU","executionInfo":{"status":"ok","timestamp":1692083472864,"user_tz":-540,"elapsed":310,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"2fa9d7f3-8e4c-4025-85e1-5d1e05d5a13f"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   group  score   age\n","x1     A   10.0   NaN\n","x2     B    9.0  28.0\n","x3     A    NaN   NaN\n","x4     A   20.0  36.0\n","x5     B    7.0  24.0\n","x6     C    8.0  27.0\n","x7     C   10.0  33.0"],"text/html":["\n","\n","  <div id=\"df-9582a41c-144e-4256-b045-5b408159835d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>score</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x1</th>\n","      <td>A</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>x2</th>\n","      <td>B</td>\n","      <td>9.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>x3</th>\n","      <td>A</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>x4</th>\n","      <td>A</td>\n","      <td>20.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>x5</th>\n","      <td>B</td>\n","      <td>7.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>x6</th>\n","      <td>C</td>\n","      <td>8.0</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>x7</th>\n","      <td>C</td>\n","      <td>10.0</td>\n","      <td>33.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9582a41c-144e-4256-b045-5b408159835d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-84b18823-5960-40ee-a2c9-5ff8326aeccd\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84b18823-5960-40ee-a2c9-5ff8326aeccd')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-84b18823-5960-40ee-a2c9-5ff8326aeccd button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9582a41c-144e-4256-b045-5b408159835d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9582a41c-144e-4256-b045-5b408159835d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["#결측값 대치\n","df.fillna(value = 0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"zw-bmVrnCMUd","executionInfo":{"status":"ok","timestamp":1692083494541,"user_tz":-540,"elapsed":6,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"2b675a46-d946-4c8b-b7ac-e9c5fc26b03f"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   group  score   age\n","x1     A   10.0   0.0\n","x2     B    9.0  28.0\n","x3     A    0.0   0.0\n","x4     A   20.0  36.0\n","x5     B    7.0  24.0\n","x6     C    8.0  27.0\n","x7     C   10.0  33.0"],"text/html":["\n","\n","  <div id=\"df-9dab89ab-9292-4d82-b088-c5762f0c761c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>score</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x1</th>\n","      <td>A</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>x2</th>\n","      <td>B</td>\n","      <td>9.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>x3</th>\n","      <td>A</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>x4</th>\n","      <td>A</td>\n","      <td>20.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>x5</th>\n","      <td>B</td>\n","      <td>7.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>x6</th>\n","      <td>C</td>\n","      <td>8.0</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>x7</th>\n","      <td>C</td>\n","      <td>10.0</td>\n","      <td>33.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9dab89ab-9292-4d82-b088-c5762f0c761c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-f736b794-3ce8-4911-9f60-caff66e2af62\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f736b794-3ce8-4911-9f60-caff66e2af62')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-f736b794-3ce8-4911-9f60-caff66e2af62 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9dab89ab-9292-4d82-b088-c5762f0c761c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9dab89ab-9292-4d82-b088-c5762f0c761c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["df.fillna(value = df.mean()) #각 컬럼에 대한 평균으로 값을 대치"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":326},"id":"UnAuYFXvCRtr","executionInfo":{"status":"ok","timestamp":1692083610662,"user_tz":-540,"elapsed":308,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"1cce9832-830d-42fa-e1d0-01b9c970cf08"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-43-27e1639fa67e>:1: FutureWarning: The default value of numeric_only in DataFrame.mean is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  df.fillna(value = df.mean())\n"]},{"output_type":"execute_result","data":{"text/plain":["   group      score   age\n","x1     A  10.000000  29.6\n","x2     B   9.000000  28.0\n","x3     A  10.666667  29.6\n","x4     A  20.000000  36.0\n","x5     B   7.000000  24.0\n","x6     C   8.000000  27.0\n","x7     C  10.000000  33.0"],"text/html":["\n","\n","  <div id=\"df-93510bfd-6ed9-48d4-aceb-c36cffe5d11d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>score</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x1</th>\n","      <td>A</td>\n","      <td>10.000000</td>\n","      <td>29.6</td>\n","    </tr>\n","    <tr>\n","      <th>x2</th>\n","      <td>B</td>\n","      <td>9.000000</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>x3</th>\n","      <td>A</td>\n","      <td>10.666667</td>\n","      <td>29.6</td>\n","    </tr>\n","    <tr>\n","      <th>x4</th>\n","      <td>A</td>\n","      <td>20.000000</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>x5</th>\n","      <td>B</td>\n","      <td>7.000000</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>x6</th>\n","      <td>C</td>\n","      <td>8.000000</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>x7</th>\n","      <td>C</td>\n","      <td>10.000000</td>\n","      <td>33.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93510bfd-6ed9-48d4-aceb-c36cffe5d11d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-e7a34a36-a85c-4927-b95b-07fe87772961\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7a34a36-a85c-4927-b95b-07fe87772961')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-e7a34a36-a85c-4927-b95b-07fe87772961 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-93510bfd-6ed9-48d4-aceb-c36cffe5d11d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-93510bfd-6ed9-48d4-aceb-c36cffe5d11d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["df.fillna(value = df.median()) #중앙값으로 대치"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":326},"id":"94aRueDcCuAt","executionInfo":{"status":"ok","timestamp":1692083736662,"user_tz":-540,"elapsed":5,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"82b31340-b516-49a4-989f-5de4ac02b74d"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-44-33c96a323699>:1: FutureWarning: The default value of numeric_only in DataFrame.median is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  df.fillna(value = df.median())\n"]},{"output_type":"execute_result","data":{"text/plain":["   group  score   age\n","x1     A   10.0  28.0\n","x2     B    9.0  28.0\n","x3     A    9.5  28.0\n","x4     A   20.0  36.0\n","x5     B    7.0  24.0\n","x6     C    8.0  27.0\n","x7     C   10.0  33.0"],"text/html":["\n","\n","  <div id=\"df-ef13c5d0-9919-45a9-84cb-41e794d664bb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>score</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>x1</th>\n","      <td>A</td>\n","      <td>10.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>x2</th>\n","      <td>B</td>\n","      <td>9.0</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>x3</th>\n","      <td>A</td>\n","      <td>9.5</td>\n","      <td>28.0</td>\n","    </tr>\n","    <tr>\n","      <th>x4</th>\n","      <td>A</td>\n","      <td>20.0</td>\n","      <td>36.0</td>\n","    </tr>\n","    <tr>\n","      <th>x5</th>\n","      <td>B</td>\n","      <td>7.0</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>x6</th>\n","      <td>C</td>\n","      <td>8.0</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>x7</th>\n","      <td>C</td>\n","      <td>10.0</td>\n","      <td>33.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef13c5d0-9919-45a9-84cb-41e794d664bb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-76ce704a-3c46-4ba5-863a-93e7f3ca8df8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-76ce704a-3c46-4ba5-863a-93e7f3ca8df8')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-76ce704a-3c46-4ba5-863a-93e7f3ca8df8 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ef13c5d0-9919-45a9-84cb-41e794d664bb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ef13c5d0-9919-45a9-84cb-41e794d664bb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":44}]},{"cell_type":"markdown","source":["## 데이터 전처리 고급 연습문제\n","1. 주문정보, 고객정보, 상품정보 3개의 데이터프레임을 생성해라.\n","2. 주문정보 테이블에 고객정보 테이블을 join해라.\n","3. join한 테이블에 상품정보 테이블을 추가로 join해라.\n","4. 상품정보 테이블에 ITEM_CD = 002 / ITEM_NM = 'Washer' 정보를 추가 하시오.\n"],"metadata":{"id":"y_pk0Yd3Ch0y"}},{"cell_type":"code","source":["#1번\n","import pandas as pd\n","주문정보 = pd.DataFrame(data = {'CUST_ID':[100,100,200,200,300],\n","                            'ORD_NO':[11,12,13,14,15],\n","                            'ITEM_CD':['001','002','001','003','003']},\n","                    columns = ['CUST_ID','ORD_NO','ITEM_CD'])\n","고객정보 = pd.DataFrame(data = {'CUST_ID':[100,200,300,400],\n","                            'CUST_NM':['KIM','LEE','PARK','CHOI'],},\n","                    columns = ['CUST_ID','CUST_NM'])\n","상품정보 = pd.DataFrame(data = {'ITEM_CD':['001','003'],\n","                            'ITEM_NM':['Notebook','TV']},\n","                    columns = ['ITEM_CD','ITEM_NM'])\n"],"metadata":{"id":"0bNKW8tyDM1T","executionInfo":{"status":"ok","timestamp":1692100829048,"user_tz":-540,"elapsed":296,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["주문정보"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Mz6hwUWOECU5","executionInfo":{"status":"ok","timestamp":1692100834623,"user_tz":-540,"elapsed":4,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"4b244eb7-0211-4c11-8775-7003a5d72e74"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CUST_ID  ORD_NO ITEM_CD\n","0      100      11     001\n","1      100      12     002\n","2      200      13     001\n","3      200      14     003\n","4      300      15     003"],"text/html":["\n","\n","  <div id=\"df-733866f2-d19a-4922-bb8e-4356a6d784da\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CUST_ID</th>\n","      <th>ORD_NO</th>\n","      <th>ITEM_CD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>11</td>\n","      <td>001</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>100</td>\n","      <td>12</td>\n","      <td>002</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>200</td>\n","      <td>13</td>\n","      <td>001</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>200</td>\n","      <td>14</td>\n","      <td>003</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>300</td>\n","      <td>15</td>\n","      <td>003</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-733866f2-d19a-4922-bb8e-4356a6d784da')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-ad54a8ca-82f2-44b6-ba14-c1bdae33cc8a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad54a8ca-82f2-44b6-ba14-c1bdae33cc8a')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-ad54a8ca-82f2-44b6-ba14-c1bdae33cc8a button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-733866f2-d19a-4922-bb8e-4356a6d784da button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-733866f2-d19a-4922-bb8e-4356a6d784da');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["고객정보"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"B-tQ3pPREbF3","executionInfo":{"status":"ok","timestamp":1692100837049,"user_tz":-540,"elapsed":5,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"030220bb-17d4-4cce-c1dc-7c1d520d8d27"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CUST_ID CUST_NM\n","0      100     KIM\n","1      200     LEE\n","2      300    PARK\n","3      400    CHOI"],"text/html":["\n","\n","  <div id=\"df-626b9686-2ee0-46d8-b67b-07ca9704b3e1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CUST_ID</th>\n","      <th>CUST_NM</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>KIM</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>200</td>\n","      <td>LEE</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>300</td>\n","      <td>PARK</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>400</td>\n","      <td>CHOI</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-626b9686-2ee0-46d8-b67b-07ca9704b3e1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-4b1f48d9-54fc-468a-a5a4-ffeb1e7e536f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b1f48d9-54fc-468a-a5a4-ffeb1e7e536f')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-4b1f48d9-54fc-468a-a5a4-ffeb1e7e536f button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-626b9686-2ee0-46d8-b67b-07ca9704b3e1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-626b9686-2ee0-46d8-b67b-07ca9704b3e1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["상품정보"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"vop6zmfAEbs7","executionInfo":{"status":"ok","timestamp":1692100839776,"user_tz":-540,"elapsed":5,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"fd7e553c-84b7-4a21-e605-9d73192701dd"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  ITEM_CD   ITEM_NM\n","0     001  Notebook\n","1     003        TV"],"text/html":["\n","\n","  <div id=\"df-80cdaa5c-2e5e-4a05-bafa-0f9b782c3bcf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ITEM_CD</th>\n","      <th>ITEM_NM</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>001</td>\n","      <td>Notebook</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>003</td>\n","      <td>TV</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80cdaa5c-2e5e-4a05-bafa-0f9b782c3bcf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-bbf77263-ed08-4c87-9989-328c46fd4976\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bbf77263-ed08-4c87-9989-328c46fd4976')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-bbf77263-ed08-4c87-9989-328c46fd4976 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-80cdaa5c-2e5e-4a05-bafa-0f9b782c3bcf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-80cdaa5c-2e5e-4a05-bafa-0f9b782c3bcf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["#2번\n","결과 = pd.merge(주문정보, 고객정보, on='CUST_ID', how = 'left')\n","결과"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"jPIwTcUyEcZc","executionInfo":{"status":"ok","timestamp":1692101126666,"user_tz":-540,"elapsed":7,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"9f1f5ddc-d991-4877-cf59-f35568fc5566"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CUST_ID  ORD_NO ITEM_CD CUST_NM\n","0      100      11     001     KIM\n","1      100      12     002     KIM\n","2      200      13     001     LEE\n","3      200      14     003     LEE\n","4      300      15     003    PARK"],"text/html":["\n","\n","  <div id=\"df-918554b5-f91a-4a92-b507-672b1b509757\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CUST_ID</th>\n","      <th>ORD_NO</th>\n","      <th>ITEM_CD</th>\n","      <th>CUST_NM</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>11</td>\n","      <td>001</td>\n","      <td>KIM</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>100</td>\n","      <td>12</td>\n","      <td>002</td>\n","      <td>KIM</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>200</td>\n","      <td>13</td>\n","      <td>001</td>\n","      <td>LEE</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>200</td>\n","      <td>14</td>\n","      <td>003</td>\n","      <td>LEE</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>300</td>\n","      <td>15</td>\n","      <td>003</td>\n","      <td>PARK</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-918554b5-f91a-4a92-b507-672b1b509757')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-80d68804-318c-45d5-928e-11d3408f846d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80d68804-318c-45d5-928e-11d3408f846d')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-80d68804-318c-45d5-928e-11d3408f846d button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-918554b5-f91a-4a92-b507-672b1b509757 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-918554b5-f91a-4a92-b507-672b1b509757');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#3번\n","결과 = pd.merge(결과, 상품정보, on = 'ITEM_CD', how = 'left')\n","결과"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"6H8raWSSFNTx","executionInfo":{"status":"ok","timestamp":1692101188929,"user_tz":-540,"elapsed":5,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"0538edad-3845-400b-e6e9-71f4aae68505"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CUST_ID  ORD_NO ITEM_CD CUST_NM   ITEM_NM\n","0      100      11     001     KIM  Notebook\n","1      100      12     002     KIM       NaN\n","2      200      13     001     LEE  Notebook\n","3      200      14     003     LEE        TV\n","4      300      15     003    PARK        TV"],"text/html":["\n","\n","  <div id=\"df-22b07469-7f19-4c0f-979f-b2635f0cc677\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CUST_ID</th>\n","      <th>ORD_NO</th>\n","      <th>ITEM_CD</th>\n","      <th>CUST_NM</th>\n","      <th>ITEM_NM</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>11</td>\n","      <td>001</td>\n","      <td>KIM</td>\n","      <td>Notebook</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>100</td>\n","      <td>12</td>\n","      <td>002</td>\n","      <td>KIM</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>200</td>\n","      <td>13</td>\n","      <td>001</td>\n","      <td>LEE</td>\n","      <td>Notebook</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>200</td>\n","      <td>14</td>\n","      <td>003</td>\n","      <td>LEE</td>\n","      <td>TV</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>300</td>\n","      <td>15</td>\n","      <td>003</td>\n","      <td>PARK</td>\n","      <td>TV</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22b07469-7f19-4c0f-979f-b2635f0cc677')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-9f7fcb70-5952-40d1-a21f-7b201be6c0ba\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f7fcb70-5952-40d1-a21f-7b201be6c0ba')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-9f7fcb70-5952-40d1-a21f-7b201be6c0ba button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-22b07469-7f19-4c0f-979f-b2635f0cc677 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-22b07469-7f19-4c0f-979f-b2635f0cc677');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["#4번\n","상품정보.loc[2] = ['002','Whasher']\n","상품정보"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"IlWhbNSgFxic","executionInfo":{"status":"ok","timestamp":1692101334356,"user_tz":-540,"elapsed":5,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"1fa66aeb-4531-4f96-f240-8267d176e857"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  ITEM_CD   ITEM_NM\n","0     001  Notebook\n","1     003        TV\n","2     002   Whasher"],"text/html":["\n","\n","  <div id=\"df-f157ba47-09ef-4c21-9bda-40fdc986c3dd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ITEM_CD</th>\n","      <th>ITEM_NM</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>001</td>\n","      <td>Notebook</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>003</td>\n","      <td>TV</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>002</td>\n","      <td>Whasher</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f157ba47-09ef-4c21-9bda-40fdc986c3dd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-b69714e4-74ff-4598-99fa-38c6dbc667d4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b69714e4-74ff-4598-99fa-38c6dbc667d4')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-b69714e4-74ff-4598-99fa-38c6dbc667d4 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f157ba47-09ef-4c21-9bda-40fdc986c3dd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f157ba47-09ef-4c21-9bda-40fdc986c3dd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["상품정보 = 상품정보.sort_values(by = 'ITEM_CD')\n","결과 = pd.merge(결과, 상품정보, on = 'ITEM_CD', how = 'left')\n","결과"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"IkrlKpKXGVIK","executionInfo":{"status":"ok","timestamp":1692101410558,"user_tz":-540,"elapsed":5,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"d8fd69cc-7a63-4410-e41a-14811596cceb"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CUST_ID  ORD_NO ITEM_CD CUST_NM ITEM_NM_x ITEM_NM_y\n","0      100      11     001     KIM  Notebook  Notebook\n","1      100      12     002     KIM       NaN   Whasher\n","2      200      13     001     LEE  Notebook  Notebook\n","3      200      14     003     LEE        TV        TV\n","4      300      15     003    PARK        TV        TV"],"text/html":["\n","\n","  <div id=\"df-f923c87a-bb8a-472a-bb82-5ade35d720b6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CUST_ID</th>\n","      <th>ORD_NO</th>\n","      <th>ITEM_CD</th>\n","      <th>CUST_NM</th>\n","      <th>ITEM_NM_x</th>\n","      <th>ITEM_NM_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100</td>\n","      <td>11</td>\n","      <td>001</td>\n","      <td>KIM</td>\n","      <td>Notebook</td>\n","      <td>Notebook</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>100</td>\n","      <td>12</td>\n","      <td>002</td>\n","      <td>KIM</td>\n","      <td>NaN</td>\n","      <td>Whasher</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>200</td>\n","      <td>13</td>\n","      <td>001</td>\n","      <td>LEE</td>\n","      <td>Notebook</td>\n","      <td>Notebook</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>200</td>\n","      <td>14</td>\n","      <td>003</td>\n","      <td>LEE</td>\n","      <td>TV</td>\n","      <td>TV</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>300</td>\n","      <td>15</td>\n","      <td>003</td>\n","      <td>PARK</td>\n","      <td>TV</td>\n","      <td>TV</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f923c87a-bb8a-472a-bb82-5ade35d720b6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-56ccdfa9-b848-4952-9284-8cbd0d54420b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-56ccdfa9-b848-4952-9284-8cbd0d54420b')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-56ccdfa9-b848-4952-9284-8cbd0d54420b button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f923c87a-bb8a-472a-bb82-5ade35d720b6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f923c87a-bb8a-472a-bb82-5ade35d720b6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["## 시각화 연습문제(matplotlib)\n","1. subplot을 이용하여 2행 3열의 figure를 만들어라.\n","2. subplots를 이용하여 2행 3열의 figure를 만들어라.\n","3. 문제 2번에서의 2행3의 figure안에 라인차트를 그려라."],"metadata":{"id":"N9qdXcHCOde8"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt"],"metadata":{"id":"YkQ8Lk9lGnuw","executionInfo":{"status":"ok","timestamp":1692103553870,"user_tz":-540,"elapsed":2,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["#1번\n","plt.figure()\n","plt.subplot(231)\n","plt.subplot(232)\n","plt.subplot(233)\n","plt.subplot(234)\n","plt.subplot(235)\n","plt.subplot(236)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":435},"id":"3_teMP6lOxlm","executionInfo":{"status":"ok","timestamp":1692103732565,"user_tz":-540,"elapsed":1215,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"c71e3c70-8ef7-49c8-b31e-3c45dd7e3a95"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 6 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#2번\n","plt.figure(figsize = (10,6))\n","plt.subplots(nrows = 2, ncols = 3)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":453},"id":"NWB2HRfzPNiA","executionInfo":{"status":"ok","timestamp":1692103773975,"user_tz":-540,"elapsed":893,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"898cdfda-b590-4d45-e8ea-9cd24f040694"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 6 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["fig, ax = plt.subplots(2,3,figsize = (10,6))\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":546},"id":"teE3MDzfPoAU","executionInfo":{"status":"ok","timestamp":1692103818173,"user_tz":-540,"elapsed":852,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"900bca70-32f3-4a01-be8c-0b501aaf76ee"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 6 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#3번\n","fig, ax = plt.subplots(2,3,figsize = (10,6))\n","plt.subplots_adjust(wspace = 0.3, hspace = 0.5)\n","ax[0,0].plot([1,2,3],[1,2,3])\n","ax[0,0].set_title('plot(1,1)')\n","\n","ax[0,1].plot([1,2,3],[1,1,4])\n","ax[0,1].set_title('plot(1,2)')\n","\n","ax[0,2].plot([1,2,3],[5,0,8])\n","ax[0,2].set_title('plot(1,3)')\n","\n","ax[1,0].plot([1,2,3],[1,3,1])\n","ax[1,0].set_title('plot(2,1)')\n","\n","ax[1,1].plot([1,2,3],[3,1,3])\n","ax[1,1].set_title('plot(2,2)')\n","\n","ax[1,2].plot([1,2,3],[5,2,1])\n","ax[1,2].set_title('plot(2,3)')\n","\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":563},"id":"u1HyOjgnPywX","executionInfo":{"status":"ok","timestamp":1692104269680,"user_tz":-540,"elapsed":1465,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"bb810a20-da1c-4ffb-b790-97e8a722ab03"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"metadata":{},"execution_count":26},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 6 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 시각화 연습문제(라인차트, 히스토그램)\n","1. df데이터의 A,C컬럼의 트렌드와 분포를 확인할 수 있는 그래프를 그려라."],"metadata":{"id":"DNphu9jPkMkV"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"],"metadata":{"id":"b1ExaVrMQdRY","executionInfo":{"status":"ok","timestamp":1692109159835,"user_tz":-540,"elapsed":341,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(data = np.random.randn(50,3),\n","                  columns = ['A','B','C'],\n","                  index = list(range(1,51)))\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Lwyzj-MHkLj3","executionInfo":{"status":"ok","timestamp":1692109321488,"user_tz":-540,"elapsed":309,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"dc469f82-0c3c-470b-d24b-a1da2e1a3d17"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           A         B         C\n","1   0.018400  0.798596  0.899115\n","2  -0.242493  0.996854  0.722957\n","3   0.366173  0.559748 -0.397788\n","4   0.960331 -0.299439  1.268281\n","5  -0.527063  0.902633  0.728074\n","6   1.195392 -1.498531  1.086460\n","7  -0.587418  0.332310  1.758672\n","8  -1.394990  2.132057  0.874583\n","9  -0.324895 -0.302541 -0.971597\n","10 -1.816600  0.017239 -1.494881\n","11 -0.770030  1.134584 -0.711328\n","12 -0.896960  0.039613  0.152502\n","13  0.053258  0.025982 -1.305473\n","14  1.623404 -0.085497  1.676031\n","15  0.960568 -0.430247 -0.157487\n","16  1.844984 -0.373185  1.723389\n","17  1.528107 -1.021912  0.140234\n","18 -0.003017  0.614752  0.849452\n","19  0.570751 -1.014975  0.531476\n","20 -0.035090  0.076847  1.112485\n","21 -0.337829 -1.270130  0.977646\n","22  1.719809  1.391269 -0.116875\n","23  0.053297  1.123148  0.251147\n","24 -1.260956 -0.734231  0.276581\n","25 -0.420575  0.758176 -1.029003\n","26 -0.277461  1.960356 -0.716101\n","27  1.285432  1.817217  0.053830\n","28  1.514970 -1.877358 -1.365258\n","29 -1.550778 -2.166306 -1.635208\n","30 -0.768550  0.225919  1.284614\n","31 -0.744518  0.567098  1.428149\n","32 -0.426699  1.563614 -2.493575\n","33  0.064565 -1.704745  2.978674\n","34 -0.034027 -0.385402  0.847159\n","35 -0.929894  0.951387 -1.432441\n","36 -0.994239  0.341342 -1.247812\n","37  0.396522  1.262362  0.643842\n","38 -0.507089  0.748675 -1.257203\n","39 -0.161046  0.293044 -0.741237\n","40  0.922928 -1.047776  1.705871\n","41 -0.221156 -0.583674  0.078629\n","42  0.645074  1.849609 -0.857123\n","43  0.510844  0.318752  1.202760\n","44 -0.184943  0.853571 -0.037492\n","45  0.688643 -0.965978 -1.634137\n","46 -0.012064 -0.266104  1.156195\n","47  0.267553  0.368203  1.126716\n","48 -0.798263 -0.723533  1.133670\n","49  1.736697  1.223021 -1.177281\n","50 -1.262268 -1.247296  0.079691"],"text/html":["\n","\n","  <div id=\"df-2e96455c-4d6a-4cca-822f-0d067e5a4b22\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.018400</td>\n","      <td>0.798596</td>\n","      <td>0.899115</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.242493</td>\n","      <td>0.996854</td>\n","      <td>0.722957</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.366173</td>\n","      <td>0.559748</td>\n","      <td>-0.397788</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.960331</td>\n","      <td>-0.299439</td>\n","      <td>1.268281</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>-0.527063</td>\n","      <td>0.902633</td>\n","      <td>0.728074</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1.195392</td>\n","      <td>-1.498531</td>\n","      <td>1.086460</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>-0.587418</td>\n","      <td>0.332310</td>\n","      <td>1.758672</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>-1.394990</td>\n","      <td>2.132057</td>\n","      <td>0.874583</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>-0.324895</td>\n","      <td>-0.302541</td>\n","      <td>-0.971597</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>-1.816600</td>\n","      <td>0.017239</td>\n","      <td>-1.494881</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>-0.770030</td>\n","      <td>1.134584</td>\n","      <td>-0.711328</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>-0.896960</td>\n","      <td>0.039613</td>\n","      <td>0.152502</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.053258</td>\n","      <td>0.025982</td>\n","      <td>-1.305473</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1.623404</td>\n","      <td>-0.085497</td>\n","      <td>1.676031</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.960568</td>\n","      <td>-0.430247</td>\n","      <td>-0.157487</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>1.844984</td>\n","      <td>-0.373185</td>\n","      <td>1.723389</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1.528107</td>\n","      <td>-1.021912</td>\n","      <td>0.140234</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>-0.003017</td>\n","      <td>0.614752</td>\n","      <td>0.849452</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.570751</td>\n","      <td>-1.014975</td>\n","      <td>0.531476</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>-0.035090</td>\n","      <td>0.076847</td>\n","      <td>1.112485</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>-0.337829</td>\n","      <td>-1.270130</td>\n","      <td>0.977646</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>1.719809</td>\n","      <td>1.391269</td>\n","      <td>-0.116875</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>0.053297</td>\n","      <td>1.123148</td>\n","      <td>0.251147</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>-1.260956</td>\n","      <td>-0.734231</td>\n","      <td>0.276581</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>-0.420575</td>\n","      <td>0.758176</td>\n","      <td>-1.029003</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>-0.277461</td>\n","      <td>1.960356</td>\n","      <td>-0.716101</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>1.285432</td>\n","      <td>1.817217</td>\n","      <td>0.053830</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>1.514970</td>\n","      <td>-1.877358</td>\n","      <td>-1.365258</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>-1.550778</td>\n","      <td>-2.166306</td>\n","      <td>-1.635208</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>-0.768550</td>\n","      <td>0.225919</td>\n","      <td>1.284614</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>-0.744518</td>\n","      <td>0.567098</td>\n","      <td>1.428149</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>-0.426699</td>\n","      <td>1.563614</td>\n","      <td>-2.493575</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>0.064565</td>\n","      <td>-1.704745</td>\n","      <td>2.978674</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>-0.034027</td>\n","      <td>-0.385402</td>\n","      <td>0.847159</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>-0.929894</td>\n","      <td>0.951387</td>\n","      <td>-1.432441</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>-0.994239</td>\n","      <td>0.341342</td>\n","      <td>-1.247812</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>0.396522</td>\n","      <td>1.262362</td>\n","      <td>0.643842</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>-0.507089</td>\n","      <td>0.748675</td>\n","      <td>-1.257203</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>-0.161046</td>\n","      <td>0.293044</td>\n","      <td>-0.741237</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>0.922928</td>\n","      <td>-1.047776</td>\n","      <td>1.705871</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>-0.221156</td>\n","      <td>-0.583674</td>\n","      <td>0.078629</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>0.645074</td>\n","      <td>1.849609</td>\n","      <td>-0.857123</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>0.510844</td>\n","      <td>0.318752</td>\n","      <td>1.202760</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>-0.184943</td>\n","      <td>0.853571</td>\n","      <td>-0.037492</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>0.688643</td>\n","      <td>-0.965978</td>\n","      <td>-1.634137</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>-0.012064</td>\n","      <td>-0.266104</td>\n","      <td>1.156195</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>0.267553</td>\n","      <td>0.368203</td>\n","      <td>1.126716</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>-0.798263</td>\n","      <td>-0.723533</td>\n","      <td>1.133670</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>1.736697</td>\n","      <td>1.223021</td>\n","      <td>-1.177281</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>-1.262268</td>\n","      <td>-1.247296</td>\n","      <td>0.079691</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e96455c-4d6a-4cca-822f-0d067e5a4b22')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-7fc833ff-c29e-40ef-af22-6096722be67d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7fc833ff-c29e-40ef-af22-6096722be67d')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-7fc833ff-c29e-40ef-af22-6096722be67d button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2e96455c-4d6a-4cca-822f-0d067e5a4b22 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2e96455c-4d6a-4cca-822f-0d067e5a4b22');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["fig, ax = plt.subplots(1,2,figsize = (10,6))\n","ax[0].plot(df['A'], label = 'A', color = 'g')\n","ax[0].plot(df['C'], label = 'C', color = 'y')\n","ax[0].set_title('Trend')\n","ax[0].legend()\n","\n","ax[1].hist((df['A'],df['C']), label = ['A','C'], color = ['g','y'], histtype = 'stepfilled', alpha = 0.2)\n","ax[1].set_title('Distribution')\n","ax[1].legend()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":563},"id":"nN18-c7BklKl","executionInfo":{"status":"ok","timestamp":1692109613632,"user_tz":-540,"elapsed":1503,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"470ee993-fab6-44e9-abff-a58240032ead"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7fbe0ca608b0>"]},"metadata":{},"execution_count":33},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 시각화 연습문제(막대그래프 & 원그래프)\n","1. diamonds데이터셋의 cut별 평균 가격을 막대그래프로 표현하라.\n","2. diamonds데이터셋의 cut별 개수 비율을 원그래프로 표현하라."],"metadata":{"id":"0Y27Kgaxz_k4"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"vQE_yz350Q37","executionInfo":{"status":"ok","timestamp":1692113402021,"user_tz":-540,"elapsed":2265,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["#1번\n","df = sns.load_dataset('diamonds')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"EyVD0-ULlx1A","executionInfo":{"status":"ok","timestamp":1692113434798,"user_tz":-540,"elapsed":328,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"1473b6d5-5441-423a-d39c-b81911774a74"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       carat        cut color clarity  depth  table  price     x     y     z\n","0       0.23      Ideal     E     SI2   61.5   55.0    326  3.95  3.98  2.43\n","1       0.21    Premium     E     SI1   59.8   61.0    326  3.89  3.84  2.31\n","2       0.23       Good     E     VS1   56.9   65.0    327  4.05  4.07  2.31\n","3       0.29    Premium     I     VS2   62.4   58.0    334  4.20  4.23  2.63\n","4       0.31       Good     J     SI2   63.3   58.0    335  4.34  4.35  2.75\n","...      ...        ...   ...     ...    ...    ...    ...   ...   ...   ...\n","53935   0.72      Ideal     D     SI1   60.8   57.0   2757  5.75  5.76  3.50\n","53936   0.72       Good     D     SI1   63.1   55.0   2757  5.69  5.75  3.61\n","53937   0.70  Very Good     D     SI1   62.8   60.0   2757  5.66  5.68  3.56\n","53938   0.86    Premium     H     SI2   61.0   58.0   2757  6.15  6.12  3.74\n","53939   0.75      Ideal     D     SI2   62.2   55.0   2757  5.83  5.87  3.64\n","\n","[53940 rows x 10 columns]"],"text/html":["\n","\n","  <div id=\"df-1fd679c4-8724-4b28-9a6a-65e8e44598ca\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>carat</th>\n","      <th>cut</th>\n","      <th>color</th>\n","      <th>clarity</th>\n","      <th>depth</th>\n","      <th>table</th>\n","      <th>price</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>z</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.23</td>\n","      <td>Ideal</td>\n","      <td>E</td>\n","      <td>SI2</td>\n","      <td>61.5</td>\n","      <td>55.0</td>\n","      <td>326</td>\n","      <td>3.95</td>\n","      <td>3.98</td>\n","      <td>2.43</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.21</td>\n","      <td>Premium</td>\n","      <td>E</td>\n","      <td>SI1</td>\n","      <td>59.8</td>\n","      <td>61.0</td>\n","      <td>326</td>\n","      <td>3.89</td>\n","      <td>3.84</td>\n","      <td>2.31</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.23</td>\n","      <td>Good</td>\n","      <td>E</td>\n","      <td>VS1</td>\n","      <td>56.9</td>\n","      <td>65.0</td>\n","      <td>327</td>\n","      <td>4.05</td>\n","      <td>4.07</td>\n","      <td>2.31</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.29</td>\n","      <td>Premium</td>\n","      <td>I</td>\n","      <td>VS2</td>\n","      <td>62.4</td>\n","      <td>58.0</td>\n","      <td>334</td>\n","      <td>4.20</td>\n","      <td>4.23</td>\n","      <td>2.63</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.31</td>\n","      <td>Good</td>\n","      <td>J</td>\n","      <td>SI2</td>\n","      <td>63.3</td>\n","      <td>58.0</td>\n","      <td>335</td>\n","      <td>4.34</td>\n","      <td>4.35</td>\n","      <td>2.75</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>53935</th>\n","      <td>0.72</td>\n","      <td>Ideal</td>\n","      <td>D</td>\n","      <td>SI1</td>\n","      <td>60.8</td>\n","      <td>57.0</td>\n","      <td>2757</td>\n","      <td>5.75</td>\n","      <td>5.76</td>\n","      <td>3.50</td>\n","    </tr>\n","    <tr>\n","      <th>53936</th>\n","      <td>0.72</td>\n","      <td>Good</td>\n","      <td>D</td>\n","      <td>SI1</td>\n","      <td>63.1</td>\n","      <td>55.0</td>\n","      <td>2757</td>\n","      <td>5.69</td>\n","      <td>5.75</td>\n","      <td>3.61</td>\n","    </tr>\n","    <tr>\n","      <th>53937</th>\n","      <td>0.70</td>\n","      <td>Very Good</td>\n","      <td>D</td>\n","      <td>SI1</td>\n","      <td>62.8</td>\n","      <td>60.0</td>\n","      <td>2757</td>\n","      <td>5.66</td>\n","      <td>5.68</td>\n","      <td>3.56</td>\n","    </tr>\n","    <tr>\n","      <th>53938</th>\n","      <td>0.86</td>\n","      <td>Premium</td>\n","      <td>H</td>\n","      <td>SI2</td>\n","      <td>61.0</td>\n","      <td>58.0</td>\n","      <td>2757</td>\n","      <td>6.15</td>\n","      <td>6.12</td>\n","      <td>3.74</td>\n","    </tr>\n","    <tr>\n","      <th>53939</th>\n","      <td>0.75</td>\n","      <td>Ideal</td>\n","      <td>D</td>\n","      <td>SI2</td>\n","      <td>62.2</td>\n","      <td>55.0</td>\n","      <td>2757</td>\n","      <td>5.83</td>\n","      <td>5.87</td>\n","      <td>3.64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>53940 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1fd679c4-8724-4b28-9a6a-65e8e44598ca')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-8787672d-e368-46b7-b9d2-2db79a1a3a55\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8787672d-e368-46b7-b9d2-2db79a1a3a55')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-8787672d-e368-46b7-b9d2-2db79a1a3a55 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1fd679c4-8724-4b28-9a6a-65e8e44598ca button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1fd679c4-8724-4b28-9a6a-65e8e44598ca');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["df_cut = pd.DataFrame(df.groupby('cut').price.mean())\n","df_cut = df_cut.rename_axis('group').reset_index()\n","df_cut"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"yiuXzXeQ0ay9","executionInfo":{"status":"ok","timestamp":1692113532643,"user_tz":-540,"elapsed":299,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"6d7ff30d-d738-4543-b340-ebcb03a3fa76"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       group        price\n","0      Ideal  3457.541970\n","1    Premium  4584.257704\n","2  Very Good  3981.759891\n","3       Good  3928.864452\n","4       Fair  4358.757764"],"text/html":["\n","\n","  <div id=\"df-bf1309e6-13b6-40bc-a497-2be997e46d98\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Ideal</td>\n","      <td>3457.541970</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Premium</td>\n","      <td>4584.257704</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Very Good</td>\n","      <td>3981.759891</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Good</td>\n","      <td>3928.864452</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Fair</td>\n","      <td>4358.757764</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf1309e6-13b6-40bc-a497-2be997e46d98')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-484c38ef-3e9a-4256-bad8-8a97455fa27a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-484c38ef-3e9a-4256-bad8-8a97455fa27a')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-484c38ef-3e9a-4256-bad8-8a97455fa27a button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bf1309e6-13b6-40bc-a497-2be997e46d98 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bf1309e6-13b6-40bc-a497-2be997e46d98');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["plt.figure()\n","colors = ['y','r','b','g','m']\n","plt.bar(df_cut.group,df_cut.price,color = colors)\n","plt.title('The price of diamonds by cut')\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":470},"id":"K_zvjFQV0pkD","executionInfo":{"status":"ok","timestamp":1692113714561,"user_tz":-540,"elapsed":885,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"1637621e-57e2-44d9-bdf0-3ec011ac8893"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#2번\n","df_cut = pd.DataFrame(df.groupby('cut').cut.count())\n","df_cut = df_cut.rename_axis('group').reset_index()\n","df_cut"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"OgYwJ6d81fbb","executionInfo":{"status":"ok","timestamp":1692113775019,"user_tz":-540,"elapsed":296,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"3e39487a-1075-4ca6-ade8-fcbff457e70f"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       group    cut\n","0      Ideal  21551\n","1    Premium  13791\n","2  Very Good  12082\n","3       Good   4906\n","4       Fair   1610"],"text/html":["\n","\n","  <div id=\"df-f3558ffb-4c12-49b5-84f2-5903d45e028c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>group</th>\n","      <th>cut</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Ideal</td>\n","      <td>21551</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Premium</td>\n","      <td>13791</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Very Good</td>\n","      <td>12082</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Good</td>\n","      <td>4906</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Fair</td>\n","      <td>1610</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3558ffb-4c12-49b5-84f2-5903d45e028c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-38058c1d-64e4-44e1-8fb8-a5528381bd5b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-38058c1d-64e4-44e1-8fb8-a5528381bd5b')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-38058c1d-64e4-44e1-8fb8-a5528381bd5b button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f3558ffb-4c12-49b5-84f2-5903d45e028c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f3558ffb-4c12-49b5-84f2-5903d45e028c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["plt.figure()\n","plt.pie(df_cut.cut,labels = df_cut.group, autopct = '%.2f%%')\n","plt.title('The counts of cut')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"WxGGhIIf1ya_","executionInfo":{"status":"ok","timestamp":1692113921075,"user_tz":-540,"elapsed":966,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"2e5d8bdc-6066-4cd8-af5b-687ea6dc1738"},"execution_count":45,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 시각화 연습문제(산점도 & 박스플랏)\n","1. 식사시간 별로 팁의 분포를 비교하기 위해 boxplot을 그려라.\n","2. 식사시간 별 식사비용과 팁의 관계를 산점도로 확인하라."],"metadata":{"id":"FdX6lBcf8Ngy"}},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"JunN431K2PqS","executionInfo":{"status":"ok","timestamp":1692115538469,"user_tz":-540,"elapsed":413,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["#1번, 2번\n","df = sns.load_dataset('tips')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"zFgPaVPP8gyL","executionInfo":{"status":"ok","timestamp":1692115550701,"user_tz":-540,"elapsed":478,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"4b053624-38cc-4409-df0e-56f8989d1639"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     total_bill   tip     sex smoker   day    time  size\n","0         16.99  1.01  Female     No   Sun  Dinner     2\n","1         10.34  1.66    Male     No   Sun  Dinner     3\n","2         21.01  3.50    Male     No   Sun  Dinner     3\n","3         23.68  3.31    Male     No   Sun  Dinner     2\n","4         24.59  3.61  Female     No   Sun  Dinner     4\n","..          ...   ...     ...    ...   ...     ...   ...\n","239       29.03  5.92    Male     No   Sat  Dinner     3\n","240       27.18  2.00  Female    Yes   Sat  Dinner     2\n","241       22.67  2.00    Male    Yes   Sat  Dinner     2\n","242       17.82  1.75    Male     No   Sat  Dinner     2\n","243       18.78  3.00  Female     No  Thur  Dinner     2\n","\n","[244 rows x 7 columns]"],"text/html":["\n","\n","  <div id=\"df-90160cd7-396a-461e-990f-32886e1f8205\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total_bill</th>\n","      <th>tip</th>\n","      <th>sex</th>\n","      <th>smoker</th>\n","      <th>day</th>\n","      <th>time</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16.99</td>\n","      <td>1.01</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10.34</td>\n","      <td>1.66</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21.01</td>\n","      <td>3.50</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.68</td>\n","      <td>3.31</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24.59</td>\n","      <td>3.61</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>239</th>\n","      <td>29.03</td>\n","      <td>5.92</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sat</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>240</th>\n","      <td>27.18</td>\n","      <td>2.00</td>\n","      <td>Female</td>\n","      <td>Yes</td>\n","      <td>Sat</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>241</th>\n","      <td>22.67</td>\n","      <td>2.00</td>\n","      <td>Male</td>\n","      <td>Yes</td>\n","      <td>Sat</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>242</th>\n","      <td>17.82</td>\n","      <td>1.75</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sat</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>243</th>\n","      <td>18.78</td>\n","      <td>3.00</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Thur</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>244 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90160cd7-396a-461e-990f-32886e1f8205')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-6e477aab-4aa5-49e6-b659-e3a423da89e5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6e477aab-4aa5-49e6-b659-e3a423da89e5')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-6e477aab-4aa5-49e6-b659-e3a423da89e5 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-90160cd7-396a-461e-990f-32886e1f8205 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-90160cd7-396a-461e-990f-32886e1f8205');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["fig, ax = plt.subplots(1,2, figsize = (10,6))\n","sns.boxplot(x = 'time', y = 'tip', data = df, ax = ax[0])\n","ax[0].set_title('boxplot of tip by time')\n","sns.scatterplot(x = 'total_bill', y = 'tip', data = df, hue = 'time', ax = ax[1])\n","ax[1].set_title('tip & total by time')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"94Wei8DS8j2O","executionInfo":{"status":"ok","timestamp":1692115800616,"user_tz":-540,"elapsed":1226,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"161abb27-2371-4516-ff53-58a878071e4e"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'tip & total by time')"]},"metadata":{},"execution_count":51},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA0kAAAIjCAYAAADWYVDIAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAC8dUlEQVR4nOzdd3xT9f7H8VeStkn3pi1Q9kaGCKiIIooiAl73AAX3deMe1+teV68/FPcGFBA3ThxXBQfIUBFQZO/VRXebtsn5/XFom9CktKVtOt7Px6MP6fmenPPJaczJJ9/v9/O1GIZhICIiIiIiIgBYAx2AiIiIiIhIU6IkSURERERExIOSJBEREREREQ9KkkRERERERDwoSRIREREREfGgJElERERERMSDkiQREREREREPSpJEREREREQ8KEkSERERERHxoCRJDtn999+PxWIhIyMj0KH41alTJy6++OJAh+Fl/fr1nHzyyURHR2OxWJg3b16tj3HxxRfTqVOneotpxowZWCwWli9fXm/HrI0tW7ZgsViYMWNGQM4vIuJPU7yPNBU1fe/WPUaaEyVJItXYtWsX999/PytWrKj3Y0+ePJlVq1bxyCOP8NZbbzF48OBGjyFQ5syZw9NPPx3oMEREvCxatIj777+f7OzsRjvnzJkzOeywwwgLCyM1NZVJkyaxa9euGj++PmJ+4YUXWlTioHuM1IegQAcg0pTt2rWLBx54gE6dOjFw4MB6O25RURGLFy/m7rvv5rrrrqtzDK+++iput7ve4mosc+bMYfXq1dx4441e2zt27EhRURHBwcGBCUxEWrVFixbxwAMPcPHFFxMTE+PVtnbtWqzW+v1u+aOPPuLiiy9mxIgRXHfddaSlpfH++++zbt062rZte8gx19QLL7xAQkJCi+kp0z1G6oOSJJEASE9PB6jzDa1cS3ujt1gsOByOQIchIlKF3W6v92POnTuXuLg4vvzyy4r3vnvvvZeSkpJ6P5foHiO1o+F2Um8yMjI499xziYqKIj4+nilTplBcXOy1T1lZGQ899BBdu3bFbrfTqVMn/vWvf+F0OgEwDIORI0eSmJhIWlpaxeNKSkro168fXbt2paCgAKicC/X3338f9Ly+bNq0iXPOOYe4uDjCwsI46qij+PzzzyvaFyxYwJAhQwC45JJLsFgsNRrL/PvvvzNmzBiioqKIiIjgxBNP5Jdffqlov//+++nYsSMAt912GxaLxe+8ooPFcOCcpPLx1k8++SRPPfUUHTt2JDQ0lBEjRrB69eqDXpNyhYWF/POf/yQ+Pp6oqCgmTZrEvn37KtonT55MQkICpaWlVR578skn07NnT7/HPv744/n888/ZunVrxfMpfw6+xotffPHFREREsG3bNsaNG0dERATt2rXj+eefB2DVqlWccMIJhIeH07FjR+bMmVPlnNnZ2dx4442kpqZit9vp1q0bjz/+eLPshRORhnH//fdz2223AdC5c+eK96ctW7YAVecklc+v+eGHH6p9v6yO1WqlrKwMm83mtT0kJKReYj7YPbf8ef35558sXLiw4vHHH388AFlZWdx6663069ePiIgIoqKiGDNmDH/88UeN4vNH9xhpFgyRQ3TfffcZgNGvXz9j/PjxxnPPPWdceOGFBmBcdNFFXvtOnjzZAIyzzz7beP75541JkyYZgHH66adX7LNp0yYjIiLCOOOMMyq23XnnnYbFYjEWLlxYp/N27NjRmDx5csXve/bsMZKSkozIyEjj7rvvNqZOnWoMGDDAsFqtxocfflixz4MPPmgAxpVXXmm89dZbxltvvWVs3LjR77VYvXq1ER4ebqSkpBgPPfSQ8Z///Mfo3LmzYbfbjV9++cUwDMP4448/jKeeesoAjAsuuMB46623jI8++sjn8Q4Ww+TJk42OHTtW7L958+aKa9KpUyfj8ccfNx544AEjLi7OSExMNPbs2eM3dsMwjOnTp1c8/thjjzWeeeYZ49prrzWsVqtx3HHHGW632zAMw/jmm28MwPj000+9Hr97927DZrMZDz74oN9zfP3118bAgQONhISEiudT/vzL458+fXrF/pMnTzYcDofRp08f46qrrjKef/55Y9iwYRX7tW3b1rjtttuMZ5991ujbt69hs9mMTZs2VTy+oKDA6N+/vxEfH2/861//Ml566SVj0qRJhsViMaZMmVLt9RCR1uOPP/4wLrjgAgMwnnrqqYr3p/z8fMMwqt5Havp+WZ2vvvrKAIw777yzQWKuyT33o48+Mtq3b2/06tWr4vFff/21YRiGsWzZMqNr167GnXfeabz88svGgw8+aLRr186Ijo42du7cWXEMX+/dvugeI82JkiQ5ZOXJymmnnea1/ZprrjEA448//jAMwzBWrFhhAMbll1/utd+t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mpMkIiLSQtisFu4b34erZ/2GBbwKOJQnTveN79Ng6yXl5ORUSYD69OlDWFgY//rXv7jhhhtYsmQJM2bMqNVxHQ4Hd9xxB7fffjshISEcc8wxpKen8+eff3LZZZfV3xMQEdlPSZKIiEgLcsphKbx44aAq6yQlN8I6SQsWLODwww/32nbZZZcxa9YsbrvtNl599VVOPPFE7r//fq688spaHfuee+4hKCiIe++9l127dpGSksJVV11Vn+GLiFSwGAcOFG5hcnNziY6OJicnh6ioqECHIyLSauj917/qrk1xcTGbN2+mc+fOOBx1nzvkchss3ZxFWl4xbSLNIXYN1YPUktTX9ReRpqmm9yb1JImIiLRANqulyZX5FhFpLlS4QURERERExIOSJBEREREREQ9KkkRERERERDwoSRIREREREfGgJElERERERMSDkiQREREREREPSpJEREREREQ8KEkSERERERHxoCRJREREGo3FYmHevHmBDkNEpFpKkkRERFoitws2/wir3jf/63Y16OkuvvhiLBYLFouF4OBgkpKSOOmkk3jjjTdwu90V++3evZsxY8Y0aCwiIocqKNABiIiISD376xP48g7I3VW5LaotnPI49DmtwU57yimnMH36dFwuF3v37uXLL79kypQpvP/++3zyyScEBQWRnJzcYOevjdLSUoKDgwMdhog0UepJEhERaUn++gTeneSdIAHk7ja3//VJg53abreTnJxMu3btGDRoEP/617/4+OOPmT9/PjNmzAC8h9tt2bIFi8XChx9+yMiRIwkLC2PAgAEsXry44pgzZswgJiaGr776it69exMREcEpp5zC7t27vc792muv0bt3bxwOB7169eKFF16oaCs/zzvvvMOIESNwOBzMnj27wa6DiDR/SpJERERaCrfL7EHC8NG4f9uXdzb40DtPJ5xwAgMGDODDDz/0u8/dd9/NrbfeyooVK+jRowcXXHABZWVlFe2FhYU8+eSTvPXWW/zwww9s27aNW2+9taJ99uzZ3HvvvTzyyCOsWbOGRx99lHvuuYeZM2d6nefOO+9kypQprFmzhtGjR9f/kxWRFkPD7URERFqKrYuq9iB5MSB3p7lf52MbLaxevXqxcuVKv+233norY8eOBeCBBx6gb9++bNiwgV69egHm0LiXXnqJrl27AnDdddfx4IMPVjz+vvvu4//+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59Lfg7y8PACmT59Ov379/MrZbDa/1xERESdQe5GmJSEhAYCMjIyyLy1KX/fu3buealW7JkyYwLx581i8eDHJycll2xMSEiguLiYrK8vvm/KMjIyydjrVOBwOTjvtNAD69OnDihUrmDZtGtddd12TaYtVq1aRmZnJmWeeWbbN6/WyePFinn/+eT7//PMm0xaBxMTE0KlTJ7Zt28bFF19cb22hOUniJz4+ntzcXL/MO8e7nlHHjh0JCwvj66+/ruHaiVT2zTffsHbtWkaMGFErx2/ZsiVJSUns2LGD0047ze+nqsBMRAJr164dCQkJfs+InJwcli1bRv/+/euxZjXPMAwmTJjAnDlz+Oabbyr9zejTpw92u92vLTZv3kxaWtop1xbB+Hw+3G53k2qLiy66iLVr17JmzZqyn759+3LTTTeV/buptEUgeXl5bN++ncTExHq9L9ST1IRlZ2dXCoC6du1KeHg4Dz74IHfffTfLli1j5syZx3Vcp9PJfffdx5///GccDgcDBw5k//79rF+/nrFjx9bcBUiT43a72bdvH16vl4yMDBYsWMDjjz/OFVdcwahRo2rtvI888gh33303LpeLoUOH4na7WblyJYcPH+aee+6ptfOKNFZ5eXls27at7PXOnTtZs2YNcXFxtG7dmkmTJvHoo4/SsWNH2rVrx5QpU0hKSjrl1u8bP34877zzDnPnziUqKqpsDoXL5SIsLAyXy8XYsWO55557iIuLIzo6mrvuuov+/ftzzjnn1HPta94DDzzAsGHDaN26Nbm5ubzzzjssXLiQzz//vEm1RVRUVNm8tFIRERE0a9asbHtTaQsw5w1feeWVtGnThr179zJ16lRsNhs33HBDvd4XCpKasIULF3LGGWf4bRs7dixvvfUWf/rTn5g+fToXXXQRDz/8MOPGjTuuY0+ZMoWQkBAeeugh9u7dS2JiInfccUdNVl+aoAULFpCYmEhISAixsbH06tWL5557jtGjR2O11l7H+O9+9zvCw8N56qmn+NOf/kRERAQ9evTwW/hPRMqtXLmSCy+8sOx16ZcJo0ePZubMmfz5z38mPz+fcePGkZWVxbnnnsuCBQtOufkZL730EgCDBg3y2z5jxgzGjBkDwLPPPovVamXEiBG43W4uvfRSXnzxxTquad3IzMxk1KhRpKen43K56NmzJ59//jkXX3wx0LTa4liaUlvs3r2bG264gYMHDxIfH8+5557Ljz/+SHx8PFB/bWExjp6AIiIiIiIi0oRpTpKIiIiIiEgFCpJEREREREQqUJAkIiIiIiJSgYIkERERERGRChQkiYiIiIiIVKAgSUREREREpAIFSSIiIiIiIhUoSBIREREREalAQZJIPVm4cCEWi4WsrKz6roqIiEi1jBkzhuHDh1er7KBBg5g0aVKVZdq2bcu//vWvstcWi4WPP/4YgNTUVCwWC2vWrDmhuoqcDAVJInXk6IfFgAEDSE9Px+Vy1V+lRESk0atOMFIT76kNK1asYNy4cfVdDZFKQuq7AiJNlcPhICEhob6rISIiUm/i4+PruwoiAaknSaQOjBkzhkWLFjFt2jQsFgsWi4WZM2f6DbebOXMmMTExzJs3j86dOxMeHs7IkSMpKCjg9ddfp23btsTGxnL33Xfj9XrLju12u5k8eTKtWrUiIiKCfv36sXDhwvq5UBERqVOBni+pqaksWrSIs88+m9DQUBITE7n//vspKSmp8j1er5exY8fSrl07wsLC6Ny5M9OmTTup+pWUlDBhwgRcLhfNmzdnypQpGIZRtv/o4XYiDYV6kkTqwLRp09iyZQvdu3fnr3/9KwDr16+vVK6goIDnnnuOWbNmkZubyzXXXMPVV19NTEwMn332GTt27GDEiBEMHDiQ6667DoAJEyawYcMGZs2aRVJSEnPmzGHo0KGsXbuWjh071ul1iohI3Qr0fPF6vVx22WWMGTOGN954g02bNnH77bfjdDp5+OGHA74nPj4en89HcnIys2fPplmzZixZsoRx48aRmJjItddee0L1e/311xk7dizLly9n5cqVjBs3jtatW3P77bfXWBuI1AYFSSJ1wOVy4XA4CA8PLxtit2nTpkrlPB4PL730Eh06dABg5MiRvPnmm2RkZBAZGUnXrl258MIL+fbbb7nuuutIS0tjxowZpKWlkZSUBMDkyZNZsGABM2bM4LHHHqu7ixQRkToX6Pnyl7/8hZSUFJ5//nksFgtdunRh79693HfffTz00EMB3wNgs9l45JFHyl63a9eOpUuX8v77759wkJSSksKzzz6LxWKhc+fOrF27lmeffVZBkjR4CpJEGpDw8PCyAAmgZcuWtG3blsjISL9tmZmZAKxduxav10unTp38juN2u2nWrFndVFpERBqUjRs30r9/fywWS9m2gQMHkpeXx+7du2ndunXQ977wwgu89tprpKWlUVhYSHFxMb179z7hupxzzjl+9ejfvz/PPPMMXq8Xm812wscVqW0KkkQaELvd7vfaYrEE3Obz+QDIy8vDZrOxatWqSg+bioGViIjIscyaNYvJkyfzzDPP0L9/f6KionjqqadYtmxZfVdNpM4pSBKpIw6Hwy/hQk0444wz8Hq9ZGZmct5559XosUVEpHE4+vly+umn8+GHH2IYRlkvzg8//EBUVBTJyckB31NaZsCAAdx5551l27Zv335SdTs6wPrxxx/p2LGjepGkwVN2O5E60rZtW5YtW0ZqaioHDhwo6w06GZ06deKmm25i1KhRfPTRR+zcuZPly5fz+OOP8+mnn9ZArUVEpKE7+vly5513smvXLu666y42bdrE3LlzmTp1Kvfccw9WqzXge3w+Hx07dmTlypV8/vnnbNmyhSlTprBixYqTqltaWhr33HMPmzdv5t133+Xf//43EydOrInLFqlVCpJE6sjkyZOx2Wx07dqV+Ph40tLSauS4M2bMYNSoUdx777107tyZ4cOHs2LFiirHnIuIyKnj6OeLx+Phs88+Y/ny5fTq1Ys77riDsWPH8n//939B35OWlsbvf/97rrnmGq677jr69evHwYMH/XqVTsSoUaMoLCzk7LPPZvz48UycOFGLx0qjYDEqJqsXERERERFp4tSTJCIiIiIiUoGCJBERERE5LmlpaURGRgb9qakh5SL1RcPtREREROS4lJSUkJqaGnR/27ZtCQlREmVpvBQkiYiIiIiIVKDhdiIiIiIiIhUoSBIREREREalAQZKIiIiIiEgFCpJEREREREQqUJAkIiIiIiJSgYIkERERERGRChQkiYiIiIiIVPD/xAHJmCW0m1oAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"DdtVeh8G9AJv"},"execution_count":null,"outputs":[]}]}