{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOwAyQh9ilD0I2XpYQ1Y/Ur"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"gpoh-0ZfFlGa","executionInfo":{"status":"ok","timestamp":1672153224013,"user_tz":-540,"elapsed":469,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"outputs":[],"source":["from tensorflow.keras.layers import Input, Dense, concatenate\n","from tensorflow.keras.models import Model"]},{"cell_type":"code","source":["input_1 = Input(shape=(4,)) #입력층1 에 대한 신경망\n","\n","hidden_1 = Dense(8, activation = 'relu')(input_1)\n","hidden_2 = Dense(16, activation = 'relu')(hidden_1)\n","\n","output_1= Model(inputs = input_1, outputs = hidden_2)\n","\n","input_2 = Input(shape=(8,)) #입력층2 에 대한 신경망    \n","\n","hidden_3 = Dense(8, activation='relu')(input_2)\n","\n","output_2 = Model(inputs=input_2,  outputs=hidden_3)\n","\n","# 층 연결\n","result = concatenate([output_1.output, output_2.output])\n","\n","# 출력층 정의\n","output_ = Dense(10, activation='softmax')(result)\n","\n","# 최종 모델 구축\n","model = Model(inputs=[output_1.input, output_2.input],  outputs=output_)\n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PUcQKeKoGKjn","executionInfo":{"status":"ok","timestamp":1672153474852,"user_tz":-540,"elapsed":581,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"a2264978-9330-4828-f64c-0638c0216cf6"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_3\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_2 (InputLayer)           [(None, 4)]          0           []                               \n","                                                                                                  \n"," dense_2 (Dense)                (None, 8)            40          ['input_2[0][0]']                \n","                                                                                                  \n"," input_3 (InputLayer)           [(None, 8)]          0           []                               \n","                                                                                                  \n"," dense_3 (Dense)                (None, 16)           144         ['dense_2[0][0]']                \n","                                                                                                  \n"," dense_4 (Dense)                (None, 8)            72          ['input_3[0][0]']                \n","                                                                                                  \n"," concatenate (Concatenate)      (None, 24)           0           ['dense_3[0][0]',                \n","                                                                  'dense_4[0][0]']                \n","                                                                                                  \n"," dense_5 (Dense)                (None, 10)           250         ['concatenate[0][0]']            \n","                                                                                                  \n","==================================================================================================\n","Total params: 506\n","Trainable params: 506\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","source":["from tensorflow.keras.utils import plot_model"],"metadata":{"id":"buG8JV3tGt7s","executionInfo":{"status":"ok","timestamp":1672156625028,"user_tz":-540,"elapsed":2,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["plot_model(seq_model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":174},"id":"PrmKhbTZTQ5C","executionInfo":{"status":"error","timestamp":1672156634917,"user_tz":-540,"elapsed":7,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"ec42c68b-0f28-467d-c346-f463eda689f4"},"execution_count":9,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-2b49b1f4c65a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mplot_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mseq_model\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'seq_model' is not defined"]}]},{"cell_type":"code","source":[],"metadata":{"id":"oFPKzkH1TVhi"},"execution_count":null,"outputs":[]}]}