<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- bean definitions here -->
	<bean class="com.ssafy.aop.Programmer" id="programmer"></bean>
	<bean class="com.ssafy.aop.MyAspect" id="myaspect"></bean>

	<!-- <aop:config>
		<aop:pointcut expression="execution(* *(..))" id="mypt" />
		참조할 클래스 지정
		<aop:aspect ref="myaspect">
			메서드 명을 작성
			<aop:before method="before" pointcut-ref="mypt" />
			<aop:after-returning method="afterReturning"
				pointcut-ref="mypt" returning="line" />
			<aop:after-throwing method="afterThrowing"
				pointcut-ref="mypt" throwing="th" />
			<aop:after method="after" pointcut-ref="mypt" />
		</aop:aspect>
	</aop:config> -->
	<aop:config>
		<aop:pointcut expression="execution(* *(..))" id="mypt" />
		<!-- 참조할 클래스 지정 -->
		<aop:aspect ref="myaspect">
			<!-- 메서드 명을 작성 -->
			<aop:around method="around" pointcut-ref="mypt" />
		</aop:aspect>
	</aop:config>

</beans>