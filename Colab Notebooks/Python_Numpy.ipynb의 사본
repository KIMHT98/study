{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Python_Numpy.ipynb의 사본","provenance":[{"file_id":"1-3TCaHOcLm69hHbnrMQ2HY3oYh5GWsTs","timestamp":1660786379377}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["산업수학 기반 데이터 분석 프로그램\n","\n","김병천 (wizardbc@gmail.com)<br>\n","인하대학교 응용수학연구소 / 스마트소셜 AI 연구소\n","\n","2022년 8월 17일 (수)<br>\n","더케이호텔 서울, 금강A홀\n","\n","# Python Quickstart\n","\n","Tutorial from [programiz.com](https://www.programiz.com/python-programming/tutorial)"],"metadata":{"id":"NCGUvvYvU2Qd"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"vdWPv5QJUfdR"},"outputs":[],"source":["print(\"Hello, World!\")"]},{"cell_type":"markdown","source":["## Variables and Literals\n","\n","* `=` means assign.\n","\n","`a=5` means assign the numeric literal `5` to the variable `a`.\n","\n","`a=\"Five\"` means assign the string literal `\"Five\"` to the variable `a`."],"metadata":{"id":"2DdbxaP0WTAU"}},{"cell_type":"code","source":["a = 5\n","print(\"a =\", a)\n","a = \"Five\"\n","print(\"a =\", a)"],"metadata":{"id":"OAR5cXNXVpZq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Operators"],"metadata":{"id":"U_JGvQT1Wqjl"}},{"cell_type":"code","source":["x = 14\n","y = 4\n","\n","# Add two operands\n","print('x + y =', x+y) # Output: x + y = 18\n","\n","# Subtract right operand from the left\n","print('x - y =', x-y) # Output: x - y = 10\n","\n","# Multiply two operands\n","print('x * y =', x*y) # Output: x * y = 56\n","\n","# Divide left operand by the right one \n","print('x / y =', x/y) # Output: x / y = 3.5\n","\n","# Floor division (quotient)\n","print('x // y =', x//y) # Output: x // y = 3\n","\n","# Remainder of the division of left operand by the right\n","print('x % y =', x%y) # Output: x % y = 2\n","\n","# Left operand raised to the power of right (x^y)\n","print('x ** y =', x**y) # Output: x ** y = 38416"],"metadata":{"id":"oxTsyryQWoje"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x = 5\n","\n","# x += 5 ----> x = x + 5\n","x +=5\n","print(x) # Output: 10\n","\n","# x /= 5 ----> x = x / 5\n","x /= 5\n","print(x) # Output: 2.0"],"metadata":{"id":"EEfaYexQXd5C"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Type Conversion"],"metadata":{"id":"r7CBPWvmXuwE"}},{"cell_type":"markdown","source":["### implicit Type Conversion"],"metadata":{"id":"9auZctMMYD2M"}},{"cell_type":"code","source":["num_int = 123  # integer type\n","num_flo = 1.23 # float type\n","\n","num_new = num_int + num_flo\n","\n","print(\"Value of num_new:\",num_new)\n","print(\"datatype of num_new:\",type(num_new))"],"metadata":{"id":"qoqc3iu-XpJI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["num_int = 123     # int type\n","num_str = \"456\"   # str type\n","\n","print(num_int+num_str)"],"metadata":{"id":"bm7F3dMoX0oX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Explicit Type Conversion"],"metadata":{"id":"YYQwLa5iX5iV"}},{"cell_type":"code","source":["num_int = 123  # int type\n","num_str = \"456\" # str type\n","\n","# explicitly converted to int type\n","num_str = int(num_str) \n","\n","print(num_int+num_str)"],"metadata":{"id":"CW9-8UI0X3Tj"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Numeric Types"],"metadata":{"id":"Lt1CGI4tYHhf"}},{"cell_type":"code","source":["# Output: <class 'int'>\n","print(type(5))\n","\n","# Output: <class 'float'>\n","print(type(5.0))\n","\n","c = 5 + 3j\n","\n","# Output: <class 'complex'>\n","print(type(c))"],"metadata":{"id":"20w3PPBmX9Kk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Boolean Types"],"metadata":{"id":"UsBakH5-gBgk"}},{"cell_type":"code","source":["print(type(True))\n","\n","print(True and True)  # True\n","print(False and True) # False\n","\n","print(True or False)  # True"],"metadata":{"id":"pL4gXyl7gGZa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Data Structures"],"metadata":{"id":"Q5lkirObYUb3"}},{"cell_type":"markdown","source":["### Lists"],"metadata":{"id":"U29OooflYYEd"}},{"cell_type":"code","source":["# empty list\n","my_list = []\n","my_list = list()\n","\n","# list of integers\n","my_list = [1, 2, 3]\n","\n","# list with mixed data types\n","my_list = [1, \"Hello\", 3.4]"],"metadata":{"id":"eS8EyV42YJX7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["language = [\"French\", \"German\", \"English\", \"Polish\"]\n","\n","# Accessing first element\n","print(language[0])\n","\n","# Accessing fourth element\n","print(language[3])\n","\n","# Accessing fourth element\n","print(language[-1])\n","\n","# Get sub list (slice)\n","print(language[1:3])"],"metadata":{"id":"Qmi8mQ-nYelt"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* `[m:n]` means $m\\leq i< n$."],"metadata":{"id":"wJAUvm3aY-hD"}},{"cell_type":"code","source":["language[1:3] = ['Korean']\n","print(language)"],"metadata":{"id":"bsYLsoQHaCmb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Tuples\n","\n","Basically, lists are mutable whereas tuples are immutable."],"metadata":{"id":"S8T5ETDYZOY3"}},{"cell_type":"code","source":["language = (\"French\", \"German\", \"English\", \"Polish\")\n","print(language)\n","\n","print(language[1]) #Output: German\n","print(language[3]) #Output: Polish\n","print(language[-1]) # Output: Polish"],"metadata":{"id":"SAHbLVWsYpSt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# TypeError: 'tuple' object does not support item assignment\n","language[1:3] = ['Korean']"],"metadata":{"id":"jnwfd3CJZskB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Strings"],"metadata":{"id":"eqt3tZFXaeTC"}},{"cell_type":"code","source":["# all of the following are equivalent\n","my_string = 'Hello'\n","print(my_string)\n","\n","my_string = \"Hello\"\n","print(my_string)\n","\n","my_string = '''Hello'''\n","print(my_string)\n","\n","# triple quotes string can extend multiple lines\n","my_string = \"\"\"Hello, welcome to\n","           the world of Python\"\"\"\n","print(my_string)"],"metadata":{"id":"Q2QEBXpSaR0y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["str = 'Mathematics'\n","print('str = ', str)\n","\n","print('str[0] = ', str[0]) # Output: M\n","\n","print('str[-1] = ', str[-1]) # Output: s\n","\n","# slicing 2nd to 5th character\n","print('str[1:5] = ', str[1:5]) # Output: athe\n","\n","# slicing 6th to 2nd last character\n","print('str[5:-2] = ', str[5:-2]) # Output: mati"],"metadata":{"id":"fDi2OjRuaieG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["str1 = 'Hello '\n","str2 ='World!'\n","\n","# Output: Hello World!\n","print(str1 + str2)\n","\n","# Hello Hello Hello\n","print(str1 * 3)"],"metadata":{"id":"ZiEx9PxDaupK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Sets"],"metadata":{"id":"vhJp_Nq1bQLK"}},{"cell_type":"code","source":["# set of integers\n","my_set = {1, 2, 3}\n","print(my_set)\n","\n","# set of mixed datatypes\n","my_set = {1.0, \"Hello\", (1, 2, 3)}\n","print(my_set)"],"metadata":{"id":"lHTCMGDaax7E"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# set of integers\n","my_set = {1, 2, 3}\n","\n","my_set.add(4)\n","print(my_set) # Output: {1, 2, 3, 4}\n","\n","my_set.add(2)\n","print(my_set) # Output: {1, 2, 3, 4}\n","\n","my_set.update([3, 4, 5])\n","print(my_set) # Output: {1, 2, 3, 4, 5}\n","\n","my_set.remove(4)\n","print(my_set) # Output: {1, 2, 3, 5}"],"metadata":{"id":"L515jh_BbmoS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["A = {1, 2, 3}\n","B = {2, 3, 4, 5}\n","\n","# Equivalent to A.union(B) \n","# Also equivalent to B.union(A)\n","print(A | B) # Output: {1, 2, 3, 4, 5}\n","\n","# Equivalent to A.intersection(B)\n","# Also equivalent to B.intersection(A)\n","print (A & B) # Output: {2, 3}\n","\n","# Set Difference\n","print (A - B) # Output: {1}\n","\n","# Set Symmetric Difference\n","print(A ^ B)  # Output: {1, 4, 5}"],"metadata":{"id":"be-Gl6Ncbn-r"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Dictionaries"],"metadata":{"id":"WyZERxjRbq2t"}},{"cell_type":"code","source":["# empty dictionary\n","my_dict = {}\n","\n","# dictionary with integer keys\n","my_dict = {1: 'apple', 2: 'ball'}\n","\n","# dictionary with mixed keys\n","my_dict = {'name': 'John', 1: [2, 4, 3]}"],"metadata":{"id":"KW4tP3BKbpod"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["person = {'name':'Jack', 'age': 26, 'salary': 4534.2}\n","print(person['age']) # Output: 26"],"metadata":{"id":"KqYTqrCXbwZR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["person = {'name':'Jack', 'age': 26}\n","\n","# Changing age to 36\n","person['age'] = 36 \n","print(person) # Output: {'name': 'Jack', 'age': 36}\n","\n","# Adding salary key, value pair\n","person['salary'] = 4342.4\n","print(person) # Output: {'name': 'Jack', 'age': 36, 'salary': 4342.4}\n","\n","\n","# Deleting age\n","del person['age']\n","print(person) # Output: {'name': 'Jack', 'salary': 4342.4}\n","\n","# Deleting entire dictionary\n","del person"],"metadata":{"id":"P912qmXDbxrD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Python `range()`"],"metadata":{"id":"GLW2DQh4b2d7"}},{"cell_type":"code","source":["print(range(1, 10)) # Output: range(1, 10)\n"],"metadata":{"id":"HdjLSUQ0bzhi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["numbers = range(1, 6)\n","\n","print(list(numbers)) # Output: [1, 2, 3, 4, 5]\n","print(tuple(numbers)) # Output: (1, 2, 3, 4, 5)\n","print(set(numbers)) # Output: {1, 2, 3, 4, 5}"],"metadata":{"id":"1EIgC0IKb6Po"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Equivalent to: numbers = range(1, 6)\n","numbers1 = range(1, 6 , 1)\n","print(list(numbers1)) # Output: [1, 2, 3, 4, 5]\n","\n","numbers2 = range(1, 6, 2)\n","print(list(numbers2)) # Output: [1, 3, 5]\n","\n","numbers3 = range(5, 0, -1)\n","print(list(numbers3)) # Output: [5, 4, 3, 2, 1]"],"metadata":{"id":"QABRWBHVb85n"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Control Flow"],"metadata":{"id":"4IdzqkjzcMFm"}},{"cell_type":"markdown","source":["### if...else Statement"],"metadata":{"id":"0dUbG6alca5s"}},{"cell_type":"code","source":["num = -1\n","\n","if num > 0:\n","  print(\"Positive number\")\n","elif num == 0:\n","  print(\"Zero\")\n","else:\n","  print(\"Negative number\")\n","    \n","# Output: Negative number"],"metadata":{"id":"mEKBZ8wHcHnB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["if False:\n","  print(\"I am inside the body of if.\")\n","  print(\"I am also inside the body of if.\")\n","print(\"I am outside the body of if\")\n","\n","# Output: I am outside the body of if."],"metadata":{"id":"LgHfgOLicgLb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* Indentation is important!"],"metadata":{"id":"yehKqgb7dAgf"}},{"cell_type":"markdown","source":["### while Loop"],"metadata":{"id":"wBbQmpY9dHCl"}},{"cell_type":"code","source":["n = 100\n","\n","# initialize sum and counter\n","sum = 0\n","i = 1\n","\n","while i <= n:\n","  sum = sum + i\n","  i = i+1    # update counter\n","\n","print(\"The sum is\", sum)\n","\n","# Output: The sum is 5050"],"metadata":{"id":"sN1AJLjbdAC6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### for Loop"],"metadata":{"id":"HcrF67epdNUA"}},{"cell_type":"code","source":["numbers = [6, 5, 3, 8, 4, 2]\n","\n","sum = 0\n","\n","# iterate over the list\n","for val in numbers:\n","  sum = sum+val\n","\n","print(\"The sum is\", sum) # Output: The sum is 28"],"metadata":{"id":"U3UOiVIxdABq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### break Statement"],"metadata":{"id":"bqboyWO0daMg"}},{"cell_type":"code","source":["for val in \"Mathematics\":\n","    if val == \"e\":\n","        break\n","    print(val)\n","else:\n","  print(\"The end\")"],"metadata":{"id":"OsR_0Yuucj0A"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### continue Statement"],"metadata":{"id":"z8NbXjRReO6n"}},{"cell_type":"code","source":["for val in \"Mathematics\":\n","    if val == \"e\":\n","        continue\n","    print(val)\n","else:\n","  print(\"The end\")"],"metadata":{"id":"ZuTjGQiIdcxt"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### pass Statement"],"metadata":{"id":"NcIK1qTJeUVY"}},{"cell_type":"code","source":["for val in \"Mathematics\":\n","  pass\n","else:\n","  print(\"The end\")"],"metadata":{"id":"LxYJoq6_dkS6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# IndentationError: expected an indented block\n","for val in \"Mathematics\":\n","else:\n","  print(\"The end\")"],"metadata":{"id":"kv4LgNkieW3C"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Function"],"metadata":{"id":"A34IvsTUeusk"}},{"cell_type":"code","source":["def print_lines():\n","  print(\"I am line1.\")\n","  print(\"I am line2.\")\n","\n","# function call\n","print_lines()"],"metadata":{"id":"A3eF1arZeuR4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def add_numbers(a, b):\n","  sum = a + b\n","  return sum\n","\n","result = add_numbers(4, 5)\n","print(result)\n","# Output: 9"],"metadata":{"id":"bWyTlIgoerbK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Decorator\n","* A function that returns a (modified) function."],"metadata":{"id":"RHm9_6EwfC-V"}},{"cell_type":"code","source":["def one_more(ftn):\n","  def wrapper(a, b):\n","    return ftn(a,b)+1\n","  return wrapper\n","\n","one_more(add_numbers)(4, 5)"],"metadata":{"id":"0s61LNCKe60w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["@one_more\n","def add_numbers_one_more(a, b):\n","  sum = a + b\n","  return sum\n","\n","add_numbers_one_more(4,5)"],"metadata":{"id":"aoVpdLM5gxRM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def more(n):\n","  def outer(ftn):\n","    def inner(a,b):\n","      return ftn(a,b)+n\n","    return inner\n","  return outer\n","\n","more(10)(add_numbers)(4,5)"],"metadata":{"id":"bRDGNw10heF5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["@more(10)\n","def add_numbers_ten_more(a,b):\n","  sum = a + b\n","  return sum\n","\n","add_numbers_ten_more(4,5)"],"metadata":{"id":"9Ynu8UW7hzgC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Lambda Function"],"metadata":{"id":"k5qalta5hCQI"}},{"cell_type":"code","source":["square = lambda x: x ** 2\n","print(square(5))\n","\n","# Output: 25"],"metadata":{"id":"_p8bv0BOg8DP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["numbers = [6, 5, 3, 8, 4, 2]\n","numbers2 = map(lambda x: x ** 2, numbers)\n","print(list(numbers2))"],"metadata":{"id":"SHYIu2aghFqv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["numbers_lt_5 = filter(lambda x: x<5, numbers)\n","print(list(numbers_lt_5))"],"metadata":{"id":"b9HVwfdIiko4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Generators"],"metadata":{"id":"CiQZkBVRjfUv"}},{"cell_type":"code","source":["# A simple generator function\n","def my_gen():\n","    n = 1\n","    print('This is printed first')\n","    # Generator function contains yield statements\n","    yield n\n","\n","    n += 1\n","    print('This is printed second')\n","    yield n\n","\n","    n += 1\n","    print('This is printed at last')\n","    yield n\n","\n","# It returns an object but does not start execution immediately.\n","a = my_gen()\n","\n","# We can iterate through the items using next().\n","print(next(a))  # 1\n","\n","# Once the function yields, the function is paused and the control is transferred to the caller.\n","# Local variables and theirs states are remembered between successive calls.\n","print(next(a)) # 2\n","\n","print(next(a)) # 3\n","\n","# Finally, when the function terminates, StopIteration is raised automatically on further calls.\n","print(next(a))"],"metadata":{"id":"b8BDs_QOiuN1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Using for loop\n","for item in my_gen():\n","    print(item)"],"metadata":{"id":"xvGrTFvIkdrT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Comprehension"],"metadata":{"id":"T2UmTHjqkndm"}},{"cell_type":"code","source":["# list comprehension\n","numbers = [6, 5, 3, 8, 4, 2]\n","print([x**2 for x in numbers])"],"metadata":{"id":"l78L0guakx2z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# generator expression\n","numbers = [6, 5, 3, 8, 4, 2]\n","print((x**2 for x in numbers))"],"metadata":{"id":"2kGNwAfSk5_0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in (x**2 for x in numbers):\n","  print(i)"],"metadata":{"id":"1TcTIZZAlB9T"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Class"],"metadata":{"id":"ZxnfdDlSlo3B"}},{"cell_type":"code","source":["class MyClass():\n","  def __init__(self, a):\n","    self.a = a\n","  def add(self, b):\n","    self.a = self.a + b\n","    return self\n","\n","\n","obj1 = MyClass(10)\n","print(obj1.a)       # 10\n","obj1.add(3)\n","print(obj1.a)       # 13\n","\n","obj2 = MyClass(15)\n","print(obj2.a)       # 15"],"metadata":{"id":"JSpMtBPYlIRf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class MyClass2(MyClass):\n","  def mul(self, b):\n","    self.a = self.a * b\n","    return self\n","\n","obj3 = MyClass2(10)\n","print(obj3.a)       # 10\n","obj3.mul(3).add(5)\n","print(obj3.a)       # 35"],"metadata":{"id":"ZqGZcPqIl_gx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Annotation"],"metadata":{"id":"cxen_pmtnm1g"}},{"cell_type":"code","source":["class MyClass():\n","  a: float\n","  def __init__(self, a:float):\n","    self.a = a\n","  def add(self, b:float):\n","    self.a += b\n","    return self"],"metadata":{"id":"-qHzJM_lnVqt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["obj = MyClass(3.0)\n","print(obj.a)\n","obj.add(2.0).add(3.0)\n","print(obj.a)"],"metadata":{"id":"EA55i6ignzAn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* Annotation is NOT static typing."],"metadata":{"id":"uPZ_YKako7Rl"}},{"cell_type":"code","source":["obj = MyClass(3)\n","print(obj.a)\n","obj.add(2).add(3)\n","print(obj.a)"],"metadata":{"id":"Y3qLVk4rn0QC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Data Class\n","\n","[Python Documentation](https://docs.python.org/3/library/dataclasses.html)"],"metadata":{"id":"h10u8q8ppCL1"}},{"cell_type":"code","source":["from dataclasses import dataclass\n","\n","@dataclass\n","class InventoryItem:\n","  \"\"\"Class for keeping track of an item in inventory.\"\"\"\n","  name: str\n","  unit_price: float\n","  quantity_on_hand: int = 0\n","\n","  # We DO NOT need to define __init__().\n","  # def __init__(self, name: str, unit_price: float, quantity_on_hand: int = 0):\n","  #   self.name = name\n","  #   self.unit_price = unit_price\n","  #   self.quantity_on_hand = quantity_on_hand\n","\n","  def total_cost(self) -> float:\n","    return self.unit_price * self.quantity_on_hand"],"metadata":{"id":"Ac58kbrXn5mP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["item1 = InventoryItem('Apple', 300, 5)\n","print(item1.total_cost())"],"metadata":{"id":"PpoR0U_NpTg6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Numpy Quickstart\n","\n","[Numpy User Guide](https://numpy.org/doc/stable/user/absolute_beginners.html)"],"metadata":{"id":"qomNjMi2qZrN"}},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"Us0fNKHrpma3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Shape of an array\n","\n","`ndarray.ndim` will tell you the number of axes, or dimensions, of the array.\n","\n","`ndarray.size` will tell you the total number of elements of the array. This is the product of the elements of the array’s shape.\n","\n","`ndarray.shape` will display a tuple of integers that indicate the number of elements stored along each dimension of the array. If, for example, you have a 2-D array with 2 rows and 3 columns, the shape of your array is (2, 3).\n","\n"],"metadata":{"id":"xkXN5Qx0vWR7"}},{"cell_type":"code","source":["array_example = np.array([[[0, 1, 2, 3],\n","                           [4, 5, 6, 7]],\n","\n","                          [[0, 1, 2, 3],\n","                           [4, 5, 6, 7]],\n","\n","                          [[0 ,1 ,2, 3],\n","                           [4, 5, 6, 7]]])\n","\n","array_example"],"metadata":{"id":"xUtQZ_JNrJGx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["array_example.ndim"],"metadata":{"id":"k1bYjE3ZuOGO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["array_example.size"],"metadata":{"id":"rjy1yoE5uOAX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["array_example.shape"],"metadata":{"id":"ejrdgwP-uV1Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["array_example.reshape((3,8))"],"metadata":{"id":"24alvHv7wDE4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["array_example.reshape((6,4))"],"metadata":{"id":"-0IRiT2PwNb3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Indexing and Slicing"],"metadata":{"id":"Sx-atgVCwo50"}},{"cell_type":"code","source":["array_example = np.array([[[0, 1, 2, 3],\n","                           [4, 5, 6, 7]],\n","\n","                          [[0, 1, 2, 3],\n","                           [4, 5, 6, 7]],\n","\n","                          [[0 ,1 ,2, 3],\n","                           [4, 5, 6, 7]]])\n","\n","array_example"],"metadata":{"id":"oZggkGIAr3qi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["array_example[1]"],"metadata":{"id":"yZn89n-1wr_U"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["array_example[1,0,0]"],"metadata":{"id":"FkY-2KDowtex"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["array_example[1,:,1:3]"],"metadata":{"id":"qja7BS1Iwwj5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Basic Array Operations\n","\n","* Element-wise operations"],"metadata":{"id":"qJLAhnifxMP9"}},{"cell_type":"code","source":["data = np.array([1, 2])\n","ones = np.ones(2, dtype=int)\n","data, ones"],"metadata":{"id":"IHc4ySRXxYES"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data + ones"],"metadata":{"id":"k764mQP9w5zU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data - ones"],"metadata":{"id":"Es2964YdxR4Q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data * data"],"metadata":{"id":"fa9PBmFWxWa-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data / data"],"metadata":{"id":"Fw47SkjFxfM6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data ** 2"],"metadata":{"id":"zMxY73r_4qj_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a = np.array([1, 2, 3, 4])\n","a.sum()"],"metadata":{"id":"1AvRtePFxgJh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["b = np.array([[1, 1], [2, 2]])\n","b"],"metadata":{"id":"89qv2OrCxoYp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["b.sum(axis=0)"],"metadata":{"id":"FxH6usWHxq7v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["b.sum(axis=1)"],"metadata":{"id":"VSnSXp-VxsW8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["b.max()"],"metadata":{"id":"RWnVDnpk3Q1H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a = np.array([[0.45053314, 0.17296777, 0.34376245, 0.5510652],\n","              [0.54627315, 0.05093587, 0.40067661, 0.55645993],\n","              [0.12697628, 0.82485143, 0.26590556, 0.56917101]])\n","a"],"metadata":{"id":"PxJzwTkd3SXF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a.min(), a.max(), a.sum(), a.mean()"],"metadata":{"id":"Oi1vMrz03YSn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a.shape"],"metadata":{"id":"kqkdFQC93gyn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a.min(axis=0)"],"metadata":{"id":"-F3fjs2d3b0W"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Broadcasting"],"metadata":{"id":"kDC9LLVnyCXL"}},{"cell_type":"code","source":["array_example = np.array([[[0, 1, 2, 3],\n","                           [4, 5, 6, 7]],\n","\n","                          [[0, 1, 2, 3],\n","                           [4, 5, 6, 7]],\n","\n","                          [[0 ,1 ,2, 3],\n","                           [4, 5, 6, 7]]])\n","\n","array_example"],"metadata":{"id":"z780sQ8GxuNY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786636757,"user_tz":-540,"elapsed":354,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"5913cec7-fc02-4338-c916-f19830304614"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[0, 1, 2, 3],\n","        [4, 5, 6, 7]],\n","\n","       [[0, 1, 2, 3],\n","        [4, 5, 6, 7]],\n","\n","       [[0, 1, 2, 3],\n","        [4, 5, 6, 7]]])"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["Multiply scalar."],"metadata":{"id":"OaGsQJeL049M"}},{"cell_type":"code","source":["array_example * 3"],"metadata":{"id":"-cnK-rJgyL2Z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786638726,"user_tz":-540,"elapsed":354,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"61020e69-9829-4335-cfee-a82fa8dec346"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[ 0,  3,  6,  9],\n","        [12, 15, 18, 21]],\n","\n","       [[ 0,  3,  6,  9],\n","        [12, 15, 18, 21]],\n","\n","       [[ 0,  3,  6,  9],\n","        [12, 15, 18, 21]]])"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["Consider $\\mathbb R^{3\\times 2\\times 4}$ as $((\\mathbb R^4)^2)^3$-vector space.\n","\n","An element of $\\mathbb R^4$ is a scalar in $(\\mathbb R^4)^2$ and $((\\mathbb R^4)^2)^3$."],"metadata":{"id":"WcIvJxEqyo4g"}},{"cell_type":"code","source":["array_example.shape"],"metadata":{"id":"Zd-htNQMyN3K","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786645198,"user_tz":-540,"elapsed":360,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"60abe391-696b-4e3c-8306-fe3c01da7fc6"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 2, 4)"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["array_example * np.array([0,1,2,3])"],"metadata":{"id":"JruhM6p2ySbE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786652841,"user_tz":-540,"elapsed":369,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"5933bf72-7683-4c59-cb5f-1760d8ca2662"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[ 0,  1,  4,  9],\n","        [ 0,  5, 12, 21]],\n","\n","       [[ 0,  1,  4,  9],\n","        [ 0,  5, 12, 21]],\n","\n","       [[ 0,  1,  4,  9],\n","        [ 0,  5, 12, 21]]])"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["An element of $(\\mathbb R^4)^2=\\mathbb R^{2\\times 4}$ is a scalar in $((\\mathbb R^4)^2)^3=\\mathbb R^{3\\times 2\\times 4}$."],"metadata":{"id":"HdqpJS3bzsfa"}},{"cell_type":"code","source":["array_example * np.array([[0,1,2,3], [4,5,6,7]])"],"metadata":{"id":"rV9oBFKAzmcz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786672479,"user_tz":-540,"elapsed":340,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"81af350d-b26a-49d7-845c-707667dfc078"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[ 0,  1,  4,  9],\n","        [16, 25, 36, 49]],\n","\n","       [[ 0,  1,  4,  9],\n","        [16, 25, 36, 49]],\n","\n","       [[ 0,  1,  4,  9],\n","        [16, 25, 36, 49]]])"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["We can re-order the powers, so $\\mathbb R^{3\\times 2\\times 4}$ can be considered as $((\\mathbb R^{2})^3)^4$.\n","\n","So an element of $\\mathbb R^2=\\mathbb R^{1\\times 2\\times 1}$ is a scalar in $\\mathbb R^{3\\times 2\\times 4}$."],"metadata":{"id":"w9a1qo_P1h6b"}},{"cell_type":"code","source":["np.array([[[0],[1]]])"],"metadata":{"id":"ylOwm7kb2ejG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786683774,"user_tz":-540,"elapsed":374,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"0ff71bdf-c73a-4216-c0eb-085fe3530967"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[0],\n","        [1]]])"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["np.array([[[0],[1]]]).shape"],"metadata":{"id":"rh1tpcaY2hy5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786688180,"user_tz":-540,"elapsed":351,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"7c83b5be-c3ea-4499-f944-d52167c1ec8f"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 2, 1)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["array_example * np.array([[[0],[1]]])"],"metadata":{"id":"WqKI-i3lyWbI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786709021,"user_tz":-540,"elapsed":338,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"11f23c0b-eca2-4c49-b2a2-66b265a6ca7e"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[0, 0, 0, 0],\n","        [4, 5, 6, 7]],\n","\n","       [[0, 0, 0, 0],\n","        [4, 5, 6, 7]],\n","\n","       [[0, 0, 0, 0],\n","        [4, 5, 6, 7]]])"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["np.array([0,1])[np.newaxis,:,np.newaxis]"],"metadata":{"id":"Ony_IpVF2TcM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786718572,"user_tz":-540,"elapsed":349,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"e96f73c6-672e-4038-b3e5-23209d16f514"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[0],\n","        [1]]])"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["We can re-order the powers, so $\\mathbb R^{3\\times 2\\times 4}$ can be considered as $((\\mathbb R^3)^2)^4$.\n","\n","So an element of $\\mathbb R^3=\\mathbb R^{3\\times 1\\times 1}$ is a scalar in $\\mathbb R^{3\\times 2\\times 4}$."],"metadata":{"id":"L1_CfKx22n_G"}},{"cell_type":"code","source":["array_example * np.array([0,1,0])[:,np.newaxis,np.newaxis]"],"metadata":{"id":"ojTh0eF62aI2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786728279,"user_tz":-540,"elapsed":377,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"a5e8d722-6c11-4f5e-d0f9-5fde249d9a44"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[0, 0, 0, 0],\n","        [0, 0, 0, 0]],\n","\n","       [[0, 1, 2, 3],\n","        [4, 5, 6, 7]],\n","\n","       [[0, 0, 0, 0],\n","        [0, 0, 0, 0]]])"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["array_example + np.array([0,1,2])[:,np.newaxis,np.newaxis]"],"metadata":{"id":"AJKKZFEp22qD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Linear Algebra"],"metadata":{"id":"J4B0nibn4dXP"}},{"cell_type":"markdown","source":["## Matrix Product"],"metadata":{"id":"yw7V07_BN8FU"}},{"cell_type":"code","source":["A = np.random.rand(3,4)\n","B = np.random.rand(4,5)\n","\n","np.matmul(A,B)"],"metadata":{"id":"GEPfTxb9Jjta","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786780957,"user_tz":-540,"elapsed":394,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"3ab2ab78-345c-419d-9493-6a8c891b29de"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1.2980731 , 1.40932844, 1.41384715, 0.97355318, 1.45400334],\n","       [0.85152096, 1.07137916, 1.38595128, 0.74167991, 1.20396626],\n","       [0.85889042, 0.93351391, 0.68459239, 0.57931846, 0.90312676]])"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["A@B"],"metadata":{"id":"B6yG_Dz2L_xh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786785357,"user_tz":-540,"elapsed":390,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"99d4d397-5a68-4f26-b960-8f666f06e581"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1.2980731 , 1.40932844, 1.41384715, 0.97355318, 1.45400334],\n","       [0.85152096, 1.07137916, 1.38595128, 0.74167991, 1.20396626],\n","       [0.85889042, 0.93351391, 0.68459239, 0.57931846, 0.90312676]])"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["For batched input"],"metadata":{"id":"aSjQvXzEMue8"}},{"cell_type":"code","source":["x = np.random.rand(128,3,4)\n","W = np.random.rand(4,5)"],"metadata":{"id":"ZSY51f5aMaFJ","executionInfo":{"status":"ok","timestamp":1660786794485,"user_tz":-540,"elapsed":386,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["np.matmul(x,W).shape"],"metadata":{"id":"pQ-Diuj2M3RI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786800232,"user_tz":-540,"elapsed":392,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"21bca994-940e-487f-ed84-62d3c677230c"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(128, 3, 5)"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["## Einstein Summation Convention\n","\n","### The outer product\n","\n","[wiki/Outer_product](https://en.wikipedia.org/wiki/Outer_product)\n","\n","Given two tensors $\\mathbb u, \\mathbb v$ with dimensions $(k_1,\\ldots,k_m)$ and $(l_1,\\ldots,l_n)$, their outer product $\\mathbb u\\otimes\\mathbb v$ is a tensor with dimensions $(k_1,\\ldots,k_m,l_1,\\ldots,l_n)$ and entries $$(\\mathbb u\\otimes\\mathbb v)_{i_1,\\ldots,i_m,j_1,\\ldots,j_n} = u_{i_1,\\ldots,i_m} v_{j_1,\\ldots,j_n}.$$"],"metadata":{"id":"UH5mFleFN8-2"}},{"cell_type":"markdown","source":["* $\\mathbb a\\in\\mathbb R^3, \\mathbb b\\in\\mathbb R^3, (\\mathbb a\\otimes\\mathbb b)\\in\\mathbb R^{3\\times 3}$\n","* $(\\mathbb a\\otimes\\mathbb b)_{i,j} = a_ib_j$"],"metadata":{"id":"4krmav5iF1zA"}},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"owsMFA9NIosD","executionInfo":{"status":"ok","timestamp":1660786474742,"user_tz":-540,"elapsed":392,"user":{"displayName":"김현태","userId":"03086644637186436559"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["a = np.array([1,2,3])\n","b = np.array([5,6,7])\n","\n","a[:,np.newaxis] * b[np.newaxis,:]"],"metadata":{"id":"qGlk7q8UM80B","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786477617,"user_tz":-540,"elapsed":4,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"056117d5-892a-472c-a5f8-9ecc76a825c5"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 5,  6,  7],\n","       [10, 12, 14],\n","       [15, 18, 21]])"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["np.einsum('i,j->ij', a, b)"],"metadata":{"id":"6H3N5-EhObND","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786812171,"user_tz":-540,"elapsed":367,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"5d6e2b77-de2c-42c4-c55f-25990df5c78e"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 5,  6,  7],\n","       [10, 12, 14],\n","       [15, 18, 21]])"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["If we omit an index in rhs of ->, then the omitted axis is summed up.\n","* `np.einsum('i,j->i', a, b)`\n","* $\\sum_j(\\mathbb a\\otimes\\mathbb b)_{i,j} = \\sum_ja_ib_j$\n"],"metadata":{"id":"C0hIb-TaOszR"}},{"cell_type":"code","source":["(a[:,np.newaxis] * b[np.newaxis,:]).sum(axis=1)"],"metadata":{"id":"gXO2fm9mOg4R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np.einsum('i,j->i', a, b)"],"metadata":{"id":"tUaAYCmdO8pA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* `np.einsum('i,j->j', a, b)`\n","* $\\sum_i(\\mathbb a\\otimes\\mathbb b)_{i,j} = \\sum_ia_ib_j$\n"],"metadata":{"id":"K1ikL_66IJ9M"}},{"cell_type":"code","source":["(a[:,np.newaxis] * b[np.newaxis,:]).sum(axis=0)"],"metadata":{"id":"eHg1wsV2O_ov"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np.einsum('i,j->j', a, b)"],"metadata":{"id":"OIihXFAAPCwG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["If the same index are occurred in lhs of ->, then we choose diagonal.\n","* `np.einsum('i,i->i', a, b)`\n","* $(\\mathbb a\\otimes\\mathbb b)_{i,i}=a_ib_i$"],"metadata":{"id":"r7M0lF_sPPcN"}},{"cell_type":"code","source":["a*b"],"metadata":{"id":"exdeUIvjPUpP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786863605,"user_tz":-540,"elapsed":392,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"2cb300ba-455a-4f73-9a35-ac9452056b29"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 5, 12, 21])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["np.einsum('i,i->i', a, b)"],"metadata":{"id":"WhUK1_M4POEW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786887008,"user_tz":-540,"elapsed":368,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"8c1f4602-e178-400b-8807-80a1b18e3a54"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 5, 12, 21])"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["* `np.einsum('i,i->', a, b)`\n","* $\\sum_i(\\mathbb a\\otimes\\mathbb b)_{i,i}=\\sum_ia_ib_i=\\mathbb a\\cdot\\mathbb b$"],"metadata":{"id":"VJSTFuVoH8o9"}},{"cell_type":"code","source":["np.dot(a,b)"],"metadata":{"id":"7aeu_otsO0Ti","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786908981,"user_tz":-540,"elapsed":374,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"17e27e5c-2310-4f6c-d584-1bad629345e8"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["38"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["(a*b).sum()"],"metadata":{"id":"6PvL1H9hIw5c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786917912,"user_tz":-540,"elapsed":352,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"a8606a3f-171e-4fda-cb4c-3eff7ce033bd"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["38"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["np.einsum('i,i->', a, b)"],"metadata":{"id":"tp3oEAGvI0w2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660786921102,"user_tz":-540,"elapsed":371,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"3a913149-b69b-46f5-c6d1-03f1893adf3c"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["38"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["$N$-D case ($N\\geq 3$)"],"metadata":{"id":"f_tU6PsgQG_M"}},{"cell_type":"markdown","source":["* $\\mathbb a\\in\\mathbb R^3, B\\in\\mathbb R^{2\\times 3}, \\mathbb a\\otimes B\\in\\mathbb R^{3\\times(2\\times 3)}$\n","* $(\\mathbb a\\otimes B)_{i,j,k} = a_ib_{j,k}$"],"metadata":{"id":"944FoqHOI8JI"}},{"cell_type":"code","source":["a = np.array([0,1,2])\n","B = np.array([[1,2,3],[4,5,6]])\n","\n","a[:,np.newaxis,np.newaxis] * B[np.newaxis,:,:]"],"metadata":{"id":"w9AfwV-cPSvn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787037593,"user_tz":-540,"elapsed":366,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"9b1da7ca-fba7-4372-8a46-05b8e05ce208"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[ 0,  0,  0],\n","        [ 0,  0,  0]],\n","\n","       [[ 1,  2,  3],\n","        [ 4,  5,  6]],\n","\n","       [[ 2,  4,  6],\n","        [ 8, 10, 12]]])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["np.einsum('i,jk->ijk', a, B)"],"metadata":{"id":"atWalkpAP7Fa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787057115,"user_tz":-540,"elapsed":359,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"67d37453-7123-447b-8847-5e681764d06f"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[ 0,  0,  0],\n","        [ 0,  0,  0]],\n","\n","       [[ 1,  2,  3],\n","        [ 4,  5,  6]],\n","\n","       [[ 2,  4,  6],\n","        [ 8, 10, 12]]])"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["np.einsum('i,jk->ijk', a, B).shape"],"metadata":{"id":"5tpvYCN6QC-d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787066070,"user_tz":-540,"elapsed":398,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"ec4bf819-f416-4d82-80cc-7a307084b9e4"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 2, 3)"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["* $(\\mathbb a\\otimes B)_{i,j,i}=a_ib_{j,i}$"],"metadata":{"id":"jMNMbkOFJYw6"}},{"cell_type":"code","source":["np.stack([(a[:,np.newaxis,np.newaxis] * B[np.newaxis,:,:])[i,:,i] for i in range(3)])"],"metadata":{"id":"7xGHlWfnRBy2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787080387,"user_tz":-540,"elapsed":411,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"6f454589-dff6-4ff1-e135-05cae1584a95"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  0],\n","       [ 2,  5],\n","       [ 6, 12]])"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["np.einsum('i,ji->ij', a, B)"],"metadata":{"id":"aZhkZofIRMg1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787129506,"user_tz":-540,"elapsed":416,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"3cc71552-7801-4ee6-bb93-38e70b8cd22d"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  0],\n","       [ 2,  5],\n","       [ 6, 12]])"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["* $\\sum_j(\\mathbb a\\otimes B)_{i,j,i}=\\sum_ja_ib_{j,i}=\\sum_iB_{i,j}a_j=B\\cdot\\mathbb a$"],"metadata":{"id":"9bZJXyf4KRIP"}},{"cell_type":"code","source":["np.dot(B,a)"],"metadata":{"id":"t1_c2s-ESlph","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787272136,"user_tz":-540,"elapsed":3,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"c46d3fde-585e-46b3-d7fc-4ed696a4d8f3"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 8, 17])"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["np.einsum('ij,j->i', B, a)"],"metadata":{"id":"9Z3wGfGMSlJu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787221744,"user_tz":-540,"elapsed":379,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"19148dc7-af97-40a7-c36c-7820a5536f84"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 8, 17])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["np.einsum('i,ji->j', a, B)"],"metadata":{"id":"_iT-mc0aS6xK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787337429,"user_tz":-540,"elapsed":383,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"58aaa0f2-5b98-4e17-d1f7-61a7a5bd27b2"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 8, 17])"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["Batch matrix product"],"metadata":{"id":"My0WHvE_TJhu"}},{"cell_type":"markdown","source":["* $x\\in\\mathbb R^{128\\times (3\\times 4)}, W\\in\\mathbb R^{4\\times 5}$\n","* $\\sum_j(x\\otimes W)_{b,i,j,j,k} = \\sum_jx_{b,i,j}W_{j,k}$"],"metadata":{"id":"2Bsgim8FL_OO"}},{"cell_type":"code","source":["x = np.random.rand(128,3,4)\n","W = np.random.rand(4,5)\n","\n","np.matmul(x,W).shape"],"metadata":{"id":"thapjlqbS-Ly","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787379875,"user_tz":-540,"elapsed":381,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"4633cc1d-680a-4e1d-f31f-4bfa13b84254"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(128, 3, 5)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["np.einsum('bij,jk->bik', x, W).shape"],"metadata":{"id":"3pjpOMf0TQV_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787384618,"user_tz":-540,"elapsed":378,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"4bbf849c-87ba-42fd-ff0b-4a9c136a8b59"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(128, 3, 5)"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["np.einsum('...j,jk->...k', x, W).shape"],"metadata":{"id":"nrQs1GknTZAF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787441876,"user_tz":-540,"elapsed":366,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"da953942-308c-400b-837e-141b0d858a79"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(128, 3, 5)"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["np.allclose(np.matmul(x,W), np.einsum('bij,jk->bik', x, W))"],"metadata":{"id":"0E4Vh5-KTpdn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787447638,"user_tz":-540,"elapsed":3,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"61aa83c5-8953-4035-e426-9f570483c7ec"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["np.allclose(np.matmul(x,W), np.einsum('...j,jk->...k', x, W))"],"metadata":{"id":"RcN2mJ98Tu2C","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660787454062,"user_tz":-540,"elapsed":386,"user":{"displayName":"김현태","userId":"03086644637186436559"}},"outputId":"6db9199f-4523-472d-edca-ccd937f89c3f"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":[""],"metadata":{"id":"iznUUVg6pWtx"},"execution_count":null,"outputs":[]}]}